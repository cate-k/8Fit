{"version":3,"file":"static/js/800.ed076f0d.chunk.js","mappings":";4TAsIA,eAYA,SAAgBA,EAAgBC,GAC9B,KAAMA,aAAaC,YACjB,MAAM,IAAIC,UAAU,yBAEvB,CAKD,SAAgBC,EAAmBH,GAEjC,OADAD,EAAgBC,GACTI,EAAAA,OAAOC,KAAKL,EAAEM,OAAQN,EAAEO,WAAYP,EAAEQ,OAC9C,KAkBqBC,EAAAA,WAKpB,WAAYC,EAAcC,GACxB,GADyC,WACpCC,OAAOC,UAAUH,GACpB,MAAM,IAAIR,UAAU,2BAYtB,KAAKQ,KAAOA,EAUZ,KAAKC,SAAWA,CACjB,gDAiBD,WACE,MAAO,EACR,wBAwDD,SAAQX,EAAgBc,GACtB,GAAI,EAAI,KAAKJ,KACX,MAAM,IAAIK,WAAW,sBAEvB,OAAO,KAAKL,IACb,0BAkBD,SAAUC,GACR,IAAMK,EAAKC,OAAOC,OAAO,KAAKC,YAAYC,WAG1C,OAFAH,OAAOI,OAAOL,EAAI,MAClBA,EAAGL,SAAWA,EACPK,CACR,0BAsBD,SAAUM,GAET,OA7JmBb,GAqKtB,SAAgBc,EAAiBC,EAAcC,GAC7C,OAAIA,EAAGd,SACEa,EAAO,IAAMC,EAAGd,SAAW,IAE7Ba,CACR,KAkFqBE,EAAAA,SAAAA,4GAYpB,WACE,MAAM,IAAIC,MAAM,6BACjB,OAdmBD,CAAuBjB,OAgChCmB,EAAAA,SAAAA,qBAGX,aAA8C,MAAlCC,EAAkC,uDAApB,EAAGlB,EAAiB,uCAC5C,GAD4C,WACtCC,OAAOC,UAAUgB,IAAkB,GAAKA,EAC5C,MAAM,IAAI3B,UAAU,4CAFsB,OAI5C,eAAO,EAAGS,IAKLkB,YAAcA,EATyB,CAU7C,kCAGD,WACE,OAAO,CACR,uBAGD,SAAO7B,GAAyB,IAAVc,EAAU,uDAAD,EAC7Bf,EAAgBC,GAChB,IAAM8B,EAAM9B,EAAEQ,OAASM,EACvB,OAAOiB,KAAKC,MAAMF,EAAM,KAAKD,YAC9B,uBAGD,SAAOI,EAAajC,EAAec,GACjC,OAAO,CACR,OA9BUc,CAAoBF,OAqDpBQ,EAAAA,SAAAA,qBAGX,WAAYC,GAAqD,MAA7BrB,EAA6B,uDAApB,EAAGH,EAAiB,uCAC/D,GAD+D,YACzDwB,aAAkB1B,GACtB,MAAM,IAAIP,UAAU,2BAGtB,IAAKU,OAAOC,UAAUC,GACpB,MAAM,IAAIZ,UAAU,uCANyC,OAS/D,cAAMiC,EAAOzB,KAAMC,GAAYwB,EAAOxB,WAGjCwB,OAASA,EAQd,EAAKrB,OAASA,EApBiD,CAqBhE,kCAGD,WACE,OAAS,KAAKqB,kBAAkBC,GACpB,KAAKD,kBAAkBE,CACpC,uBAGD,SAAOrC,GAAyB,IAAVc,EAAU,uDAAD,EAC7B,OAAO,KAAKqB,OAAOG,OAAOtC,EAAGc,EAAS,KAAKA,OAC5C,uBAGD,SAAOmB,EAAajC,GAAyB,IAAVc,EAAU,uDAAD,EAC1C,OAAO,KAAKqB,OAAOI,OAAON,EAAKjC,EAAGc,EAAS,KAAKA,OACjD,OAxCUoB,CAAqBR,OA2DrBU,EAAAA,SAAAA,qBACX,WAAY1B,EAAcC,GAAiB,MAEzC,GAFyC,UAErC,GADJ,cAAMD,EAAMC,IACCD,KACX,MAAM,IAAIK,WAAW,gCAHkB,QAK1C,iCAGD,SAAOf,GAAyB,IAAVc,EAAU,uDAAD,EAC7B,OAAOX,EAAmBH,GAAGwC,WAAW1B,EAAQ,KAAKJ,KACtD,uBAGD,SAAOuB,EAAajC,GAAyB,IAAVc,EAAU,uDAAD,EAE1C,OADAX,EAAmBH,GAAGyC,YAAYR,EAAKnB,EAAQ,KAAKJ,MAC7C,KAAKA,IACb,OAjBU0B,CAAa3B,OAoCb4B,EAAAA,SAAAA,qBACX,WAAY3B,EAAcC,GAAiB,MAEzC,GAFyC,UAErC,GADJ,cAAMD,EAAMC,IACCD,KACX,MAAM,IAAIK,WAAW,gCAHkB,QAK1C,iCAGD,SAAOf,GAAyB,IAAVc,EAAU,uDAAD,EAC7B,OAAOX,EAAmBH,GAAG0C,WAAW5B,EAAQ,KAAKJ,KACtD,uBAGD,SAAOuB,EAAajC,GAAyB,IAAVc,EAAU,uDAAD,EAE1C,OADAX,EAAmBH,GAAG2C,YAAYV,EAAKnB,EAAQ,KAAKJ,MAC7C,KAAKA,IACb,OAjBU2B,CAAe5B,OAoCfmC,EAAAA,SAAAA,qBACX,WAAYlC,EAAcC,GAAiB,MAEzC,GAFyC,UAErC,GADJ,cAAMD,EAAMC,IACCD,KACX,MAAM,IAAIK,WAAW,gCAHkB,QAK1C,iCAGD,SAAOf,GAAyB,IAAVc,EAAU,uDAAD,EAC7B,OAAOX,EAAmBH,GAAG6C,UAAU/B,EAAQ,KAAKJ,KACrD,uBAGD,SAAOuB,EAAajC,GAAyB,IAAVc,EAAU,uDAAD,EAE1C,OADAX,EAAmBH,GAAG8C,WAAWb,EAAKnB,EAAQ,KAAKJ,MAC5C,KAAKA,IACb,OAjBUkC,CAAYnC,OAoCZsC,EAAAA,SAAAA,qBACX,WAAYrC,EAAcC,GAAiB,MAEzC,GAFyC,UAErC,GADJ,cAAMD,EAAMC,IACCD,KACX,MAAM,IAAIK,WAAW,gCAHkB,QAK1C,iCAGD,SAAOf,GAAyB,IAAVc,EAAU,uDAAD,EAC7B,OAAOX,EAAmBH,GAAGgD,UAAUlC,EAAQ,KAAKJ,KACrD,uBAGD,SAAOuB,EAAajC,GAAyB,IAAVc,EAAU,uDAAD,EAE1C,OADAX,EAAmBH,GAAGiD,WAAWhB,EAAKnB,EAAQ,KAAKJ,MAC5C,KAAKA,IACb,OAjBUqC,CAActC,GAoB3B,IAAMyC,EAAQnB,KAAKoB,IAAI,EAAG,IAI1B,SAASC,EAAYnB,GACnB,IAAMoB,EAAOtB,KAAKC,MAAMC,EAAMiB,GAE9B,MAAO,CAACG,KAAAA,EAAMC,KADDrB,EAAOoB,EAAOH,EAE5B,CAED,SAASK,EAAaF,EAAcC,GAClC,OAAOD,EAAOH,EAAQI,CACvB,KAaYE,EAAAA,SAAAA,qBACX,WAAY7C,GAAiB,6BACrB,EAAGA,EACV,iCAGD,SAAOX,GAAyB,IAAVc,EAAU,uDAAD,EACvBR,EAASH,EAAmBH,GAC5BsD,EAAOhD,EAAOmD,aAAa3C,GAC3BuC,EAAO/C,EAAOmD,aAAa3C,EAAS,GAC1C,OAAOyC,EAAaF,EAAMC,EAC3B,uBAGD,SAAOrB,EAAajC,GAAyB,IAAVc,EAAU,uDAAD,EACpC4C,EAAQN,EAAYnB,GACpB3B,EAASH,EAAmBH,GAGlC,OAFAM,EAAOqD,cAAcD,EAAMJ,KAAMxC,GACjCR,EAAOqD,cAAcD,EAAML,KAAMvC,EAAS,GACnC,CACR,OApBU0C,CAAmB/C,OAkCnBmD,EAAAA,SAAAA,qBACX,WAAYjD,GAAiB,6BACrB,EAAGA,EACV,iCAGD,SAAOX,GAAyB,IAAVc,EAAU,uDAAD,EACvBR,EAASH,EAAmBH,GAC5BqD,EAAO/C,EAAOuD,aAAa/C,GAC3BwC,EAAOhD,EAAOuD,aAAa/C,EAAS,GAC1C,OAAOyC,EAAaF,EAAMC,EAC3B,uBAGD,SAAOrB,EAAajC,GAAyB,IAAVc,EAAU,uDAAD,EACpC4C,EAAQN,EAAYnB,GACpB3B,EAASH,EAAmBH,GAGlC,OAFAM,EAAOwD,cAAcJ,EAAML,KAAMvC,GACjCR,EAAOwD,cAAcJ,EAAMJ,KAAMxC,EAAS,GACnC,CACR,OApBU8C,CAAqBnD,OAkCrBsD,EAAAA,SAAAA,qBACX,WAAYpD,GAAiB,6BACrB,EAAGA,EACV,iCAGD,SAAOX,GAAyB,IAAVc,EAAU,uDAAD,EACvBR,EAASH,EAAmBH,GAC5BsD,EAAOhD,EAAOmD,aAAa3C,GAC3BuC,EAAO/C,EAAO0D,YAAYlD,EAAS,GACzC,OAAOyC,EAAaF,EAAMC,EAC3B,uBAGD,SAAOrB,EAAajC,GAAyB,IAAVc,EAAU,uDAAD,EACpC4C,EAAQN,EAAYnB,GACpB3B,EAASH,EAAmBH,GAGlC,OAFAM,EAAOqD,cAAcD,EAAMJ,KAAMxC,GACjCR,EAAO2D,aAAaP,EAAML,KAAMvC,EAAS,GAClC,CACR,OApBUiD,CAAkBtD,OAkClByD,EAAAA,SAAAA,qBACX,WAAYvD,GAAiB,6BACrB,EAAGA,EACV,iCAGD,SAAOX,GAAyB,IAAVc,EAAU,uDAAD,EACvBR,EAASH,EAAmBH,GAC5BqD,EAAO/C,EAAO6D,YAAYrD,GAC1BwC,EAAOhD,EAAOuD,aAAa/C,EAAS,GAC1C,OAAOyC,EAAaF,EAAMC,EAC3B,uBAGD,SAAOrB,EAAajC,GAAyB,IAAVc,EAAU,uDAAD,EACpC4C,EAAQN,EAAYnB,GACpB3B,EAASH,EAAmBH,GAGlC,OAFAM,EAAO8D,aAAaV,EAAML,KAAMvC,GAChCR,EAAOwD,cAAcJ,EAAMJ,KAAMxC,EAAS,GACnC,CACR,OApBUoD,CAAoBzD,OAiCpB4D,EAAAA,SAAAA,qBACX,WAAY1D,GAAiB,6BACrB,EAAGA,EACV,iCAGD,SAAOX,GAAyB,IAAVc,EAAU,uDAAD,EAC7B,OAAOX,EAAmBH,GAAGsE,YAAYxD,EAC1C,uBAGD,SAAOmB,EAAajC,GAAyB,IAAVc,EAAU,uDAAD,EAE1C,OADAX,EAAmBH,GAAGuE,aAAatC,EAAKnB,GACjC,CACR,OAdUuD,CAAc5D,OA2Bd+D,EAAAA,SAAAA,qBACX,WAAY7D,GAAiB,6BACrB,EAAGA,EACV,iCAGD,SAAOX,GAAyB,IAAVc,EAAU,uDAAD,EAC7B,OAAOX,EAAmBH,GAAGyE,YAAY3D,EAC1C,uBAGD,SAAOmB,EAAajC,GAAyB,IAAVc,EAAU,uDAAD,EAE1C,OADAX,EAAmBH,GAAG0E,aAAazC,EAAKnB,GACjC,CACR,OAdU0D,CAAgB/D,OA2BhBkE,EAAAA,SAAAA,qBACX,WAAYhE,GAAiB,6BACrB,EAAGA,EACV,iCAGD,SAAOX,GAAyB,IAAVc,EAAU,uDAAD,EAC7B,OAAOX,EAAmBH,GAAG4E,aAAa9D,EAC3C,uBAGD,SAAOmB,EAAajC,GAAyB,IAAVc,EAAU,uDAAD,EAE1C,OADAX,EAAmBH,GAAG6E,cAAc5C,EAAKnB,GAClC,CACR,OAdU6D,CAAelE,OA2BfqE,EAAAA,SAAAA,qBACX,WAAYnE,GAAiB,6BACrB,EAAGA,EACV,iCAGD,SAAOX,GAAyB,IAAVc,EAAU,uDAAD,EAC7B,OAAOX,EAAmBH,GAAG+E,aAAajE,EAC3C,uBAGD,SAAOmB,EAAajC,GAAyB,IAAVc,EAAU,uDAAD,EAE1C,OADAX,EAAmBH,GAAGgF,cAAc/C,EAAKnB,GAClC,CACR,OAdUgE,CAAiBrE,OAkCjBwE,EAAAA,SAAAA,qBAIX,WAAYC,EAA0BC,EAAgCxE,GAAiB,MACrF,GADqF,YAC/EuE,aAAyBzE,GAC7B,MAAM,IAAIP,UAAU,kCAEtB,KAAQiF,aAAiBzD,GAAmByD,EAAMC,WACxCxE,OAAOC,UAAUsE,IAAW,GAAKA,GACzC,MAAM,IAAIjF,UAAU,4EAGtB,IAAIQ,GAAQ,EATyE,QAU9EyE,aAAiBzD,IAChB,EAAIwD,EAAcxE,OACxBA,EAAOyE,EAAQD,EAAcxE,OAG/B,cAAMA,EAAMC,IAGPuE,cAAgBA,EAOrB,EAAKC,MAAQA,EAzBwE,CA0BtF,kCAGD,SAAQnF,GAAyB,IAAVc,EAAU,uDAAD,EAC9B,GAAI,GAAK,KAAKJ,KACZ,OAAO,KAAKA,KAEd,IAAIA,EAAO,EACPyE,EAAQ,KAAKA,MAIjB,GAHIA,aAAiBzD,IACnByD,EAAQA,EAAM7C,OAAOtC,EAAGc,IAEtB,EAAI,KAAKoE,cAAcxE,KACzBA,EAAOyE,EAAQ,KAAKD,cAAcxE,UAGlC,IADA,IAAI2E,EAAM,EACHA,EAAMF,GACXzE,GAAQ,KAAKwE,cAAcI,QAAQtF,EAAGc,EAASJ,KAC7C2E,EAGN,OAAO3E,CACR,uBAGD,SAAOV,GAAyB,IAAVc,EAAU,uDAAD,EACvBE,EAAU,GACZuE,EAAI,EACJJ,EAAQ,KAAKA,MAIjB,IAHIA,aAAiBzD,IACnByD,EAAQA,EAAM7C,OAAOtC,EAAGc,IAEnByE,EAAIJ,GACTnE,EAAGwE,KAAK,KAAKN,cAAc5C,OAAOtC,EAAGc,IACrCA,GAAU,KAAKoE,cAAcI,QAAQtF,EAAGc,GACxCyE,GAAK,EAEP,OAAOvE,CACR,uBAYD,SAAOiB,EAAUjC,GAAyB,IAAVc,EAAU,uDAAD,EACjC2E,EAAM,KAAKP,cACXxE,EAAeuB,EAAIyD,QAAO,SAAChF,EAAMiF,GACrC,OAAOjF,EAAO+E,EAAIlD,OAAOoD,EAAG3F,EAAGc,EAASJ,EACzC,GAAE,GAIH,OAHI,KAAKyE,iBAAiBzD,GACxB,KAAKyD,MAAM5C,OAAON,EAAIzB,OAAQR,EAAGc,GAE5BJ,CACR,OAzFUuE,CAAoBxE,OA4HpBmF,EAAAA,SAAAA,qBAIX,WAAYC,EAA8BlF,EAAmBmF,GAAwB,MACnF,GADmF,WAC7EC,MAAMC,QAAQH,KACXA,EAAOH,QAAO,SAACO,EAAKN,GAAN,OAAYM,GAAQN,aAAalF,CAAjC,IAA0C,GAC/D,MAAM,IAAIP,UAAU,4CAEjB,mBAAqBS,QAClBuF,IAAcJ,IACpBA,EAAiBnF,EACjBA,OAAWuF,GARsE,UAYlEL,GAZkE,IAYnF,2BAAyB,KAAdM,EAAc,QACvB,GAAK,EAAIA,EAAGzF,WACJwF,IAAcC,EAAGxF,SACvB,MAAM,IAAIgB,MAAM,uDAEnB,CAjBkF,+BAmBnF,IAAIjB,GAAQ,EACZ,IACEA,EAAOmF,EAAOH,QAAO,SAAChF,EAAMyF,GAAP,OAAczF,EAAOyF,EAAGb,SAAxB,GAAmC,EAGzD,CAFC,MAAOc,GAER,CAxBkF,OAyBnF,cAAM1F,EAAMC,IAYPkF,OAASA,EAWd,EAAKC,iBAAmBA,EAhD2D,CAiDpF,kCAGD,SAAQ9F,GAAyB,IAAVc,EAAU,uDAAD,EAC9B,GAAI,GAAK,KAAKJ,KACZ,OAAO,KAAKA,KAEd,IAAIA,EAAO,EACX,IACEA,EAAO,KAAKmF,OAAOH,QAAO,SAAChF,EAAMyF,GAC/B,IAAME,EAAMF,EAAGb,QAAQtF,EAAGc,GAE1B,OADAA,GAAUuF,EACH3F,EAAO2F,CACf,GAAE,EAGJ,CAFC,MAAOD,GACP,MAAM,IAAIrF,WAAW,qBACtB,CACD,OAAOL,CACR,uBAGD,SAAOV,GAAyB,IAAVc,EAAU,uDAAD,EAC7Bf,EAAgBC,GAChB,IAF8B,EAExBsG,EAAO,KAAKC,wBAFY,IAGb,KAAKV,QAHQ,IAG9B,2BAA8B,KAAnBM,EAAmB,QAK5B,QAJID,IAAcC,EAAGxF,WACnB2F,EAAKH,EAAGxF,UAAuBwF,EAAG7D,OAAOtC,EAAGc,IAE9CA,GAAUqF,EAAGb,QAAQtF,EAAGc,GACpB,KAAKgF,gBACD9F,EAAEQ,SAAWM,EACnB,KAEH,CAZ6B,+BAa9B,OAAOwF,CACR,uBAOD,SAAOrE,EAAQjC,GAAyB,MAAVc,EAAU,uDAAD,EAC/B0F,EAAc1F,EAChB2F,EAAa,EACbC,EAAY,EAHsB,IAIrB,KAAKb,QAJgB,IAItC,2BAA8B,KAAnBM,EAAmB,QACxBzF,EAAOyF,EAAGzF,KAEd,GADAgG,EAAa,EAAIhG,EAAQA,EAAO,OAC5BwF,IAAcC,EAAGxF,SAAU,CAC7B,IAAMgG,EAAK1E,EAAIkE,EAAGxF,eACduF,IAAcS,IAChBD,EAAYP,EAAG5D,OAAOoE,EAAI3G,EAAGc,GACzB,EAAIJ,IAGNA,EAAOyF,EAAGb,QAAQtF,EAAGc,IAG1B,CACD2F,EAAa3F,EACbA,GAAUJ,CACX,CApBqC,+BAyBtC,OAAQ+F,EAAaC,EAAaF,CACnC,0BAGD,SAAUlF,GACR,IADqB,EACfgF,EAAO,KAAKC,wBADG,IAEJ,KAAKV,QAFD,IAErB,2BAA8B,KAAnBM,EAAmB,aACvBD,IAAcC,EAAGxF,UACd,EAAIW,EAAOd,SACjB8F,EAAKH,EAAGxF,UAAYW,EAAOsF,QAE9B,CAPoB,+BAQrB,OAAON,CACR,0BAUD,SAAU3F,GACR,GAAI,kBAAoBA,EACtB,MAAM,IAAIT,UAAU,2BAFE,UAIP,KAAK2F,QAJE,IAIxB,2BAA8B,KAAnBM,EAAmB,QAC5B,GAAIA,EAAGxF,WAAaA,EAClB,OAAOwF,CAEV,CARuB,+BAUzB,yBAaD,SAASxF,GACP,GAAI,kBAAoBA,EACtB,MAAM,IAAIT,UAAU,2BAEtB,IAJuB,EAInBY,EAAS,EAJU,IAKN,KAAK+E,QALC,IAKvB,2BAA8B,KAAnBM,EAAmB,QAC5B,GAAIA,EAAGxF,WAAaA,EAClB,OAAOG,EAEL,EAAIqF,EAAGzF,KACTI,GAAU,EACD,GAAKA,IACdA,GAAUqF,EAAGzF,KAEhB,CAdsB,+BAgBxB,OAtLUkF,CAAqBnF,OAuMrBoG,EAAAA,WAEX,WAAYlG,GAAgB,UAK1B,KAAKA,SAAWA,CACjB,iCAMD,SAAOX,EAAgBc,GACrB,MAAM,IAAIa,MAAM,iCACjB,uBAMD,SAAOM,EAAQjC,EAAec,GAC5B,MAAM,IAAIa,MAAM,iCACjB,OAxBUkF,OA4CAC,EAAAA,SAAAA,qBAEX,WAAY3E,EAAwBxB,GAAiB,MACnD,GADmD,YAC5CwB,aAAkBT,GAChBS,EAAOiD,WACd,MAAM,IAAIlF,UAAU,qDAH6B,OAMnD,cAAMS,GAAYwB,EAAOxB,UAAY,YAIhCwB,OAASA,EAVqC,CAWpD,iCAGD,SAAOnC,EAAec,GACpB,OAAO,KAAKqB,OAAOG,OAAOtC,EAAGc,EAC9B,uBAGD,SAAOmB,EAAajC,EAAec,GACjC,OAAO,KAAKqB,OAAOI,OAAON,EAAKjC,EAAGc,EACnC,OAvBUgG,CAAiCD,OAqFjCE,EAAAA,SAAAA,qBAYX,WACIC,EACAC,EACAtG,GAAgB,MAEduG,EACJ,GAHkB,UAGbF,aAAiB5E,GACd4E,aAAiB3E,EACvB6E,EAAgB,IAAIJ,EAAyB,IAAI5E,EAAa8E,SACzD,GAAKA,aAAiBtF,GACfsF,EAAM5B,UAClB8B,EAAgB,IAAIJ,EAAyBE,OACxC,MAAMA,aAAiBH,GAC5B,MAAM,IAAI3G,UAAU,oEAGpBgH,EAAgBF,CACjB,CAID,QAHId,IAAce,IAChBA,EAAgB,QAEX,OAASA,GACNA,aAAyBxG,GACjC,MAAM,IAAIP,UAAU,0CAEtB,GAAI,OAAS+G,EAAe,CAC1B,GAAI,EAAIA,EAAcvG,KACpB,MAAM,IAAIiB,MAAM,8CAEduE,IAAce,EAActG,WAC9BsG,EAAgBA,EAAcE,UAAU,WAE3C,CAMD,IAAIzG,GAAQ,EACRuG,GAEG,IADLvG,EAAOuG,EAAcvG,QACAsG,aAAiB5E,GAC9B4E,aAAiB3E,KACvB3B,GAASwG,EAA2C/E,OAAOzB,OAG/D,cAAMA,EAAMC,IAUPuG,cAAgBA,EAOrB,EAAKE,wBAA2BJ,aAAiB5E,GACzC4E,aAAiB3E,EASzB,EAAK4E,cAAgBA,EAYrB,EAAKI,SAAW,GAGhB,IAAIC,EAAwB,EAAKC,wBAAwBC,KAA7B,MArFV,OAoGlB,EAAKC,iBAAmB,SAASxF,GAC/B,OAAOqF,EAAsBrF,EAC9B,EAeD,EAAKyF,uBAAyB,SAASC,GACrCL,EAAwBK,EAAIH,KAAK,KAClC,EAvHiB,CAwHnB,kCAGD,SAAQxH,GAAyB,IAAVc,EAAU,uDAAD,EAC9B,GAAI,GAAK,KAAKJ,KACZ,OAAO,KAAKA,KAKd,IAAMkH,EAAM,KAAKC,WAAW7H,EAAGc,GAC/B,IAAK8G,EACH,MAAM,IAAIjG,MAAM,qDAElB,OAAOiG,EAAItC,QAAQtF,EAAGc,EACvB,wCA+BD,SAAwBmB,GACtB,GAAIhB,OAAOG,UAAU0G,eAAeC,KAAK9F,EAAK,KAAKiF,cAAcvG,UAAW,CAC1E,GAAI,KAAKsG,eAAiB,KAAKA,cAActG,UACtCM,OAAOG,UAAU0G,eAAeC,KAAK9F,EAAK,KAAKgF,cAActG,UAClE,OAEF,IAAMiH,EAAM,KAAKP,SAASpF,EAAI,KAAKiF,cAAcvG,WACjD,GAAIiH,KACMA,EAAIzF,QACFyF,EAAIjH,UAAYM,OAAOG,UAAU0G,eAAeC,KAAK9F,EAAK2F,EAAIjH,WACxE,OAAOiH,CAEV,MACC,IAAK,IAAMI,KAAO,KAAKX,SAAU,CAC/B,IAAMO,EAAM,KAAKP,SAASW,GAC1B,GAAIJ,EAAIjH,UAAYM,OAAOG,UAAU0G,eAAeC,KAAK9F,EAAK2F,EAAIjH,UAChE,OAAOiH,CAEV,CAEH,MAAM,IAAIjG,MAAM,8BACjB,uBAQD,SAAO3B,GAAyB,IAC1BsG,EADgBxF,EAAU,uDAAD,EAEvBmH,EAAM,KAAKf,cACXF,EAAQiB,EAAI3F,OAAOtC,EAAGc,GACtBoH,EAAM,KAAKb,SAASL,GAC1B,QAAId,IAAcgC,EAAK,CACrB,IAAMjB,EAAgB,KAAKA,cACvBkB,EAAgB,EAChB,KAAKf,0BACPe,EAAiBF,EAAiC9F,OAAOzB,OAE3D4F,EAAO,KAAKC,yBACP0B,EAAItH,UAAYqG,EAGrBV,EAAKW,EAAetG,UAAasG,EAAe3E,OAAOtC,EAAGc,EAASqH,EACpE,MACC7B,EAAO4B,EAAI5F,OAAOtC,EAAGc,GAEvB,OAAOwF,CACR,uBAQD,SAAOrE,EAAmBjC,GAAyB,IAAVc,EAAU,uDAAD,EAC1C8G,EAAM,KAAKH,iBAAiBxF,GAClC,QAAIiE,IAAc0B,EAAK,CACrB,IAAMK,EAAM,KAAKf,cAGXgB,EAAM,KAAKjB,cACbkB,EAAgB,EAOpB,OANI,KAAKf,0BACPe,EAAiBF,EAAiC9F,OAAOzB,MAE3DuH,EAAI1F,OAAON,EAAIgG,EAAItH,UAAWX,EAAGc,GAG1BqH,EAAgBD,EAAI3F,OAAON,EAAIiG,EAAIvH,UAAYX,EAAGc,EAASqH,EACnE,CACD,OAAOP,EAAIrF,OAAON,EAAKjC,EAAGc,EAC3B,2BAeD,SAAWsH,EAAiBjG,EAA8BxB,GACxD,IAAMK,EAAK,IAAIqH,EAAc,KAAMD,EAASjG,EAAQxB,GAEpD,OADA,KAAK0G,SAASe,GAAWpH,EAClBA,CACR,2BAgBD,SAAWsH,GAAmC,IACxCF,EAD8BtH,EAAU,uDAAD,EAO3C,OAJEsH,EADEE,aAAcrI,WACN,KAAKiH,cAAc5E,OAAOgG,EAAIxH,GAE9BwH,EAEL,KAAKjB,SAASe,EACtB,OA1SUrB,CAActG,OA0Ud4H,EAAAA,SAAAA,qBAOX,WAAYE,EAAcH,EAAiBjG,EAAqCxB,GAAgB,MAC9F,GAD8F,YACxF4H,aAAiBxB,GACrB,MAAM,IAAI7G,UAAU,yBAEtB,IAAMU,OAAOC,UAAUuH,IAAc,EAAIA,EACvC,MAAM,IAAIlI,UAAU,4CAOtB,GALK,kBAAoBiC,QACjB+D,IAAcvF,IACpBA,EAAWwB,EACXA,EAAS,MAEPA,EAAQ,CACV,KAAMA,aAAkB1B,GACtB,MAAM,IAAIP,UAAU,2BAEtB,GAAK,OAASqI,EAAMtB,eACZ,GAAK9E,EAAOzB,MACZyB,EAAOzB,KAAO6H,EAAMtB,cAAcvG,KACxC,MAAM,IAAIiB,MAAM,iDAElB,GAAI,kBAAoBhB,EACtB,MAAM,IAAIT,UAAU,sCAEvB,CACD,IAAIQ,EAAO6H,EAAM7H,KAzB6E,OA0B1F,EAAI6H,EAAM7H,MAEP,IADLA,EAAOyB,EAASA,EAAOzB,KAAO,IACX6H,EAAMnB,0BACvB1G,GAAS6H,EAAMrB,cAA2C/E,OAAOzB,OAGrE,cAAMA,EAAMC,IAGP4H,MAAQA,EAKb,EAAKH,QAAUA,EAMf,EAAKjG,OAASA,GAAU,KA9CsE,CA+C/F,kCAGD,SAAQnC,GAAyB,IAAVc,EAAU,uDAAD,EAC9B,GAAI,GAAK,KAAKJ,KAGZ,OAAO,KAAKA,KAEd,IAAIyH,EAAgB,EAChB,KAAKI,MAAMnB,0BACbe,EAAiB,KAAKI,MAAMrB,cAA2C/E,OAAOzB,MAGhF,IAAIA,EAAO,EAIX,OAHI,KAAKyB,SACPzB,EAAO,KAAKyB,OAAOmD,QAAQtF,EAAGc,EAASqH,IAElCA,EAAgBzH,CACxB,uBAGD,SAAOV,GAAyB,IAAVc,EAAU,uDAAD,EACvBwF,EAAO,KAAKC,wBAClB,GAAI,OAAS,KAAKgC,MAAMV,WAAW7H,EAAGc,GACpC,MAAM,IAAIa,MAAM,oBAElB,IAAIwG,EAAgB,EAWpB,OAVI,KAAKI,MAAMnB,0BACbe,EAAiB,KAAKI,MAAMrB,cAA2C/E,OAAOzB,MAE5E,KAAKyB,OACPmE,EAAK,KAAK3F,UAAY,KAAKwB,OAAOG,OAAOtC,EAAGc,EAASqH,GAC5C,KAAKxH,SACd2F,EAAK,KAAK3F,WAAY,EACb,KAAK4H,MAAMnB,0BACpBd,EAAK,KAAKiC,MAAMrB,cAAcvG,UAAY,KAAKyH,SAE1C9B,CACR,uBAGD,SAAOrE,EAAmBjC,GAAyB,IAAVc,EAAU,uDAAD,EAC5CqH,EAAgB,EAIpB,GAHI,KAAKI,MAAMnB,0BACbe,EAAiB,KAAKI,MAAMrB,cAA2C/E,OAAOzB,MAE5E,KAAKyB,SACAlB,OAAOG,UAAU0G,eAAeC,KAAK9F,EAAK,KAAKtB,UACtD,MAAM,IAAIT,UAAU,0BAA4B,KAAKS,UAEvD,KAAK4H,MAAMrB,cAAc3E,OAAO,KAAK6F,QAASpI,EAAGc,GACjD,IAAIJ,EAAOyH,EACX,GAAI,KAAKhG,SACP,KAAKA,OAAOI,OAAON,EAAI,KAAKtB,UAAWX,EAAGc,EAASqH,GACnDzH,GAAQ,KAAKyB,OAAOmD,QAAQtF,EAAGc,EAASqH,GACnC,GAAK,KAAKI,MAAM7H,MACbA,EAAO,KAAK6H,MAAM7H,MACxB,MAAM,IAAIiB,MAAM,6CAGpB,OAAOjB,CACR,0BAID,SAAUY,GACR,GAAI,KAAKa,OACP,OAAO,KAAKA,OAAOqG,UAAUlH,EAGhC,OA7HU+G,CAAsB5H,GAsInC,SAASgI,EAAiB9C,GAIxB,OAHI,EAAIA,IACNA,GAAK,YAEAA,CACR,KAiCY+C,EAAAA,SAAAA,qBAQX,WAAYC,EAAqBC,EAAuBjI,GAAiB,MACvE,GADuE,YAChEgI,aAAgBvG,GACbuG,aAAgBtG,GACxB,MAAM,IAAInC,UAAU,wCAOtB,GALK,kBAAoB0I,QACjB1C,IAAcvF,IACpBA,EAAWiI,EACXA,GAAM,GAEJ,EAAID,EAAKjI,KACX,MAAM,IAAIK,WAAW,+BAEvB,cAAM4H,EAAKjI,KAAMC,IAKZgI,KAAOA,EASZ,EAAKC,MAAQA,EAQb,EAAK/C,OAAS,GAKd,IAAIgD,EAAQ,EAxC2D,OAyCvE,EAAKC,gBAAkB,SAASnD,GAE9B,OADAkD,EAAQJ,EAAiB9C,GAClB,IACR,EACD,EAAKoD,gBAAkB,WACrB,OAAOF,CACR,EA/CsE,CAgDxE,iCAGD,SAAO7I,GAAyB,IAAVc,EAAU,uDAAD,EACvBwF,EAAO,KAAKC,wBACZsC,EAAQ,KAAKF,KAAKrG,OAAOtC,EAAGc,GAClC,KAAKgI,gBAAgBD,GAHS,UAIb,KAAKhD,QAJQ,IAI9B,2BAA8B,KAAnBM,EAAmB,aACxBD,IAAcC,EAAGxF,WACnB2F,EAAKH,EAAGxF,UAAYwF,EAAG7D,OAAOtC,GAEjC,CAR6B,+BAS9B,OAAOsG,CACR,uBAOD,SAAOrE,EAAmBjC,GAAyB,IAAVc,EAAU,uDAAD,EAC1C+H,EAAQ,KAAKF,KAAKrG,OAAOtC,EAAGc,GAClC,KAAKgI,gBAAgBD,GAF4B,UAGhC,KAAKhD,QAH2B,IAGjD,2BAA8B,KAAnBM,EAAmB,QAC5B,QAAID,IAAcC,EAAGxF,SAAU,CAC7B,IAAMgG,EAAK1E,EAAIkE,EAAGxF,eACduF,IAAcS,GAChBR,EAAG5D,OAAOoE,EAEb,CACF,CAVgD,+BAWjD,OAAO,KAAKgC,KAAKpG,OAAO,KAAKwG,kBAAmB/I,EAAGc,EACpD,yBAWD,SAASkI,EAAcrI,GACrB,IAAMsI,EAAK,IAAIC,EAAS,KAAMF,EAAMrI,GAEpC,OADA,KAAKkF,OAAOL,KAAKyD,GACVA,CACR,2BAWD,SAAWtI,GAET,IAAMsI,EAAK,IAAIE,EAAQ,KAAMxI,GAE7B,OADA,KAAKkF,OAAOL,KAAKyD,GACVA,CACR,yBAUD,SAAStI,GACP,GAAI,kBAAoBA,EACtB,MAAM,IAAIT,UAAU,2BAFC,UAIN,KAAK2F,QAJC,IAIvB,2BAA8B,KAAnBM,EAAmB,QAC5B,GAAIA,EAAGxF,WAAaA,EAClB,OAAOwF,CAEV,CARsB,+BAUxB,OA3IUuC,CAAqBjI,OAkKrByI,EAAAA,WAOX,WAAYE,EAAyBJ,EAAcrI,GACjD,GADiE,YAC3DyI,aAAqBV,GACzB,MAAM,IAAIxI,UAAU,oCAEtB,IAAMU,OAAOC,UAAUmI,IAAW,GAAKA,EACrC,MAAM,IAAI9I,UAAU,iCAEtB,IAAMmJ,EAAY,EAAID,EAAU1I,KAC1B4I,EAAWF,EAAUvD,OAAOH,QAAO,SAAC6D,EAAKpD,GAAN,OAAaoD,EAAMpD,EAAG6C,IAAtB,GAA4B,GACrE,GAAKA,EAAOM,EAAYD,EACtB,MAAM,IAAI1H,MAAM,sCACG0H,EAAYC,GAAY,OACzBD,EAAY,YAKhC,KAAKD,UAAYA,EAGjB,KAAKJ,KAAOA,EAOZ,KAAKQ,WAAa,GAAKR,GAAQ,EAC3B,KAAOA,IACT,KAAKQ,UAAY,YAMnB,KAAKC,MAAQH,EACT,KAAKF,UAAUR,MACjB,KAAKa,MAAQJ,EAAYC,EAAWN,GAKtC,KAAKU,SAAWjB,EAAiB,KAAKe,WAAa,KAAKC,OAYxD,KAAK9I,SAAWA,CACjB,iCAID,SAAOX,EAAgBc,GAIrB,OAFkB2H,EADL,KAAKW,UAAUL,kBACc,KAAKW,YACnB,KAAKD,KAElC,uBAOD,SAAOZ,GACL,GAAI,kBAAoBA,IAChBjI,OAAOC,UAAUgI,IACjBA,IAAUJ,EAAiBI,EAAQ,KAAKW,WAC9C,MAAM,IAAItJ,UAAUqB,EAAiB,kBAAmB,MAClC,wCAA0C,KAAKiI,WAEvE,IAAMb,EAAO,KAAKS,UAAUL,kBACtBY,EAAYlB,EAAiBI,GAAS,KAAKY,OACjD,KAAKL,UAAUN,gBAAgBL,EAAiBE,GAAQ,KAAKe,UAC5BC,EAClC,OAzFUT,OA6GAC,EAAAA,SAAAA,qBACX,WAAYC,EAAyBzI,GAAgB,6BAC7CyI,EAAW,EAAGzI,EACrB,iCAKD,SAAOX,EAAgBc,GACrB,QAAQ,0CAAcd,EAAGc,EAC1B,uBAGD,SAAO+H,GACD,mBAAqBA,IAEvBA,GAASA,GAEX,0CAAaA,EACd,OAnBUM,CAAgBD,OAqChBU,EAAAA,SAAAA,qBAEX,WAAYpJ,EAAiCG,GAAiB,MAC5D,GAD4D,YACpDH,aAAkBkB,GAAmBlB,EAAO4E,WAC1CxE,OAAOC,UAAUL,IAAY,GAAKA,GAC1C,MAAM,IAAIN,UAAU,yEAItB,IAAIQ,GAAQ,EAPgD,OAQtDF,aAAkBkB,IACtBhB,EAAOF,IAET,cAAME,EAAMC,IAOPH,OAASA,EAlB8C,CAmB7D,kCAGD,SAAQR,EAAec,GACrB,IAAIJ,EAAO,KAAKA,KAIhB,OAHI,EAAIA,IACNA,EAAQ,KAAKF,OAA0B8B,OAAOtC,EAAGc,IAE5CJ,CACR,uBAGD,SAAOV,GAAyB,IAAVc,EAAU,uDAAD,EACzBJ,EAAO,KAAKA,KAIhB,OAHI,EAAIA,IACNA,EAAQ,KAAKF,OAA0B8B,OAAOtC,EAAGc,IAE5CX,EAAmBH,GAAG6J,MAAM/I,EAAQA,EAASJ,EACrD,uBAOD,SAAOuB,EAAiBjC,EAAec,GACrC,IAAIJ,EAAO,KAAKF,OAIhB,GAHI,KAAKA,kBAAkBkB,IACzBhB,EAAOuB,EAAIzB,UAEPyB,aAAehC,YAAcS,IAASuB,EAAIzB,QAC9C,MAAM,IAAIN,UAAUqB,EAAiB,cAAe,MAC9B,qBAAuBb,EAAO,uBAEtD,GAAKI,EAASJ,EAAQV,EAAEQ,OACtB,MAAM,IAAIO,WAAW,gCAEvB,IAAM+I,EAAY3J,EAAmB8B,GAKrC,OAJA9B,EAAmBH,GAAG+J,MAAMD,EAAUE,SAAS,OAAQlJ,EAAQJ,EAAM,OACjE,KAAKF,kBAAkBkB,GACzB,KAAKlB,OAAO+B,OAAO7B,EAAMV,EAAGc,GAEvBJ,CACR,OAhEUkJ,CAAanJ,OAgFbwJ,EAAAA,SAAAA,qBACX,WAAYtJ,GAAiB,8BACpB,EAAGA,EACX,kCAGD,SAAQX,GAAyB,IAAVc,EAAU,uDAAD,EAC9Bf,EAAgBC,GAEhB,IADA,IAAIqF,EAAMvE,EACFuE,EAAMrF,EAAEQ,QAAY,IAAMR,EAAEqF,IAClCA,GAAO,EAET,OAAO,EAAIA,EAAMvE,CAClB,uBAGD,SAAOd,GAAyB,IAAVc,EAAU,uDAAD,EACvBJ,EAAO,KAAK4E,QAAQtF,EAAGc,GAC7B,OAAOX,EAAmBH,GAAG6J,MAAM/I,EAAQA,EAASJ,EAAO,GAAGsJ,SAAS,QACxE,uBAGD,SAAO/H,EAAajC,GAAyB,IAAVc,EAAU,uDAAD,EAItC,kBAAoBmB,IACtBA,EAAMiI,OAAOjI,IAEf,IAAMkI,EAAO/J,EAAAA,OAAOC,KAAK4B,EAAK,QACxBvB,EAAOyJ,EAAK3J,OAClB,GAAKM,EAASJ,EAAQV,EAAEQ,OACtB,MAAM,IAAIO,WAAW,4BAEvB,IAAMT,EAASH,EAAmBH,GAGlC,OAFAmK,EAAKC,KAAK9J,EAAQQ,GAClBR,EAAOQ,EAASJ,GAAQ,EACjBA,EAAO,CACf,OAtCUuJ,CAAgBxJ,OA4DhB4J,EAAAA,SAAAA,qBAEX,WAAYC,EAA2B3J,GAAiB,MAKtD,GALsD,UACjD,kBAAoB2J,QAAapE,IAAcvF,IAClDA,EAAW2J,EACXA,OAAUpE,QAERA,IAAcoE,EAChBA,GAAW,OACN,IAAK1J,OAAOC,UAAUyJ,GAC3B,MAAM,IAAIpK,UAAU,8BARgC,OAWtD,eAAO,EAAGS,IAUL2J,QAAUA,EArBuC,CAsBvD,kCAGD,SAAQtK,GAAyB,IAAVc,EAAU,uDAAD,EAE9B,OADAf,EAAgBC,GACTA,EAAEQ,OAASM,CACnB,uBAGD,SAAOd,GAAyB,IAAVc,EAAU,uDAAD,EACvBJ,EAAO,KAAK4E,QAAQtF,EAAGc,GAC7B,GAAK,GAAK,KAAKwJ,SACP,KAAKA,QAAU5J,EACrB,MAAM,IAAIK,WAAW,+BAEvB,OAAOZ,EAAmBH,GAAG6J,MAAM/I,EAAQA,EAASJ,GAAMsJ,SAAS,QACpE,uBAGD,SAAO/H,EAA4BjC,GAAyB,IAAVc,EAAU,uDAAD,EAIrD,kBAAoBmB,IACtBA,EAAMiI,OAAOjI,IAEf,IAAMkI,EAAO/J,EAAAA,OAAOC,KAAK4B,EAAK,QACxBvB,EAAOyJ,EAAK3J,OAClB,GAAK,GAAK,KAAK8J,SACP,KAAKA,QAAU5J,EACrB,MAAM,IAAIK,WAAW,+BAEvB,GAAKD,EAASJ,EAAQV,EAAEQ,OACtB,MAAM,IAAIO,WAAW,4BAGvB,OADAoJ,EAAKC,KAAKjK,EAAmBH,GAAIc,GAC1BJ,CACR,OA7DU2J,CAAa5J,OAmFb8J,EAAAA,SAAAA,qBAEX,WAAY1B,EAAUlI,GAAiB,wBACrC,cAAM,EAAGA,IAWJkI,MAAQA,EAZwB,CAatC,iCAGD,SAAO7I,EAAgBc,GACrB,OAAO,KAAK+H,KACb,uBAGD,SAAO5G,EAAQjC,EAAgBc,GAE7B,OAAO,CACR,OA1BUyJ,CAAoB9J,GAiCpB+J,EAAAA,GAAU,SAACrI,EAAwBrB,EAAiBH,GAA1C,OACnB,IAAIuB,EAAaC,EAAQrB,EAAQH,EADd,EAKV6J,EAAAA,GAAM,SAAC7J,GAAD,OAA6B,IAAIyB,EAAK,EAAGzB,EAAzC,EAIN6J,EAAAA,GAAO,SAAC7J,GAAD,OAA6B,IAAIyB,EAAK,EAAGzB,EAAzC,EAQP6J,EAAAA,GAAO,SAAC7J,GAAD,OAA6B,IAAIyB,EAAK,EAAGzB,EAAzC,EAYP6J,EAAAA,GAAQ,SAAC7J,GAAD,OAAmC,IAAI6C,EAAW7C,EAAlD,EAoDR6J,EAAAA,GAAQ,SAAC7J,GAAD,OAAkC,IAAIoD,EAAUpD,EAAhD,EAuCR6J,EAAAA,GAAU,SAAI3E,EAA8BlF,EAAmBmF,GAArD,OACnB,IAAIF,EAAaC,EAAQlF,EAAUmF,EADhB,EAQV0E,EAAAA,GAAO,SAAItF,EAA0BC,EAAgCxE,GAA9D,OAChB,IAAIsE,EAAYC,EAAeC,EAAOxE,EADtB,EAaP6J,EAAAA,GAAQ,SAAChK,EAAiCG,GAAlC,OAA8D,IAAIiJ,EAAKpJ,EAAQG,EAA/E,4QC1kFd,SAAS8J,EAAOC,GACnB,IAAK9J,OAAO+J,cAAcD,IAAMA,EAAI,EAChC,MAAM,IAAI/I,MAAJ,kCAAqC+I,GAClD,CAKM,SAASE,EAAM5K,GAClB,KAAMA,aAAaC,YACf,MAAM,IAAIC,UAAU,uBAFS,2BAAT2K,EAAS,iCAATA,EAAS,kBAGjC,GAAIA,EAAQrK,OAAS,IAAMqK,EAAQC,SAAS9K,EAAEQ,QAC1C,MAAM,IAAIN,UAAJ,wCAA+C2K,EAA/C,2BAAyE7K,EAAEQ,QACxF,CAoBD,IAAMuK,EAAS,CACXN,OAAAA,EACAO,KA/BG,SAAchL,GACjB,GAAiB,mBAANA,EACP,MAAM,IAAI2B,MAAJ,gCAAmC3B,GAChD,EA6BG4K,MAAAA,EACAK,KAvBG,SAAcA,GACjB,GAAoB,oBAATA,GAA8C,oBAAhBA,EAAK/J,OAC1C,MAAM,IAAIS,MAAM,mDACpB8I,EAAOQ,EAAKC,WACZT,EAAOQ,EAAKE,SACf,EAmBGC,OAlBG,SAAgBC,GAAgC,IAAtBC,IAAsB,yDACnD,GAAID,EAASE,UACT,MAAM,IAAI5J,MAAM,oCACpB,GAAI2J,GAAiBD,EAASG,SAC1B,MAAM,IAAI7J,MAAM,wCACvB,EAcG8J,OAbG,SAAgBC,EAAKL,GACxBT,EAAMc,GACN,IAAMC,EAAMN,EAASH,UACrB,GAAIQ,EAAIlL,OAASmL,EACb,MAAM,IAAIhK,MAAJ,gEAAmEgK,GAEhF,GASD,ICnCaC,GCJY,kBAATC,MAAqB,WAAYA,MAAOA,KAAKC,ODI1C,SAACC,GAAD,OAAS,IAAIC,YAAYD,EAAIzL,OAAQyL,EAAIxL,WAAYwB,KAAKC,MAAM+J,EAAIE,WAAa,GAAjF,GAENC,EAAa,SAACH,GAAD,OAAS,IAAII,SAASJ,EAAIzL,OAAQyL,EAAIxL,WAAYwL,EAAIE,WAAtD,EAEbG,EAAO,SAACzD,EAAM/B,GAAP,OAAkB+B,GAAS,GAAK/B,EAAW+B,IAAS/B,CAApD,EAIpB,KAHgF,KAA5D,IAAI3G,WAAW,IAAI+L,YAAY,CAAC,YAAa1L,QAAQ,IAIrE,MAAM,IAAIqB,MAAM,+CACNoE,MAAM1F,KAAK,CAAEG,OAAQ,MAAO,SAACmF,EAAGJ,GAAJ,OAAUA,EAAEyE,SAAS,IAAIqC,SAAS,EAAG,IAArC,IAwDnC,SAASC,EAAQC,GAGpB,GAFoB,kBAATA,IACPA,EARD,SAAqBC,GACxB,GAAmB,kBAARA,EACP,MAAM,IAAItM,UAAJ,kDAAyDsM,IAEnE,OAAO,IAAIC,aAAclK,OAAOiK,EACnC,CAGcE,CAAYH,MACjBA,aAAgBtM,YAClB,MAAM,IAAIC,UAAJ,wDAA+DqM,EAA/D,MACV,OAAOA,CACV,CAoBM,IAAMI,EAAb,4EAEI,WACI,OAAOC,KAAKC,YACf,KAJL,KAcO,SAASC,EAAgBC,GAC5B,IAAMC,EAAQ,SAACC,GAAD,OAAaF,IAAkBG,OAAOZ,EAAQW,IAAUE,QAAxD,EACRC,EAAML,IAIZ,OAHAC,EAAM9B,UAAYkC,EAAIlC,UACtB8B,EAAM7B,SAAWiC,EAAIjC,SACrB6B,EAAM9L,OAAS,kBAAM6L,GAAN,EACRC,CACV,CEvGM,IAAMK,EAAb,0CACI,WAAYlC,EAAUD,EAAWoC,EAAWC,GAAM,6BAC9C,gBACKpC,SAAWA,EAChB,EAAKD,UAAYA,EACjB,EAAKoC,UAAYA,EACjB,EAAKC,KAAOA,EACZ,EAAK/B,UAAW,EAChB,EAAKhL,OAAS,EACd,EAAKgN,IAAM,EACX,EAAKjC,WAAY,EACjB,EAAKjL,OAAS,IAAIL,WAAWkL,GAC7B,EAAKsC,KAAOvB,EAAW,EAAK5L,QAXkB,CAYjD,CAbL,qCAcI,SAAOiM,GACHxB,EAAAA,OAAc6B,MAId,IAHA,IAAQa,EAA2Bb,KAA3Ba,KAAMnN,EAAqBsM,KAArBtM,OAAQ6K,EAAayB,KAAbzB,SAEhBuC,GADNnB,EAAOD,EAAQC,IACE/L,OACRgN,EAAM,EAAGA,EAAME,GAAM,CAC1B,IAAMC,EAAO5L,KAAK4J,IAAIR,EAAWyB,KAAKY,IAAKE,EAAMF,GAEjD,GAAIG,IAASxC,EAMb7K,EAAOsN,IAAIrB,EAAKsB,SAASL,EAAKA,EAAMG,GAAOf,KAAKY,KAChDZ,KAAKY,KAAOG,EACZH,GAAOG,EACHf,KAAKY,MAAQrC,IACbyB,KAAKkB,QAAQL,EAAM,GACnBb,KAAKY,IAAM,QATX,IADA,IAAMO,EAAW7B,EAAWK,GACrBpB,GAAYuC,EAAMF,EAAKA,GAAOrC,EACjCyB,KAAKkB,QAAQC,EAAUP,EAUlC,CAGD,OAFAZ,KAAKpM,QAAU+L,EAAK/L,OACpBoM,KAAKoB,aACEpB,IACV,GAvCL,wBAwCI,SAAWlB,GACPX,EAAAA,OAAc6B,MACd7B,EAAAA,OAAcW,EAAKkB,MACnBA,KAAKpB,UAAW,EAIhB,IAAQlL,EAAiCsM,KAAjCtM,OAAQmN,EAAyBb,KAAzBa,KAAMtC,EAAmByB,KAAnBzB,SAAUoC,EAASX,KAATW,KAC1BC,EAAQZ,KAARY,IAENlN,EAAOkN,KAAS,IAChBZ,KAAKtM,OAAOuN,SAASL,GAAKS,KAAK,GAE3BrB,KAAKU,UAAYnC,EAAWqC,IAC5BZ,KAAKkB,QAAQL,EAAM,GACnBD,EAAM,GAGV,IAAK,IAAIjI,EAAIiI,EAAKjI,EAAI4F,EAAU5F,IAC5BjF,EAAOiF,GAAK,GAxExB,SAAsBkI,EAAMlN,EAAYsI,EAAO0E,GAC3C,GAAiC,oBAAtBE,EAAKS,aACZ,OAAOT,EAAKS,aAAa3N,EAAYsI,EAAO0E,GAChD,IAAMY,EAAOC,OAAO,IACdC,EAAWD,OAAO,YAClBE,EAAK1N,OAAQiI,GAASsF,EAAQE,GAC9BE,EAAK3N,OAAOiI,EAAQwF,GACpBG,EAAIjB,EAAO,EAAI,EACfkB,EAAIlB,EAAO,EAAI,EACrBE,EAAKiB,UAAUnO,EAAaiO,EAAGF,EAAIf,GACnCE,EAAKiB,UAAUnO,EAAakO,EAAGF,EAAIhB,EACtC,CAiEOW,CAAaT,EAAMtC,EAAW,EAAGiD,OAAqB,EAAdxB,KAAKpM,QAAa+M,GAC1DX,KAAKkB,QAAQL,EAAM,GACnB,IAAMkB,EAAQzC,EAAWR,GACzBkB,KAAKgC,MAAMC,SAAQ,SAAClJ,EAAGJ,GAAJ,OAAUoJ,EAAMD,UAAU,EAAInJ,EAAGI,EAAG4H,EAApC,GACtB,GAnEL,oBAoEI,WACI,IAAQjN,EAAsBsM,KAAtBtM,OAAQ4K,EAAc0B,KAAd1B,UAChB0B,KAAKkC,WAAWxO,GAChB,IAAMyO,EAAMzO,EAAOuJ,MAAM,EAAGqB,GAE5B,OADA0B,KAAKoC,UACED,CACV,GA1EL,wBA2EI,SAAWE,GAAI,MACXA,IAAOA,EAAK,IAAIrC,KAAKzL,cACrB,EAAA8N,GAAGrB,IAAH,gBAAUhB,KAAKgC,QACf,IAAQzD,EAAuDyB,KAAvDzB,SAAU7K,EAA6CsM,KAA7CtM,OAAQE,EAAqCoM,KAArCpM,OAAQgL,EAA6BoB,KAA7BpB,SAAUD,EAAmBqB,KAAnBrB,UAAWiC,EAAQZ,KAARY,IAOvD,OANAyB,EAAGzO,OAASA,EACZyO,EAAGzB,IAAMA,EACTyB,EAAGzD,SAAWA,EACdyD,EAAG1D,UAAYA,EACX/K,EAAS2K,GACT8D,EAAG3O,OAAOsN,IAAItN,GACX2O,CACV,KAtFL,GAA0BtC,GChBpBuC,EAAad,OAAO,WAAK,IAAK,GAC9BD,EAAOC,OAAO,IAEb,SAASe,EAAQzE,GAAe,IAAZ0E,EAAY,wDACnC,OAAIA,EACO,CAAEZ,EAAG5N,OAAO8J,EAAIwE,GAAaT,EAAG7N,OAAQ8J,GAAKyD,EAAQe,IACzD,CAAEV,EAAsC,EAAnC5N,OAAQ8J,GAAKyD,EAAQe,GAAiBT,EAA4B,EAAzB7N,OAAO8J,EAAIwE,GACnE,CAqCD,IAOMG,EAAM,CACRF,QAAAA,EAASzL,MA5CN,SAAe4L,GAGlB,IAHmC,IAAZF,EAAY,wDAC/BG,EAAK,IAAIvD,YAAYsD,EAAI9O,QACzBgP,EAAK,IAAIxD,YAAYsD,EAAI9O,QACpB+E,EAAI,EAAGA,EAAI+J,EAAI9O,OAAQ+E,IAAK,CACjC,MAAiB4J,EAAQG,EAAI/J,GAAI6J,GAAzBZ,EAAR,EAAQA,EAAGC,EAAX,EAAWA,EADsB,EAEhB,CAACD,EAAGC,GAApBc,EAAGhK,GAF6B,KAEzBiK,EAAGjK,GAFsB,IAGpC,CACD,MAAO,CAACgK,EAAIC,EACf,EAoCmBC,MAnCC,SAACjB,EAAGC,GAAJ,OAAWL,OAAOI,IAAM,IAAML,EAAQC,OAAOK,IAAM,EAAnD,EAoCjBiB,MAlCU,SAAClB,EAAGC,EAAGkB,GAAP,OAAanB,IAAMmB,CAAnB,EAkCHC,MAjCG,SAACpB,EAAGC,EAAGkB,GAAP,OAAcnB,GAAM,GAAKmB,EAAOlB,IAAMkB,CAAtC,EAkCVE,OAhCW,SAACrB,EAAGC,EAAGkB,GAAP,OAAcnB,IAAMmB,EAAMlB,GAAM,GAAKkB,CAArC,EAgCHG,OA/BG,SAACtB,EAAGC,EAAGkB,GAAP,OAAcnB,GAAM,GAAKmB,EAAOlB,IAAMkB,CAAtC,EA+BKI,OA7BL,SAACvB,EAAGC,EAAGkB,GAAP,OAAcnB,GAAM,GAAKmB,EAAOlB,IAAOkB,EAAI,EAA3C,EA6BaK,OA5Bb,SAACxB,EAAGC,EAAGkB,GAAP,OAAcnB,IAAOmB,EAAI,GAAQlB,GAAM,GAAKkB,CAA5C,EA6BXM,QA3BY,SAACzB,EAAGC,GAAJ,OAAUA,CAAV,EA2BHyB,QA1BG,SAAC1B,EAAGC,GAAJ,OAAUD,CAAV,EA2BZ2B,OAzBW,SAAC3B,EAAGC,EAAGkB,GAAP,OAAcnB,GAAKmB,EAAMlB,IAAO,GAAKkB,CAArC,EAyBHS,OAxBG,SAAC5B,EAAGC,EAAGkB,GAAP,OAAclB,GAAKkB,EAAMnB,IAAO,GAAKmB,CAArC,EAwBKU,OAtBL,SAAC7B,EAAGC,EAAGkB,GAAP,OAAclB,GAAMkB,EAAI,GAAQnB,IAAO,GAAKmB,CAA5C,EAsBaW,OArBb,SAAC9B,EAAGC,EAAGkB,GAAP,OAAcnB,GAAMmB,EAAI,GAAQlB,IAAO,GAAKkB,CAA5C,EAsBXY,IAlBG,SAAahB,EAAIC,EAAIgB,EAAIC,GAC5B,IAAMhC,GAAKe,IAAO,IAAMiB,IAAO,GAC/B,MAAO,CAAEjC,EAAIe,EAAKiB,GAAO/B,EAAI,KAAH,IAAG,EAAK,IAAM,GAAM,EAAGA,EAAO,EAAJA,EACvD,EAeQiC,MAbK,SAAClB,EAAIiB,EAAIE,GAAT,OAAiBnB,IAAO,IAAMiB,IAAO,IAAME,IAAO,EAAlD,EAaEC,MAZF,SAACC,EAAKtB,EAAIiB,EAAIM,GAAd,OAAsBvB,EAAKiB,EAAKM,GAAOD,EAAM,KAAH,IAAG,EAAK,IAAM,GAAM,CAA9D,EAYSE,MAXT,SAACvB,EAAIiB,EAAIE,EAAIK,GAAb,OAAqBxB,IAAO,IAAMiB,IAAO,IAAME,IAAO,IAAMK,IAAO,EAAnE,EAWgBC,MAVhB,SAACJ,EAAKtB,EAAIiB,EAAIM,EAAII,GAAlB,OAA0B3B,EAAKiB,EAAKM,EAAKI,GAAOL,EAAM,KAAH,IAAG,EAAK,IAAM,GAAM,CAAvE,EAUuBM,MARvB,SAACN,EAAKtB,EAAIiB,EAAIM,EAAII,EAAIE,GAAtB,OAA8B7B,EAAKiB,EAAKM,EAAKI,EAAKE,GAAOP,EAAM,KAAH,IAAG,EAAK,IAAM,GAAM,CAAhF,EAQ8BQ,MAT9B,SAAC7B,EAAIiB,EAAIE,EAAIK,EAAIM,GAAjB,OAAyB9B,IAAO,IAAMiB,IAAO,IAAME,IAAO,IAAMK,IAAO,IAAMM,IAAO,EAApF,GAWd,ICtDA,EAA+BjC,EAAAA,MAAU,CACrC,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,qBAClE,qBAAsB,qBAAsB,qBAAsB,sBACpEkC,KAAI,SAAA7G,GAAC,OAAI0D,OAAO1D,EAAX,KArBP,eAAO8G,EAAP,KAAkBC,EAAlB,KAuBMC,EAAa,IAAI1F,YAAY,IAC7B2F,EAAa,IAAI3F,YAAY,IACtB4F,EAAb,0CACI,aAAc,6BACV,cAAM,IAAK,GAAI,IAAI,IAKdrC,GAAK,WACV,EAAKC,IAAK,UACV,EAAKgB,IAAK,WACV,EAAKC,IAAK,WACV,EAAKK,GAAK,WACV,EAAKH,IAAK,SACV,EAAKO,IAAK,WACV,EAAKF,GAAK,WACV,EAAKI,GAAK,WACV,EAAKE,IAAK,WACV,EAAKO,IAAK,WACV,EAAKC,GAAK,UACV,EAAKC,GAAK,UACV,EAAKC,IAAK,SACV,EAAKC,GAAK,WACV,EAAKC,GAAK,UArBA,CAsBb,CAvBL,kCAyBI,WAEI,MAAO,CADoEtF,KAAnE2C,GAAmE3C,KAA/D4C,GAA+D5C,KAA3D4D,GAA2D5D,KAAvD6D,GAAuD7D,KAAnDkE,GAAmDlE,KAA/C+D,GAA+C/D,KAA3CsE,GAA2CtE,KAAvCoE,GAAuCpE,KAAnCwE,GAAmCxE,KAA/B0E,GAA+B1E,KAA3BiF,GAA2BjF,KAAvBkF,GAAuBlF,KAAnBmF,GAAmBnF,KAAfoF,GAAepF,KAAXqF,GAAWrF,KAAPsF,GAEvE,GA5BL,iBA8BI,SAAI3C,EAAIC,EAAIgB,EAAIC,EAAIK,EAAIH,EAAIO,EAAIF,EAAII,EAAIE,EAAIO,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC5DtF,KAAK2C,GAAU,EAALA,EACV3C,KAAK4C,GAAU,EAALA,EACV5C,KAAK4D,GAAU,EAALA,EACV5D,KAAK6D,GAAU,EAALA,EACV7D,KAAKkE,GAAU,EAALA,EACVlE,KAAK+D,GAAU,EAALA,EACV/D,KAAKsE,GAAU,EAALA,EACVtE,KAAKoE,GAAU,EAALA,EACVpE,KAAKwE,GAAU,EAALA,EACVxE,KAAK0E,GAAU,EAALA,EACV1E,KAAKiF,GAAU,EAALA,EACVjF,KAAKkF,GAAU,EAALA,EACVlF,KAAKmF,GAAU,EAALA,EACVnF,KAAKoF,GAAU,EAALA,EACVpF,KAAKqF,GAAU,EAALA,EACVrF,KAAKsF,GAAU,EAALA,CACb,GA/CL,qBAgDI,SAAQzE,EAAM3M,GAEV,IAAK,IAAIyE,EAAI,EAAGA,EAAI,GAAIA,IAAKzE,GAAU,EACnC4Q,EAAWnM,GAAKkI,EAAK0E,UAAUrR,GAC/B6Q,EAAWpM,GAAKkI,EAAK0E,UAAWrR,GAAU,GAE9C,IAAK,IAAIyE,EAAI,GAAIA,EAAI,GAAIA,IAAK,CAE1B,IAAM6M,EAA4B,EAArBV,EAAWnM,EAAI,IACtB8M,EAA4B,EAArBV,EAAWpM,EAAI,IACtB+M,EAAMjD,EAAAA,OAAW+C,EAAMC,EAAM,GAAKhD,EAAAA,OAAW+C,EAAMC,EAAM,GAAKhD,EAAAA,MAAU+C,EAAMC,EAAM,GACpFE,EAAMlD,EAAAA,OAAW+C,EAAMC,EAAM,GAAKhD,EAAAA,OAAW+C,EAAMC,EAAM,GAAKhD,EAAAA,MAAU+C,EAAMC,EAAM,GAEpFG,EAA0B,EAApBd,EAAWnM,EAAI,GACrBkN,EAA0B,EAApBd,EAAWpM,EAAI,GACrBmN,EAAMrD,EAAAA,OAAWmD,EAAKC,EAAK,IAAMpD,EAAAA,OAAWmD,EAAKC,EAAK,IAAMpD,EAAAA,MAAUmD,EAAKC,EAAK,GAChFE,EAAMtD,EAAAA,OAAWmD,EAAKC,EAAK,IAAMpD,EAAAA,OAAWmD,EAAKC,EAAK,IAAMpD,EAAAA,MAAUmD,EAAKC,EAAK,GAEhFG,EAAOvD,EAAAA,MAAUkD,EAAKI,EAAKhB,EAAWpM,EAAI,GAAIoM,EAAWpM,EAAI,KAC7DsN,EAAOxD,EAAAA,MAAUuD,EAAMN,EAAKI,EAAKhB,EAAWnM,EAAI,GAAImM,EAAWnM,EAAI,KACzEmM,EAAWnM,GAAY,EAAPsN,EAChBlB,EAAWpM,GAAY,EAAPqN,CACnB,CACD,IAAMrD,EAAmE3C,KAAnE2C,GAAIC,EAA+D5C,KAA/D4C,GAAIgB,EAA2D5D,KAA3D4D,GAAIC,EAAuD7D,KAAvD6D,GAAIK,EAAmDlE,KAAnDkE,GAAIH,EAA+C/D,KAA/C+D,GAAIO,EAA2CtE,KAA3CsE,GAAIF,EAAuCpE,KAAvCoE,GAAII,EAAmCxE,KAAnCwE,GAAIE,EAA+B1E,KAA/B0E,GAAIO,EAA2BjF,KAA3BiF,GAAIC,EAAuBlF,KAAvBkF,GAAIC,EAAmBnF,KAAnBmF,GAAIC,EAAepF,KAAfoF,GAAIC,EAAWrF,KAAXqF,GAAIC,EAAOtF,KAAPsF,GAElE,IAAS3M,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAEzB,IAAMuN,EAAUzD,EAAAA,OAAW+B,EAAIE,EAAI,IAAMjC,EAAAA,OAAW+B,EAAIE,EAAI,IAAMjC,EAAAA,OAAW+B,EAAIE,EAAI,IAC/EyB,EAAU1D,EAAAA,OAAW+B,EAAIE,EAAI,IAAMjC,EAAAA,OAAW+B,EAAIE,EAAI,IAAMjC,EAAAA,OAAW+B,EAAIE,EAAI,IAE/E0B,EAAQ5B,EAAKS,GAAQT,EAAKW,EAC1BkB,EAAQ3B,EAAKQ,GAAQR,EAAKU,EAG1BkB,EAAO7D,EAAAA,MAAU6C,EAAIa,EAASE,EAAMxB,EAAUlM,GAAIoM,EAAWpM,IAC7D4N,EAAM9D,EAAAA,MAAU6D,EAAMjB,EAAIa,EAASE,EAAMxB,EAAUjM,GAAImM,EAAWnM,IAClE6N,EAAa,EAAPF,EAENG,EAAUhE,EAAAA,OAAWE,EAAIC,EAAI,IAAMH,EAAAA,OAAWE,EAAIC,EAAI,IAAMH,EAAAA,OAAWE,EAAIC,EAAI,IAC/E8D,EAAUjE,EAAAA,OAAWE,EAAIC,EAAI,IAAMH,EAAAA,OAAWE,EAAIC,EAAI,IAAMH,EAAAA,OAAWE,EAAIC,EAAI,IAC/E+D,EAAQhE,EAAKiB,EAAOjB,EAAKuB,EAAON,EAAKM,EACrC0C,EAAQhE,EAAKiB,EAAOjB,EAAKmB,EAAOF,EAAKE,EAC3CsB,EAAU,EAALF,EACLG,EAAU,EAALF,EACLD,EAAU,EAALF,EACLG,EAAU,EAALF,EACLD,EAAU,EAALT,EACLU,EAAU,EAALR,EAtBoB,MAuBLjC,EAAAA,IAAa,EAAL6B,EAAa,EAALF,EAAc,EAANmC,EAAe,EAANC,GAA/ChC,EAvBmB,EAuBtB5C,EAAU8C,EAvBY,EAuBf7C,EACVyC,EAAU,EAALJ,EACLE,EAAU,EAALL,EACLG,EAAU,EAALN,EACLG,EAAU,EAALF,EACLD,EAAU,EAALjB,EACLkB,EAAU,EAALjB,EACL,IAAMiE,EAAMpE,EAAAA,MAAU+D,EAAKE,EAASE,GACpCjE,EAAKF,EAAAA,MAAUoE,EAAKN,EAAKE,EAASE,GAClC/D,EAAW,EAANiE,CACR,CA1DiB,MA4DEpE,EAAAA,IAAkB,EAAVzC,KAAK2C,GAAkB,EAAV3C,KAAK4C,GAAa,EAALD,EAAa,EAALC,GAAxDD,EA5DY,EA4Dff,EAAUgB,EA5DK,EA4DRf,EA5DQ,MA6DEY,EAAAA,IAAkB,EAAVzC,KAAK4D,GAAkB,EAAV5D,KAAK6D,GAAa,EAALD,EAAa,EAALC,GAAxDD,EA7DY,EA6DfhC,EAAUiC,EA7DK,EA6DRhC,EA7DQ,MA8DEY,EAAAA,IAAkB,EAAVzC,KAAKkE,GAAkB,EAAVlE,KAAK+D,GAAa,EAALG,EAAa,EAALH,GAAxDG,EA9DY,EA8DftC,EAAUmC,EA9DK,EA8DRlC,EA9DQ,MA+DEY,EAAAA,IAAkB,EAAVzC,KAAKsE,GAAkB,EAAVtE,KAAKoE,GAAa,EAALE,EAAa,EAALF,GAAxDE,EA/DY,EA+Df1C,EAAUwC,EA/DK,EA+DRvC,EA/DQ,MAgEEY,EAAAA,IAAkB,EAAVzC,KAAKwE,GAAkB,EAAVxE,KAAK0E,GAAa,EAALF,EAAa,EAALE,GAAxDF,EAhEY,EAgEf5C,EAAU8C,EAhEK,EAgER7C,EAhEQ,MAiEEY,EAAAA,IAAkB,EAAVzC,KAAKiF,GAAkB,EAAVjF,KAAKkF,GAAa,EAALD,EAAa,EAALC,GAAxDD,EAjEY,EAiEfrD,EAAUsD,EAjEK,EAiERrD,EAjEQ,OAkEEY,EAAAA,IAAkB,EAAVzC,KAAKmF,GAAkB,EAAVnF,KAAKoF,GAAa,EAALD,EAAa,EAALC,GAAxDD,EAlEY,GAkEfvD,EAAUwD,EAlEK,GAkERvD,EAlEQ,OAmEEY,EAAAA,IAAkB,EAAVzC,KAAKqF,GAAkB,EAAVrF,KAAKsF,GAAa,EAALD,EAAa,EAALC,GAAxDD,EAnEY,GAmEfzD,EAAU0D,EAnEK,GAmERzD,EACV7B,KAAKgB,IAAI2B,EAAIC,EAAIgB,EAAIC,EAAIK,EAAIH,EAAIO,EAAIF,EAAII,EAAIE,EAAIO,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACxE,GArHL,wBAsHI,WACIR,EAAWzD,KAAK,GAChB0D,EAAW1D,KAAK,EACnB,GAzHL,qBA0HI,WACIrB,KAAKtM,OAAO2N,KAAK,GACjBrB,KAAKgB,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACzD,KA7HL,GAA4BP,GA+HtBqG,EAAAA,SAAAA,iCACF,aAAc,6BACV,gBAEKnE,GAAK,UACV,EAAKC,IAAK,SACV,EAAKgB,IAAK,WACV,EAAKC,IAAK,UACV,EAAKK,GAAK,UACV,EAAKH,GAAK,WACV,EAAKO,IAAK,WACV,EAAKF,GAAK,WACV,EAAKI,IAAK,WACV,EAAKE,IAAK,WACV,EAAKO,IAAK,WACV,EAAKC,GAAK,WACV,EAAKC,GAAK,UACV,EAAKC,GAAK,UACV,EAAKC,GAAK,UACV,EAAKC,IAAK,WACV,EAAKhH,UAAY,GAnBP,CAoBb,kBArBCwI,CAAmB9B,GAuBnB+B,EAAAA,SAAAA,iCACF,aAAc,6BACV,gBAEKpE,IAAK,UACV,EAAKC,IAAK,WACV,EAAKgB,GAAK,WACV,EAAKC,GAAK,UACV,EAAKK,IAAK,WACV,EAAKH,GAAK,UACV,EAAKO,GAAK,UACV,EAAKF,IAAK,UACV,EAAKI,GAAK,WACV,EAAKE,IAAK,QACV,EAAKO,IAAK,WACV,EAAKC,GAAK,WACV,EAAKC,IAAK,UACV,EAAKC,GAAK,WACV,EAAKC,GAAK,WACV,EAAKC,IAAK,WACV,EAAKhH,UAAY,GAnBP,CAoBb,kBArBCyI,CAAe/B,GAuBRgC,EAAS9G,GAAgB,kBAAM,IAAI8E,CAAV,OACZ9E,GAAgB,kBAAM,IAAI4G,CAAV,IACpB5G,GAAgB,kBAAM,IAAI6G,CAAV,wBC3MhCE,EAAMzF,OAAO,GACb0F,EAAM1F,OAAO,GACb2F,EAAM3F,OAAO,GACb4F,EAAO5F,OAAO,gFACd6F,EAAQhT,OAAOiT,OAAO,CACxBC,EAAG/F,QAAQ,GACXgG,EAAGhG,OAAO,iFACViG,EAAGjG,OAAO,iFACVK,EAAGuF,EACHtJ,EAAGsJ,EACHxF,EAAGJ,OAAO,GACVkG,GAAIlG,OAAO,iFACXmG,GAAInG,OAAO,mFAGToG,EAAYpG,OAAO,uEACnBqG,EAAUrG,OAAO,iFAEjBsG,GADStG,OAAO,gFACIA,OAAO,kFAC3BuG,EAAoBvG,OAAO,iFAC3BwG,EAAiBxG,OAAO,gFACxByG,GAAiBzG,OAAO,iFACxB0G,GAAAA,WACF,WAAYC,EAAGC,EAAGC,EAAGC,IAAG,eACpBtI,KAAKmI,EAAIA,EACTnI,KAAKoI,EAAIA,EACTpI,KAAKqI,EAAIA,EACTrI,KAAKsI,EAAIA,CACZ,sCAgBD,SAAOC,GACHC,GAAeD,GACf,IAAWE,EAAqBzI,KAAxBmI,EAAUO,EAAc1I,KAAjBoI,EAAUO,EAAO3I,KAAVqI,EACXO,EAAqBL,EAAxBJ,EAAUU,EAAcN,EAAjBH,EAAUU,EAAOP,EAAVF,EAChBU,EAAOC,GAAIP,EAAKK,GAChBG,EAAOD,GAAIJ,EAAKD,GAChBO,EAAOF,GAAIN,EAAKI,GAChBK,EAAOH,GAAIH,EAAKF,GACtB,OAAOI,IAASE,GAAQC,IAASC,CACpC,uBACD,WACI,OAAO,IAAIjB,EAAcc,IAAKhJ,KAAKmI,GAAInI,KAAKoI,EAAGpI,KAAKqI,EAAGW,IAAKhJ,KAAKsI,GACpE,uBACD,WACI,IAAWG,EAAqBzI,KAAxBmI,EAAUO,EAAc1I,KAAjBoI,EAAUO,EAAO3I,KAAVqI,EACdd,EAAMF,EAANE,EACF6B,EAAIJ,GAAIP,EAAKA,GACbY,EAAIL,GAAIN,EAAKA,GACbY,EAAIN,GAAI7B,EAAM6B,GAAIL,EAAKA,IACvBY,EAAIP,GAAIzB,EAAI6B,GACZI,EAAOf,EAAKC,EACZe,EAAIT,GAAIA,GAAIQ,EAAOA,GAAQJ,EAAIC,GAC/BK,EAAIH,EAAIF,EACRM,EAAID,EAAIJ,EACRM,EAAIL,EAAIF,EACRQ,EAAKb,GAAIS,EAAIE,GACbG,EAAKd,GAAIU,EAAIE,GACbG,EAAKf,GAAIS,EAAIG,GAEnB,OAAO,IAAI1B,EAAc2B,EAAIC,EADlBd,GAAIW,EAAID,GACkBK,EACxC,oBACD,SAAIxB,GACAC,GAAeD,GACf,IAAWE,EAA4BzI,KAA/BmI,EAAUO,EAAqB1I,KAAxBoI,EAAUO,EAAc3I,KAAjBqI,EAAU2B,EAAOhK,KAAVsI,EAClBM,EAA4BL,EAA/BJ,EAAUU,EAAqBN,EAAxBH,EAAUU,EAAcP,EAAjBF,EAAU4B,EAAO1B,EAAVD,EACvBc,EAAIJ,IAAKN,EAAKD,IAAOI,EAAKD,IAC1BS,EAAIL,IAAKN,EAAKD,IAAOI,EAAKD,IAC1Be,EAAIX,GAAIK,EAAID,GAClB,GAAIO,IAAM1C,EACN,OAAOjH,KAAKkK,SAChB,IAAMZ,EAAIN,GAAIL,EAAKxB,EAAM8C,GACnBV,EAAIP,GAAIgB,EAAK7C,EAAM2B,GACnBW,EAAIF,EAAID,EACRI,EAAIL,EAAID,EACRQ,EAAIL,EAAID,EACRO,EAAKb,GAAIS,EAAIE,GACbG,EAAKd,GAAIU,EAAIE,GACbG,EAAKf,GAAIS,EAAIG,GAEnB,OAAO,IAAI1B,EAAc2B,EAAIC,EADlBd,GAAIW,EAAID,GACkBK,EACxC,yBACD,SAASxB,GACL,OAAOvI,KAAK2D,IAAI4E,EAAM4B,SACzB,iCACD,SAAiBC,GAKb,IAJA,IAAMC,EAAU,EAAI,IAAMD,EACpBE,EAAS,GACXC,EAAIvK,KACJwK,EAAOD,EACFE,EAAS,EAAGA,EAASJ,EAASI,IAAU,CAC7CD,EAAOD,EACPD,EAAO1R,KAAK4R,GACZ,IAAK,IAAI7R,EAAI,EAAGA,EAAI,KAAH,IAAG,EAAMyR,EAAI,GAAIzR,IAC9B6R,EAAOA,EAAK7G,IAAI4G,GAChBD,EAAO1R,KAAK4R,GAEhBD,EAAIC,EAAKN,QACZ,CACD,OAAOI,CACV,qBACD,SAAKxM,EAAG4M,IACCA,GAAe1K,KAAK2K,OAAOzC,EAAc0C,QAC1CF,EAAcG,GAAMD,MACxB,IAAMR,EAAKM,GAAeA,EAAYI,cAAiB,EACvD,GAAI,IAAMV,EACN,MAAM,IAAIrV,MAAM,iEAEpB,IAAIgW,EAAcL,GAAeM,GAAiBhJ,IAAI0I,GACjDK,IACDA,EAAc/K,KAAKiL,iBAAiBb,GAChCM,GAAqB,IAANN,IACfW,EAAc7C,EAAcgD,WAAWH,GACvCC,GAAiBhK,IAAI0J,EAAaK,KAU1C,IAPA,IAAIR,EAAIrC,EAAciD,KAClBC,EAAIlD,EAAciD,KAChBd,EAAU,EAAI,IAAMD,EACpBiB,EAAa,KAAH,IAAG,EAAMjB,EAAI,GACvBkB,EAAO9J,OAAO,WAAK4I,GAAI,GACvBmB,EAAY,KAAH,IAAG,EAAKnB,GACjBoB,EAAUhK,OAAO4I,GACdK,EAAS,EAAGA,EAASJ,EAASI,IAAU,CAC7C,IAAMvW,EAASuW,EAASY,EACpBI,EAAQzX,OAAO8J,EAAIwN,GAMvB,GALAxN,IAAM0N,EACFC,EAAQJ,IACRI,GAASF,EACTzN,GAAKoJ,GAEK,IAAVuE,EAAa,CACb,IAAIC,EAAKX,EAAY7W,GACjBuW,EAAS,IACTiB,EAAKA,EAAGvB,UACZiB,EAAIA,EAAEzH,IAAI+H,EACb,KACI,CACD,IAAIC,EAASZ,EAAY7W,EAASiB,KAAKyW,IAAIH,GAAS,GAChDA,EAAQ,IACRE,EAASA,EAAOxB,UACpBI,EAAIA,EAAE5G,IAAIgI,EACb,CACJ,CACD,OAAOzD,EAAcgD,WAAW,CAACX,EAAGa,IAAI,EAC3C,yBACD,SAASS,EAAQnB,GACb,OAAO1K,KAAK8L,KAAKC,GAAgBF,EAAQxE,EAAMxF,GAAI6I,EACtD,+BACD,SAAemB,GACX,IAAI/N,EAAIiO,GAAgBF,EAAQxE,EAAMxF,GAAG,GACnC6H,EAAIxB,EAAc0C,KAClBoB,EAAK9D,EAAciD,KACzB,GAAIrN,IAAMmJ,EACN,OAAO+E,EACX,GAAIhM,KAAK2K,OAAOqB,IAAOlO,IAAMoJ,EACzB,OAAOlH,KACX,GAAIA,KAAK2K,OAAOjB,GACZ,OAAO1J,KAAK8L,KAAKhO,GAGrB,IAFA,IAAIyM,EAAIyB,EACJxE,EAAIxH,KACDlC,EAAImJ,GACHnJ,EAAIoJ,IACJqD,EAAIA,EAAE5G,IAAI6D,IACdA,EAAIA,EAAE0C,SACNpM,IAAMoJ,EAEV,OAAOqD,CACV,6BACD,WACI,OAAOvK,KAAKiM,eAAe5E,EAAMzF,GAAG+I,OAAOzC,EAAciD,KAC5D,8BACD,WACI,OAAOnL,KAAKiM,eAAe5E,EAAMxF,GAAG8I,OAAOzC,EAAciD,KAC5D,yBACD,WAAgC,IAAvBe,EAAuB,uDAAhBC,GAAOnM,KAAKqI,GAChBF,EAAYnI,KAAZmI,EAAGC,EAASpI,KAAToI,EAAGC,EAAMrI,KAANqI,EACR+D,EAAKpD,GAAIb,EAAI+D,GACbG,EAAKrD,GAAIZ,EAAI8D,GACbI,EAAKtD,GAAIX,EAAI6D,GACnB,GAAII,IAAOpF,EACP,MAAM,IAAInS,MAAM,oBACpB,OAAO,IAAI8V,GAAMuB,EAAIC,EACxB,mCACD,WACIE,IACH,iCACD,WACIA,IACH,kCACD,WACIA,IACH,6BAhLD,SAAkBhC,GACd,KAAMA,aAAaM,IACf,MAAM,IAAIvX,UAAU,4CAExB,OAAIiX,EAAEI,OAAOE,GAAMM,MACRjD,EAAciD,KAClB,IAAIjD,EAAcqC,EAAEpC,EAAGoC,EAAEnC,EAAGlB,EAAK8B,GAAIuB,EAAEpC,EAAIoC,EAAEnC,GACvD,8BACD,SAAqBkC,GACjB,IAAMkC,EAmed,SAAqBC,GAAmB,IAAblC,EAAa,uDAATlD,EAAMI,EAC3BjH,EAAM,IAAIrH,MAAMsT,EAAK7Y,QAOrB8Y,EAAWP,GANMM,EAAK3T,QAAO,SAACO,EAAKsT,EAAKhU,GAC1C,OAAIgU,IAAQ1F,EACD5N,GACXmH,EAAI7H,GAAKU,EACF2P,GAAI3P,EAAMsT,EAAKpC,GACzB,GAAErD,GACqCqD,GAOxC,OANAkC,EAAKG,aAAY,SAACvT,EAAKsT,EAAKhU,GACxB,OAAIgU,IAAQ1F,EACD5N,GACXmH,EAAI7H,GAAKqQ,GAAI3P,EAAMmH,EAAI7H,GAAI4R,GACpBvB,GAAI3P,EAAMsT,EAAKpC,GACzB,GAAEmC,GACIlM,CACV,CAnfqBqM,CAAYvC,EAAO3F,KAAI,SAAC4F,GAAD,OAAOA,EAAElC,CAAT,KACrC,OAAOiC,EAAO3F,KAAI,SAAC4F,EAAG5R,GAAJ,OAAU4R,EAAEuC,SAASN,EAAM7T,GAA3B,GACrB,2BACD,SAAkB2R,GACd,OAAOtK,KAAK+M,cAAczC,GAAQ3F,IAAI3E,KAAKgN,WAC9C,OArBC9E,GA2LN,SAASM,GAAeD,GACpB,KAAMA,aAAiBL,IACnB,MAAM,IAAI5U,UAAU,yBAC3B,CACD,SAAS2Z,GAAe1E,GACpB,KAAMA,aAAiB2E,IACnB,MAAM,IAAI5Z,UAAU,0BAC3B,CACD,SAASiZ,KACL,MAAM,IAAIxX,MAAM,0CACnB,CAZDmT,GAAc0C,KAAO,IAAI1C,GAAcb,EAAMK,GAAIL,EAAMM,GAAIT,EAAK8B,GAAI3B,EAAMK,GAAKL,EAAMM,KACrFO,GAAciD,KAAO,IAAIjD,GAAcjB,EAAKC,EAAKA,EAAKD,OAYhDiG,GAAAA,WACF,WAAYC,IAAI,eACZnN,KAAKmN,GAAKA,CACb,0CAwDD,WACI,IAQI5D,EARJ,EAAqBvJ,KAAKmN,GAApBhF,EAAN,EAAMA,EAAGC,EAAT,EAASA,EAAGC,EAAZ,EAAYA,EAAGC,EAAf,EAAeA,EACT8E,EAAKpE,GAAIA,GAAIX,EAAID,GAAKY,GAAIX,EAAID,IAC9BiF,EAAKrE,GAAIb,EAAIC,GACbkF,EAAOtE,GAAIqE,EAAKA,GACPE,EAAYC,GAAWxE,GAAIoE,EAAKE,IAAvCrR,MACFwR,EAAKzE,GAAIuE,EAAUH,GACnBM,EAAK1E,GAAIuE,EAAUF,GACnBM,EAAO3E,GAAIyE,EAAKC,EAAKpF,GAE3B,GAAIsF,GAAatF,EAAIqF,GAAO,CACxB,IAAIE,EAAK7E,GAAIZ,EAAIP,GACbiG,EAAK9E,GAAIb,EAAIN,GACjBM,EAAI0F,EACJzF,EAAI0F,EACJvE,EAAIP,GAAIyE,EAAK1F,EAChB,MAEGwB,EAAImE,EAEJE,GAAazF,EAAIwF,KACjBvF,EAAIY,IAAKZ,IACb,IAAIrF,EAAIiG,IAAKX,EAAID,GAAKmB,GAGtB,OAFIqE,GAAa7K,KACbA,EAAIiG,IAAKjG,IACNgL,GAAkBhL,EAC5B,sBACD,WACI,OAAOiL,GAAWhO,KAAKiO,aAC1B,yBACD,WACI,OAAOjO,KAAKkO,OACf,uBACD,SAAO3F,GACH0E,GAAe1E,GACf,IAAMhB,EAAIvH,KAAKmN,GACT/Z,EAAImV,EAAM4E,GACVgB,EAAMnF,GAAIzB,EAAEY,EAAI/U,EAAEgV,KAAOY,GAAIzB,EAAEa,EAAIhV,EAAE+U,GACrCiG,EAAMpF,GAAIzB,EAAEa,EAAIhV,EAAEgV,KAAOY,GAAIzB,EAAEY,EAAI/U,EAAE+U,GAC3C,OAAOgG,GAAOC,CACjB,oBACD,SAAI7F,GAEA,OADA0E,GAAe1E,GACR,IAAI2E,EAAelN,KAAKmN,GAAGxJ,IAAI4E,EAAM4E,IAC/C,yBACD,SAAS5E,GAEL,OADA0E,GAAe1E,GACR,IAAI2E,EAAelN,KAAKmN,GAAGkB,SAAS9F,EAAM4E,IACpD,yBACD,SAAStB,GACL,OAAO,IAAIqB,EAAelN,KAAKmN,GAAGmB,SAASzC,GAC9C,+BACD,SAAeA,GACX,OAAO,IAAIqB,EAAelN,KAAKmN,GAAGlB,eAAeJ,GACpD,4CA7GD,SAAiC0C,GAC7B,IAAQ/G,EAAMH,EAANG,EACFgH,EAAIxF,GAAInB,EAAU0G,EAAKA,GACvBE,EAAKzF,IAAKwF,EAAItH,GAAOc,GACvB0G,EAAIlN,QAAQ,GACV+H,EAAIP,IAAK0F,EAAIlH,EAAIgH,GAAKxF,GAAIwF,EAAIhH,IACpC,EAAwCmH,GAAQF,EAAIlF,GAArCqF,EAAf,EAAMC,QAA4B9L,EAAlC,EAA2B9G,MACvB6S,EAAK9F,GAAIjG,EAAIwL,GACZX,GAAakB,KACdA,EAAK9F,IAAK8F,IACTF,IACD7L,EAAI+L,GACHF,IACDF,EAAIF,GACR,IAAMO,EAAK/F,GAAI0F,GAAKF,EAAItH,GAAOe,GAAiBsB,GAC1CyF,EAAKjM,EAAIA,EACTkM,EAAKjG,IAAKjG,EAAIA,GAAKwG,GACnB2F,EAAKlG,GAAI+F,EAAKjH,GACdqH,EAAKnG,GAAI9B,EAAM8H,GACfI,EAAKpG,GAAI9B,EAAM8H,GACrB,OAAO,IAAI9G,GAAcc,GAAIiG,EAAKG,GAAKpG,GAAImG,EAAKD,GAAKlG,GAAIkG,EAAKE,GAAKpG,GAAIiG,EAAKE,GAC/E,4BACD,SAAmBE,GAEf,IAAMC,EAAKC,IADXF,EAAMG,GAAYH,EAAK,KACWpS,MAAM,EAAG,KACrCwS,EAAKzP,KAAK0P,0BAA0BJ,GACpCK,EAAKJ,GAAmBF,EAAIpS,MAAM,GAAI,KACtC2S,EAAK5P,KAAK0P,0BAA0BC,GAC1C,OAAO,IAAIzC,EAAeuC,EAAG9L,IAAIiM,GACpC,wBACD,SAAeP,GACXA,EAAMG,GAAYH,EAAK,IACvB,IAAQ9H,EAASF,EAATE,EAAGC,EAAMH,EAANG,EACLqI,EAAO,0EACP9M,EAAIwM,GAAmBF,GAC7B,IA8UR,SAAoBS,EAAIC,GACpB,GAAID,EAAGlc,SAAWmc,EAAGnc,OACjB,OAAO,EAEX,IAAK,IAAI+E,EAAI,EAAGA,EAAImX,EAAGlc,OAAQ+E,IAC3B,GAAImX,EAAGnX,KAAOoX,EAAGpX,GACb,OAAO,EAGf,OAAO,CACV,CAxVYqX,CAAWjC,GAAkBhL,GAAIsM,IAAQzB,GAAa7K,GACvD,MAAM,IAAIhO,MAAM8a,GACpB,IAAMb,EAAKhG,GAAIjG,EAAIA,GACbqK,EAAKpE,GAAI9B,EAAMK,EAAIyH,GACnB3B,EAAKrE,GAAI9B,EAAMK,EAAIyH,GACnBiB,EAAOjH,GAAIoE,EAAKA,GAChB8C,EAAOlH,GAAIqE,EAAKA,GAChBtU,EAAIiQ,GAAIzB,EAAIC,EAAIyI,EAAOC,GAC7B,EAA8B1C,GAAWxE,GAAIjQ,EAAImX,IAAzCrB,EAAR,EAAQA,QAAgBsB,EAAxB,EAAiBlU,MACXmU,EAAKpH,GAAImH,EAAI9C,GACbgD,EAAKrH,GAAImH,EAAIC,EAAKrX,GACpBoP,EAAIa,IAAKjG,EAAIA,GAAKqN,GAClBxC,GAAazF,KACbA,EAAIa,IAAKb,IACb,IAAMC,EAAIY,GAAIoE,EAAKiD,GACb/H,EAAIU,GAAIb,EAAIC,GAClB,IAAKyG,GAAWjB,GAAatF,IAAMF,IAAMnB,EACrC,MAAM,IAAIlS,MAAM8a,GACpB,OAAO,IAAI3C,EAAe,IAAIhF,GAAcC,EAAGC,EAAGlB,EAAKoB,GAC1D,OA1DC4E,GAmHNA,GAAetC,KAAO,IAAIsC,GAAehF,GAAc0C,MACvDsC,GAAe/B,KAAO,IAAI+B,GAAehF,GAAciD,MACvD,IAAMH,GAAmB,IAAIsF,QACvBzF,GAAAA,WACF,WAAY1C,EAAGC,IAAG,eACdpI,KAAKmI,EAAIA,EACTnI,KAAKoI,EAAIA,CACZ,8CACD,SAAeiD,GACXrL,KAAK8K,aAAeO,EACpBL,GAAiBuF,OAAOvQ,KAC3B,2BA2BD,WACI,IAAMhC,EAAQ+P,GAAkB/N,KAAKoI,GAErC,OADApK,EAAM,KAAOgC,KAAKmI,EAAIjB,EAAM,IAAO,EAC5BlJ,CACV,sBACD,WACI,OAAOgQ,GAAWhO,KAAKiO,aAC1B,yBACD,WACI,IAAQ7F,EAAMpI,KAANoI,EAER,OAAO2F,GADG/E,IAAK9B,EAAMkB,GAAK+D,GAAOjF,EAAMkB,IAE1C,8BACD,WACI,OAAOF,GAAc8E,WAAWhN,MAAMwQ,eACzC,uBACD,SAAOjI,GACH,OAAOvI,KAAKmI,IAAMI,EAAMJ,GAAKnI,KAAKoI,IAAMG,EAAMH,CACjD,uBACD,WACI,OAAO,IAAIyC,EAAM7B,IAAKhJ,KAAKmI,GAAInI,KAAKoI,EACvC,oBACD,SAAIG,GACA,OAAOL,GAAc8E,WAAWhN,MAAM2D,IAAIuE,GAAc8E,WAAWzE,IAAQuE,UAC9E,yBACD,SAASvE,GACL,OAAOvI,KAAK2D,IAAI4E,EAAM4B,SACzB,yBACD,SAAS0B,GACL,OAAO3D,GAAc8E,WAAWhN,MAAMsO,SAASzC,EAAQ7L,MAAM8M,UAChE,0BAxDD,SAAeuC,GAAoB,IAAfoB,IAAe,yDACvBjJ,EAASH,EAATG,EAAGC,EAAMJ,EAANI,EAELiJ,GADNrB,EAAMG,GAAYH,EAAK,KACJpS,QACnByT,EAAO,KAAgB,IAAVrB,EAAI,IACjB,IAAMjH,EAAIuI,GAAgBD,GAC1B,GAAID,GAAUrI,GAAKX,EACf,MAAM,IAAI1S,MAAM,wBACpB,IAAK0b,GAAUrI,GAAKR,EAChB,MAAM,IAAI7S,MAAM,6BACpB,IAAM6b,EAAK5H,GAAIZ,EAAIA,GACbyI,EAAI7H,GAAI4H,EAAK1J,GACbnO,EAAIiQ,GAAIxB,EAAIoJ,EAAK1J,GACvB,EAA4ByH,GAAQkC,EAAG9X,GAAjC8V,EAAN,EAAMA,QAAgB1G,EAAtB,EAAelM,MACf,IAAK4S,EACD,MAAM,IAAI9Z,MAAM,uCACpB,IAAM+b,GAAU3I,EAAIjB,KAASA,EACvB6J,EAAqC,KAAV,IAAV1B,EAAI,KAI3B,OAHI0B,IAAkBD,IAClB3I,EAAIa,IAAKb,IAEN,IAAI0C,EAAM1C,EAAGC,EACvB,wEACD,WAA4B4I,GAA5B,sFACkBC,GAAqBD,GADvC,uCACoDE,OADpD,sGAhCErG,GAmENA,GAAMD,KAAO,IAAIC,GAAMxD,EAAMK,GAAIL,EAAMM,IACvCkD,GAAMM,KAAO,IAAIN,GAAM5D,EAAKC,OACtBiK,GAAAA,WACF,WAAY3C,EAAGzL,IAAG,eACd/C,KAAKwO,EAAIA,EACTxO,KAAK+C,EAAIA,EACT/C,KAAKoR,gBACR,8CAOD,WACI,IAAQ5C,EAASxO,KAATwO,EAAGzL,EAAM/C,KAAN+C,EACX,KAAMyL,aAAa3D,IACf,MAAM,IAAI9V,MAAM,2BAEpB,OADAgX,GAAgBhJ,EAAGsE,EAAMxF,GAAG,GACrB7B,IACV,2BACD,WACI,IAAMqR,EAAK,IAAIhe,WAAW,IAG1B,OAFAge,EAAGrQ,IAAIhB,KAAKwO,EAAEP,cACdoD,EAAGrQ,IAAI+M,GAAkB/N,KAAK+C,GAAI,IAC3BsO,CACV,sBACD,WACI,OAAOrD,GAAWhO,KAAKiO,aAC1B,0BArBD,SAAeoB,GACX,IAAMrR,EAAQwR,GAAYH,EAAK,IAG/B,OAAO,IAAI8B,EAFDtG,GAAMyG,QAAQtT,EAAMf,MAAM,EAAG,KAAK,GAClC0T,GAAgB3S,EAAMf,MAAM,GAAI,KAE7C,OAXCkU,GA8BN,SAASI,KAAuB,2BAARC,EAAQ,yBAARA,EAAQ,gBAC5B,IAAKA,EAAOC,OAAM,SAAClK,GAAD,OAAOA,aAAalU,UAApB,IACd,MAAM,IAAI0B,MAAM,4BACpB,GAAsB,IAAlByc,EAAO5d,OACP,OAAO4d,EAAO,GAGlB,IAFA,IAAM5d,EAAS4d,EAAO1Y,QAAO,SAACyO,EAAGpI,GAAJ,OAAYoI,EAAIpI,EAAIvL,MAApB,GAA4B,GACnD8d,EAAS,IAAIre,WAAWO,GACrB+E,EAAI,EAAGgZ,EAAM,EAAGhZ,EAAI6Y,EAAO5d,OAAQ+E,IAAK,CAC7C,IAAMwG,EAAMqS,EAAO7Y,GACnB+Y,EAAO1Q,IAAI7B,EAAKwS,GAChBA,GAAOxS,EAAIvL,MACd,CACD,OAAO8d,CACV,CACD,IAAME,GAAQzY,MAAM1F,KAAK,CAAEG,OAAQ,MAAO,SAACmF,EAAGJ,GAAJ,OAAUA,EAAEyE,SAAS,IAAIqC,SAAS,EAAG,IAArC,IAC1C,SAASuO,GAAW6D,GAChB,KAAMA,aAAkBxe,YACpB,MAAM,IAAI0B,MAAM,uBAEpB,IADA,IAAIsa,EAAM,GACD1W,EAAI,EAAGA,EAAIkZ,EAAOje,OAAQ+E,IAC/B0W,GAAOuC,GAAMC,EAAOlZ,IAExB,OAAO0W,CACV,CACD,SAASyC,GAAWzC,GAChB,GAAmB,kBAARA,EACP,MAAM,IAAI/b,UAAU,2CAA6C+b,GAErE,GAAIA,EAAIzb,OAAS,EACb,MAAM,IAAImB,MAAM,6CAEpB,IADA,IAAMgd,EAAQ,IAAI1e,WAAWgc,EAAIzb,OAAS,GACjC+E,EAAI,EAAGA,EAAIoZ,EAAMne,OAAQ+E,IAAK,CACnC,IAAMqZ,EAAQ,EAAJrZ,EACJsZ,EAAU5C,EAAIpS,MAAM+U,EAAGA,EAAI,GAC3BE,EAAOle,OAAOme,SAASF,EAAS,IACtC,GAAIje,OAAOoe,MAAMF,IAASA,EAAO,EAC7B,MAAM,IAAInd,MAAM,yBACpBgd,EAAMpZ,GAAKuZ,CACd,CACD,OAAOH,CACV,CACD,SAASM,GAAkB1F,GAGvB,OAAOmF,GADKnF,EAAIvP,SAAS,IAAIqC,SAAS7L,GAAY,KAErD,CACD,SAASma,GAAkBpB,GACvB,OAAO0F,GAAkB1F,GAAK2F,SACjC,CACD,SAAS1E,GAAajB,GAClB,OAAQ3D,GAAI2D,GAAOzF,KAASA,CAC/B,CACD,SAASyJ,GAAgBkB,GACrB,KAAMA,aAAkBxe,YACpB,MAAM,IAAI0B,MAAM,uBACpB,OAAOyM,OAAO,KAAOwM,GAAW3a,WAAWI,KAAKoe,GAAQS,WAC3D,CACD,IA+JIC,GA/JEC,GAAWhR,OAAO,sEACxB,SAAS+N,GAAmBvR,GACxB,OAAOgL,GAAI2H,GAAgB3S,GAASwU,GACvC,CACD,SAASxJ,GAAIzB,GAAgB,IAAbnU,EAAa,uDAATiU,EAAMI,EAChBtF,EAAMoF,EAAInU,EAChB,OAAO+O,GAAO8E,EAAM9E,EAAM/O,EAAI+O,CACjC,CACD,SAASgK,GAAOtO,GAA0B,IAAlB4U,EAAkB,uDAATpL,EAAMI,EACnC,GAAI5J,IAAWoJ,GAAOwL,GAAUxL,EAC5B,MAAM,IAAIlS,MAAJ,oDAAuD8I,EAAvD,gBAAqE4U,IAK/E,IAHA,IAAIlL,EAAIyB,GAAInL,EAAQ4U,GAChBrf,EAAIqf,EACJtK,EAAIlB,EAAKmB,EAAIlB,EAAK2J,EAAI3J,EAAKnO,EAAIkO,EAC5BM,IAAMN,GAAK,CACd,IAAMyL,EAAItf,EAAImU,EACRiH,EAAIpb,EAAImU,EACRoL,EAAIxK,EAAI0I,EAAI6B,EACZ5U,EAAIsK,EAAIrP,EAAI2Z,EAClBtf,EAAImU,EAAGA,EAAIiH,EAAGrG,EAAI0I,EAAGzI,EAAIrP,EAAG8X,EAAI8B,EAAG5Z,EAAI+E,CAC1C,CACD,IAAM8U,EAAMxf,EACZ,GAAIwf,IAAQ1L,EACR,MAAM,IAAInS,MAAM,0BACpB,OAAOiU,GAAIb,EAAGsK,EACjB,CAkBD,SAASI,GAAK1K,EAAG2K,GAGb,IAFA,IAAQrL,EAAMJ,EAANI,EACJtF,EAAMgG,EACH2K,KAAU7L,GACb9E,GAAOA,EACPA,GAAOsF,EAEX,OAAOtF,CACV,CACD,SAAS4Q,GAAY5K,GACjB,IAAQV,EAAMJ,EAANI,EACFuL,EAAMxR,OAAO,GACbyR,EAAOzR,OAAO,IACd0R,EAAO1R,OAAO,IACd2R,EAAO3R,OAAO,IACd4R,EAAO5R,OAAO,IAEduO,EADM5H,EAAIA,EAAKV,EACJU,EAAKV,EAChB4L,EAAMR,GAAK9C,EAAI5I,GAAO4I,EAAMtI,EAC5B6L,EAAMT,GAAKQ,EAAInM,GAAOiB,EAAKV,EAC3B8L,EAAOV,GAAKS,EAAIN,GAAOM,EAAM7L,EAC7B+L,EAAOX,GAAKU,EAAKN,GAAQM,EAAO9L,EAChCgM,EAAOZ,GAAKW,EAAKN,GAAQM,EAAO/L,EAChCiM,EAAOb,GAAKY,EAAKN,GAAQM,EAAOhM,EAChCkM,EAAQd,GAAKa,EAAKN,GAAQM,EAAOjM,EACjCmM,EAAQf,GAAKc,EAAMP,GAAQM,EAAOjM,EAClCoM,EAAQhB,GAAKe,EAAMX,GAAQM,EAAO9L,EAExC,MAAO,CAAEqM,UADUjB,GAAKgB,EAAM1M,GAAOgB,EAAKV,EACtBsI,GAAAA,EACvB,CACD,SAASpB,GAAQkC,EAAG9X,GAChB,IAAMgb,EAAK/K,GAAIjQ,EAAIA,EAAIA,GACjBib,EAAKhL,GAAI+K,EAAKA,EAAKhb,GAErBoP,EAAIa,GAAI6H,EAAIkD,EADJhB,GAAYlC,EAAImD,GAAIF,WAE1BG,EAAMjL,GAAIjQ,EAAIoP,EAAIA,GAClB+L,EAAQ/L,EACRgM,EAAQnL,GAAIb,EAAIN,GAChBuM,EAAWH,IAAQpD,EACnBwD,EAAWJ,IAAQjL,IAAK6H,GACxByD,EAASL,IAAQjL,IAAK6H,EAAIhJ,GAOhC,OANIuM,IACAjM,EAAI+L,IACJG,GAAYC,KACZnM,EAAIgM,GACJvG,GAAazF,KACbA,EAAIa,IAAKb,IACN,CAAE0G,QAASuF,GAAYC,EAAUpY,MAAOkM,EAClD,CACD,SAASqF,GAAW3P,GAChB,OAAO8Q,GAAQzH,EAAKrJ,EACvB,CACD,SAAS0W,GAAOlW,GACZ,OAAO2K,GAAI2H,GAAgBtS,GAAOgJ,EAAMxF,EAC3C,CAYD,SAAS2N,GAAYH,EAAKmF,GACtB,IAAMxW,EAAQqR,aAAehc,WAAaA,WAAWI,KAAK4b,GAAOyC,GAAWzC,GAC5E,GAA8B,kBAAnBmF,GAA+BxW,EAAMpK,SAAW4gB,EACvD,MAAM,IAAIzf,MAAJ,mBAAsByf,EAAtB,WACV,OAAOxW,CACV,CACD,SAAS+N,GAAgBY,EAAK8H,GAAoB,IAAfhE,IAAe,yDAC9C,IAAKgE,EACD,MAAM,IAAInhB,UAAU,qBAGxB,GAFmB,kBAARqZ,GAAoB3Y,OAAO+J,cAAc4O,KAChDA,EAAMnL,OAAOmL,IACE,kBAARA,GAAoBA,EAAM8H,EACjC,GAAIhE,GACA,GAAIxJ,EAAM0F,EACN,OAAOA,OAGX,GAAI1F,GAAO0F,EACP,OAAOA,EAGnB,MAAM,IAAIrZ,UAAU,0CACvB,CACD,SAASohB,GAAiB1W,GAItB,OAHAA,EAAM,IAAM,IACZA,EAAM,KAAO,IACbA,EAAM,KAAO,GACNA,CACV,CAID,SAAS2W,GAAgBC,GAKrB,GAAmB,MAJnBA,EACmB,kBAARA,GAAmC,kBAARA,EAC5BvC,GAAkBtG,GAAgB6I,EAAKhN,IACvC4H,GAAYoF,IACdhhB,OACJ,MAAM,IAAImB,MAAJ,qBACV,OAAO6f,CACV,CACD,SAASC,GAAeC,GACpB,IAAMC,EAAOL,GAAiBI,EAAO7X,MAAM,EAAG,KACxC+X,EAASF,EAAO7X,MAAM,GAAI,IAC1B4O,EAAS0I,GAAOQ,GAChB7D,EAAQrG,GAAMD,KAAK0D,SAASzC,GAC5BoJ,EAAa/D,EAAMjD,aACzB,MAAO,CAAE8G,KAAAA,EAAMC,OAAAA,EAAQnJ,OAAAA,EAAQqF,MAAAA,EAAO+D,WAAAA,EACzC,CAED,SAASC,KACL,GAA2B,oBAAhB3C,GACP,MAAM,IAAIxd,MAAM,oDACpB,OAAOwd,GAAW,WAAX,YACV,UACctB,GAAqB,mFAApC,WAAoC2D,GAApC,kFACWC,GADX,SACgCM,GAAMnO,OAAO2N,GAAgBC,IAD7D,8HAGA,SAASQ,GAAyBR,GAC9B,OAAOC,GAAeK,GAAQP,GAAgBC,IACjD,CAyBD,SAASS,GAAoBC,EAAKjV,EAASkV,GACvClV,EAAUmP,GAAYnP,GAChBkV,aAAqB1K,KACvB0K,EAAY1K,GAAMyG,QAAQiE,GAAW,IACzC,MAAiBD,aAAenE,GAAYmE,EAAIlE,iBAAmBD,GAAUG,QAAQgE,GAA7E9G,EAAR,EAAQA,EAAGzL,EAAX,EAAWA,EAEX,MAAO,CAAEyL,EAAAA,EAAGzL,EAAAA,EAAGyS,GADJtN,GAAc0C,KAAKqB,eAAelJ,GAC1B0S,IAAKF,EAAWG,IAAKrV,EAC3C,CACD,SAASsV,GAAmBJ,EAAW/G,EAAGgH,EAAIV,GAC1C,IAAMc,EAAIrB,GAAOO,GACXe,EAAK3N,GAAc8E,WAAWuI,GAAWtJ,eAAe2J,GAE9D,OADY1N,GAAc8E,WAAWwB,GAAG7K,IAAIkS,GACjCxH,SAASmH,GAAIvJ,eAAe5E,EAAMzF,GAAG+I,OAAOzC,GAAciD,KACxE,CAWM,IAAM2K,GAAO,CAChB7E,qBAAsBmE,GACtBW,aA/CJ,SAA0B/E,GACtB,OAAOoE,GAAyBpE,GAAYiE,UAC/C,EA8CGe,KApCJ,SAAkB3V,EAAS2Q,GACvB3Q,EAAUmP,GAAYnP,GACtB,MAAuC+U,GAAyBpE,GAAxDgE,EAAR,EAAQA,OAAQnJ,EAAhB,EAAgBA,OAAQoJ,EAAxB,EAAwBA,WAClBzG,EAAI+F,GAAOW,GAAQF,EAAQ3U,IAC3B4V,EAAIpL,GAAMD,KAAK0D,SAASE,GAExBzL,EAAIiG,GAAIwF,EADJ+F,GAAOW,GAAQe,EAAEhI,aAAcgH,EAAY5U,IAC/BwL,EAAQxE,EAAMxF,GACpC,OAAO,IAAIsP,GAAU8E,EAAGlT,GAAGkL,YAC9B,EA6BGiI,OATJ,SAAoBZ,EAAKjV,EAASkV,GAC9B,MAA4BF,GAAoBC,EAAKjV,EAASkV,GAAtD/G,EAAR,EAAQA,EAAGgH,EAAX,EAAWA,GAAIE,EAAf,EAAeA,IAAKD,EAApB,EAAoBA,IACdX,EAASI,GAAQ1G,EAAEP,aAAcwH,EAAIxH,aAAcyH,GACzD,OAAOC,GAAmBF,EAAKjH,EAAGgH,EAAIV,EACzC,GAYDjK,GAAMD,KAAKuL,eAAe,GA+DnB,IAcDjX,GAAS,CACXkX,KAAMC,EACNC,IAAqB,kBAATrX,MAAqB,WAAYA,KAAOA,KAAKC,YAAS5F,GAEzD6b,GAAQ,CACjBnH,WAAAA,GACA8D,WAAAA,GACAP,YAAAA,GACAN,qBAAAA,GACAjI,IAAAA,GACAmD,OAAAA,GACAoK,iBAAkB,CACd,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,mEACA,oEAEJC,oBAAqB,SAACnY,GAElB,IADAA,EAAOmR,GAAYnR,IACVzK,OAAS,IAAMyK,EAAKzK,OAAS,KAClC,MAAM,IAAImB,MAAM,yDACpB,OAAOiU,GAAI2H,GAAgBtS,GAAOgJ,EAAMxF,EAAIqF,GAAOA,CACtD,EACDuP,YAAa,WAAsB,IAArBC,EAAqB,uDAAP,GACxB,GAAIxX,GAAOoX,IACP,OAAOpX,GAAOoX,IAAIK,gBAAgB,IAAItjB,WAAWqjB,IAEhD,GAAIxX,GAAOkX,KAAM,CAClB,IAAQK,EAAgBvX,GAAOkX,KAAvBK,YACR,OAAO,IAAIpjB,WAAWojB,EAAYC,GAAahjB,OAClD,CAEG,MAAM,IAAIqB,MAAM,oDAEvB,EACD6hB,iBAAkB,WACd,OAAOzB,GAAMsB,YAAY,GAC5B,EACDzP,OAAQ,WAAF,8BAAE,0GACE3G,EAAUkR,GAAW,WAAX,MACZrS,GAAOoX,IAFP,gCAGqBpX,GAAOoX,IAAIO,OAAOtW,OAAO,UAAWF,EAAQ3M,QAHjE,cAGMA,EAHN,yBAIO,IAAIL,WAAWK,IAJtB,WAMKwL,GAAOkX,KANZ,0CAOO/iB,WAAWI,KAAKyL,GAAOkX,KAAKU,WAAW,UAAUxW,OAAOD,GAASE,WAPxE,cAUM,IAAIxL,MAAM,gDAVhB,4CAAF,kDAAE,GAaRgiB,WAnDiB,WAmD8B,IAApC1L,EAAoC,uDAAvB,EAAG6F,EAAoB,uDAAZrG,GAAMD,KAC/Be,EAASuF,EAAMvG,OAAOE,GAAMD,MAAQsG,EAAQ,IAAIrG,GAAMqG,EAAM/I,EAAG+I,EAAM9I,GAG3E,OAFAuD,EAAOwK,eAAe9K,GACtBM,EAAO2C,SAASnH,GACTwE,CACV,EACDqL,gBAAY1d,GAEhBjF,OAAO4iB,iBAAiB9B,GAAO,CAC3B6B,WAAY,CACRE,cAAc,EACdlV,IAFQ,WAGJ,OAAOuQ,EACV,EACDvR,IALQ,SAKJmW,GACK5E,KACDA,GAAc4E,EACrB,uDCt2BHC,GAAM,SAAC7P,EAAGnU,EAAGsb,GAAP,OAAcnH,EAAInU,EAAMmU,EAAImH,EAAMtb,EAAIsb,CAAtC,EAIN2I,GAAW,IAAIjY,YAAY,CAC7B,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UACpF,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UACpF,UAAY,UAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAIlFkY,GAAK,IAAIlY,YAAY,CACvB,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,aAIlFmY,GAAW,IAAInY,YAAY,IAC3BoY,GAAAA,SAAAA,iCACF,aAAc,6BACV,cAAM,GAAI,GAAI,GAAG,IAGZpO,EAAY,EAARkO,GAAG,GACZ,EAAKjO,EAAY,EAARiO,GAAG,GACZ,EAAKhO,EAAY,EAARgO,GAAG,GACZ,EAAK/N,EAAY,EAAR+N,GAAG,GACZ,EAAK7N,EAAY,EAAR6N,GAAG,GACZ,EAAK3N,EAAY,EAAR2N,GAAG,GACZ,EAAK5N,EAAY,EAAR4N,GAAG,GACZ,EAAK1N,EAAY,EAAR0N,GAAG,GAXF,CAYb,mCACD,WAEI,MAAO,CAD4BtX,KAA3BoJ,EAA2BpJ,KAAxBqJ,EAAwBrJ,KAArBsJ,EAAqBtJ,KAAlBuJ,EAAkBvJ,KAAfyJ,EAAezJ,KAAZ2J,EAAY3J,KAAT0J,EAAS1J,KAAN4J,EAEhC,oBAED,SAAIR,EAAGC,EAAGC,EAAGC,EAAGE,EAAGE,EAAGD,EAAGE,GACrB5J,KAAKoJ,EAAQ,EAAJA,EACTpJ,KAAKqJ,EAAQ,EAAJA,EACTrJ,KAAKsJ,EAAQ,EAAJA,EACTtJ,KAAKuJ,EAAQ,EAAJA,EACTvJ,KAAKyJ,EAAQ,EAAJA,EACTzJ,KAAK2J,EAAQ,EAAJA,EACT3J,KAAK0J,EAAQ,EAAJA,EACT1J,KAAK4J,EAAQ,EAAJA,CACZ,wBACD,SAAQ/I,EAAM3M,GAEV,IAAK,IAAIyE,EAAI,EAAGA,EAAI,GAAIA,IAAKzE,GAAU,EACnCqjB,GAAS5e,GAAKkI,EAAK0E,UAAUrR,GAAQ,GACzC,IAAK,IAAIyE,EAAI,GAAIA,EAAI,GAAIA,IAAK,CAC1B,IAAM8e,EAAMF,GAAS5e,EAAI,IACnBwW,EAAKoI,GAAS5e,EAAI,GAClB+e,EAAKlY,EAAKiY,EAAK,GAAKjY,EAAKiY,EAAK,IAAOA,IAAQ,EAC7CE,EAAKnY,EAAK2P,EAAI,IAAM3P,EAAK2P,EAAI,IAAOA,IAAO,GACjDoI,GAAS5e,GAAMgf,EAAKJ,GAAS5e,EAAI,GAAK+e,EAAKH,GAAS5e,EAAI,IAAO,CAClE,CAED,IAjEK4O,EAiEC6B,EAA2BpJ,KAA3BoJ,EAAGC,EAAwBrJ,KAAxBqJ,EAAGC,EAAqBtJ,KAArBsJ,EAAGC,EAAkBvJ,KAAlBuJ,EAAGE,EAAezJ,KAAfyJ,EAAGE,EAAY3J,KAAZ2J,EAAGD,EAAS1J,KAAT0J,EAAGE,EAAM5J,KAAN4J,EAC3B,IAASjR,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IACMqR,EAAMJ,GADGpK,EAAKiK,EAAG,GAAKjK,EAAKiK,EAAG,IAAMjK,EAAKiK,EAAG,OAnEjDlC,EAoE4BkC,GAAGE,GApEPpC,EAoEUmC,GAAK2N,GAAS1e,GAAK4e,GAAS5e,GAAM,EAE/DsR,GADSzK,EAAK4J,EAAG,GAAK5J,EAAK4J,EAAG,IAAM5J,EAAK4J,EAAG,KAC7BgO,GAAIhO,EAAGC,EAAGC,GAAM,EACrCM,EAAIF,EACJA,EAAIC,EACJA,EAAIF,EACJA,EAAKF,EAAIS,EAAM,EACfT,EAAID,EACJA,EAAID,EACJA,EAAID,EACJA,EAAKY,EAAKC,EAAM,CACnB,CAEDb,EAAKA,EAAIpJ,KAAKoJ,EAAK,EACnBC,EAAKA,EAAIrJ,KAAKqJ,EAAK,EACnBC,EAAKA,EAAItJ,KAAKsJ,EAAK,EACnBC,EAAKA,EAAIvJ,KAAKuJ,EAAK,EACnBE,EAAKA,EAAIzJ,KAAKyJ,EAAK,EACnBE,EAAKA,EAAI3J,KAAK2J,EAAK,EACnBD,EAAKA,EAAI1J,KAAK0J,EAAK,EACnBE,EAAKA,EAAI5J,KAAK4J,EAAK,EACnB5J,KAAKgB,IAAIoI,EAAGC,EAAGC,EAAGC,EAAGE,EAAGE,EAAGD,EAAGE,EACjC,2BACD,WACI2N,GAASlW,KAAK,EACjB,wBACD,WACIrB,KAAKgB,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC9BhB,KAAKtM,OAAO2N,KAAK,EACpB,OAzECmW,CAAe/W,GA+ERmX,GAAS1X,GAAgB,kBAAM,IAAIsX,EAAV,yICbrBK,sBAwBAC,IC9FJC,GAAAA,SAAAA,iCAUXxjB,SAAAA,EAAYyjB,EAAkBC,GAAAA,IAAAA,EACxBtM,GADwBsM,EAAAA,EAAAA,GAAAA,KAAAA,GAE5B,IAAQ5X,EAAqB2X,EAArB3X,QAAY6X,GAApB,OAA6BF,EAA7B,IACQG,EAASH,EAATG,KACFzC,EACY,IAAhByC,EAAKvkB,OAAeyM,EAApB8X,YAA0CA,EAAKC,KAAK,KAApD,OAA+D/X,EALrC4X,OAM5B,cAAMvC,GACNrhB,OAAOI,QAAPJ,EAAAA,GAAAA,GAAAA,GAAoB6jB,GACpB,EAAKtjB,KAAO,EAAKL,YAAYK,KAC7B,EAAKqjB,SAAW,iBACd,cAAQ,EAAAtM,GAAR,EAAQA,EAAR,CAAoBqM,GAApB,eAAgCC,KADlC,EAT4BA,CAY7B,kBAtBUF,SAAoBzkB,YDhBjC,SAAS+kB,GAAclQ,GACrB,OAAOmQ,GAASnQ,IAAoC,oBAAvBA,EAAEoQ,OAAOC,SACvC,UAMeF,GAASnQ,GACvB,MAAoB,kBAANA,GAAuB,MAALA,CACjC,UAmBesQ,GAAMxc,GACpB,MAAwB,kBAAVA,EAAqByc,KAAKC,UAAU1c,GAA3C,GAAuDA,CAC/D,UAOe2c,GAAiBC,GAC/B,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAM9c,EAAd,EAAcA,MACd,OAAO8c,OAAOzf,EAAY2C,CAC3B,UAMe+c,GACdtH,EACAuH,EACAC,EACAjd,GAEA,IAAe,IAAXyV,EAAJ,EAEsB,IAAXA,EACTA,EAAS,CAAC,EACiB,kBAAXA,IAChBA,EAAS,CAAErR,QAASqR,IAGtB,IAAQyG,EAAiBc,EAAjBd,KAAMgB,EAAWF,EAAXE,OACNC,EAASF,EAATE,KACR,EAKI1H,EAJF2H,EADF,EACEA,WADF,IAEEhZ,QAAAA,OAFF,MAES,6BAAiC+Y,EAAjC,KACLC,EAAa,qBAAsBA,EAAzB,IAA0C,IAD/C,oBAEcZ,GAAMxc,GAFpB,IAFT,EAOA,OAAO,gBACLA,MAAAA,EACAmd,KAAAA,EACAC,WAAAA,EACAzE,IAAKuD,EAAKA,EAAKvkB,OAAS,GACxBukB,KAAAA,EACAgB,OAAAA,GACGzH,GAPL,IAQErR,QAAAA,GAnBD,CAqBF,UAMgBwX,GACfnG,EACAuH,EACAC,EACAjd,qFAEKoc,GAAW3G,KACdA,EAAS,CAACA,cAGIA,+DAALlD,EAAAA,EAAAA,QACHwJ,EAAUgB,GAAUxK,EAAGyK,EAASC,EAAQjd,IAEjC,iBACX,iBAAM+b,+MAUKF,GACf7b,EACAid,iJAWA,GAVAI,EAAAA,EAAAA,OAAAA,QAAAA,IAAAA,EAAAA,GAAAA,EAAAA,GAKI,CAAC,IAEiEA,EAA9DnB,KAAAA,OAAAA,IAAAA,EAAO,OAAuDmB,EAAnDH,OAAAA,OAAAA,IAAAA,EAAS,CAACld,GAAD,IAA0Cqd,EAAjCC,OAAAA,OAAAA,IAAAA,GAAS,IAAwBD,EAAjBhO,KAAAA,OAAAA,IAAAA,GAAO,EACtDkO,EAAe,CAAErB,KAAAA,EAAMgB,OAAAA,GAEzBI,IACFtd,EAAQid,EAAOO,QAAQxd,EAAOud,GAG5BlO,GACgB,SAAhB4N,EAAOE,MACPd,GAASY,EAAOQ,SAChBpB,GAASrc,KACR9C,MAAMC,QAAQ6C,IAEf,IAAW2Y,KAAO3Y,OACW3C,IAAvB4f,EAAOQ,OAAO9E,WACT3Y,EAAM2Y,GAMjB+E,GAAQ,YAEUT,EAAOU,UAAU3d,EAAOud,6DAE5C,OAFSxB,EAAAA,EAAAA,MACT2B,GAAQ,YACF,CAAC3B,OAAS1e,4JAGI4f,EAAOW,QAAQ5d,EAAOud,oFAAlC5D,EAAAA,EAAAA,GAAG7c,EAAAA,EAAAA,GAAGgK,EAAAA,EAAAA,GACR+W,EAAKhC,GAAI/e,EAAGgK,EAAa,CAC7BoV,UAAY7e,IAANsc,EAAkBuC,EAAlBvC,GAAAA,QAAAA,EAAAA,EAAAA,GAA6BuC,GAA7BvC,CAAmCA,IACzCuD,YAAc7f,IAANsc,EAAkBuD,EAAlBvD,GAAAA,QAAAA,EAAAA,EAAAA,GAA+BuD,GAA/BvD,CAAuC7c,IAC/CwgB,OAAAA,EACAjO,KAAAA,cAGcwO,mEAALxR,EAAAA,EAAAA,OACH,GAAD,iBAEH,OADAqR,GAAQ,YACF,CAACrR,EAAE,QAAIhP,mCACJigB,IACTxgB,EAAIuP,EAAE,QAEIhP,IAANsc,EACF3Z,EAAQlD,EACCkD,aAAiB8d,IAC1B9d,EAAM+E,IAAI4U,EAAG7c,GACJkD,aAAiB+d,IAC1B/d,EAAM0H,IAAI5K,GACDuf,GAASrc,KAClBA,EAAM2Z,GAAK7c,kSAMf4gB,EAAO,2BACaT,EAAOe,QAAQhe,EAAYud,+DAE/C,OAFSxB,EAAAA,EAAAA,MACT2B,GAAQ,YACF,CAAC3B,OAAS1e,wJAIhBqgB,EAAO,iBACT,iBAAM,MAACrgB,EAAW2C,8GEtLTie,GAAAA,WAYX3lB,SAAAA,EAAY4lB,GAAAA,IAAAA,EAAAA,MAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAQV,IACEf,EAMEe,EANFf,KACAM,EAKES,EALFT,OACAE,EAIEO,EAJFP,UACAK,EAGEE,EAHFF,QAJF,EAOIE,EAFFV,QAAAA,OALF,MAKaxd,SAAAA,GAAD,OAAoBA,CAApB,EALZ,IAOIke,EADFN,QAAAA,OANF,sBAMY,sHANZ,EASA7Z,KAAKoZ,KAAOA,EACZpZ,KAAK0Z,OAASA,EACd1Z,KAAK6Z,QAAUA,EACf7Z,KAAKyZ,QAAUA,EAGbzZ,KAAK4Z,UADHA,EACe,SAAC3d,EAAOgd,GAEvB,OAAOpB,GADQ+B,EAAU3d,EAAOgd,GACNA,EAAS,EAAMhd,EAF3C,EAKiB,iBAAM,EAAN,EAIjB+D,KAAKia,QADHA,EACa,SAAChe,EAAOgd,GAErB,OAAOpB,GADQoC,EAAQhe,EAAOgd,GACJA,EAAS,EAAMhd,EAF3C,EAKe,iBAAM,EAAN,CAElB,sCAMDkC,SAAOlC,GACL,gBAoDFA,EACAid,GAEA,IAAMxH,EAAS0I,GAASne,EAAOid,GAE/B,GAAIxH,EAAO,GACT,MAAMA,EAAO,EAEhB,CA5DUvT,CAAOlC,EAAO+D,KACtB,uBAMD1L,SAAO2H,GACL,OAAO3H,GAAO2H,EAAO+D,KACtB,mBAMDqa,SAAGpe,GACD,OAAOoe,GAAGpe,EAAO+D,KAClB,qBAODsL,SAAKrP,GACH,gBAuDuBA,EAAgBid,GACzC,IAAMxH,EAAS0I,GAASne,EAAOid,EAAQ,CAAEK,QAAQ,EAAMjO,MAAM,IAE7D,GAAIoG,EAAO,GACT,MAAMA,EAAO,GAEb,OAAOA,EAAO,EAEjB,CA/DUpG,CAAKrP,EAAO+D,KACpB,yBAWDoa,SACEne,GADM,IAENqd,EAFM,uDAIF,CAAC,EAEL,OAAOc,GAASne,EAAO+D,KAAMsZ,EAC9B,OAtGUY,YA4HG5lB,GAAa2H,EAAgBid,GAC3C,IAAMxH,EAAS0I,GAASne,EAAOid,EAAQ,CAAEK,QAAQ,IAEjD,GAAI7H,EAAO,GACT,MAAMA,EAAO,GAEb,OAAOA,EAAO,EAEjB,UAoBe2I,GAASpe,EAAgBid,GAEvC,OADekB,GAASne,EAAOid,GAChB,EAChB,UAOekB,GACdne,EACAid,GAII,IAHJI,EAGI,0DAEEgB,EAASxC,GAAI7b,EAAOid,EAAQI,GAC5BiB,EAAQ3B,GAAc0B,GAE5B,GAAIC,EAAM,GAAI,CACZ,IAAMC,EAAQ,IAAIzC,GAAYwC,EAAM,IAAtB,eAA0B,uGACtBD,GADsB,8DAC3BhS,EAD2B,SAE9B,GAF8B,gBAGlC,OAHkC,SAG5BA,EAAE,GAH0B,qHAAA8C,IAAA,6EAQxC,MAAO,CAACoP,OAAOlhB,EATjB,CAWE,IAAMP,EAAIwhB,EAAM,GAChB,MAAO,MAACjhB,EAAWP,EAEtB,UCpIe0hB,GAAU7lB,EAAcglB,GACtC,OAAO,IAAIM,GAAO,CAAEd,KAAMxkB,EAAM8kB,OAAQ,KAAME,UAAAA,GAC/C,UCrCe7H,GAA6B2I,GAC3C,OAAO,IAAIR,GAAO,CAChBd,KAAM,QACNM,OAAQgB,EACPb,SAHe,0BAGP5d,GAHO,wFAIVye,IAAWvhB,MAAMC,QAAQ6C,GAJf,2BAKSA,EAAM4d,WALf,yDAMV,OANU,qBAKAlhB,EALA,KAKGI,EALH,cAMJ,CAACJ,EAAGI,EAAG2hB,GANH,qMAUhBjB,QAVgB,SAURxd,GACN,OAAO9C,MAAMC,QAAQ6C,GAASA,EAAMgB,QAAUhB,CAXhC,EAahB2d,UAbgB,SAaN3d,GACR,OACE9C,MAAMC,QAAQ6C,IAAd9C,0CAC0Csf,GAAMxc,EAEnD,GAEJ,UAMe0e,KACd,OAAOF,GAAO,WAAYxe,SAAAA,GACxB,MAAwB,mBAAVA,CADH,GAGd,UAoEewC,GACdmc,GAEA,OAAOH,GAAO,YAAaxe,SAAAA,GACzB,OACEA,aAAiB2e,GAAjB3e,eACgB2e,EAAMhmB,KADtB,6BACwD6jB,GAAMxc,EAHrD,GAMd,UAqGe4e,GAAWC,GACzB,IAAMC,EAActC,GAAMqC,GACpBxS,SAAWwS,EACjB,OAAO,IAAIZ,GAAO,CAChBd,KAAM,UACNM,OACQ,WAANpR,GAAwB,WAANA,GAAwB,YAANA,EAAkBwS,EAAW,KACnElB,UAJgB,SAIN3d,GACR,OACEA,IAAU6e,GAAV7e,yBAC0B8e,EAD1B,oBAC0DtC,GAAMxc,EAEnE,GAEJ,UAwCe+e,KACd,OAAOP,GAAO,SAAS,kBAAM,CAAN,GACxB,UAMeQ,GAAe/B,GAC7B,OAAO,IAAIgB,IAAJ,kBACFhB,GADE,IAELU,UAAW,SAAC3d,EAAOud,GAAR,OAA0B,OAAVvd,GAAkBid,EAAOU,UAAU3d,EAAOud,EAA1D,EACXS,QAAS,SAAChe,EAAOud,GAAR,OAA0B,OAAVvd,GAAkBid,EAAOe,QAAQhe,EAAOud,EAAxD,IAEZ,UAMe3b,KACd,OAAO4c,GAAO,UAAWxe,SAAAA,GACvB,MACoB,kBAAVA,IAAuBmW,MAAMnW,IAArC,oCACoCwc,GAAMxc,EAHjC,GAMd,UAgDeif,GAAehC,GAC7B,OAAO,IAAIgB,IAAJ,kBACFhB,GADE,IAELU,UAAW,SAAC3d,EAAOud,GAAR,YACClgB,IAAV2C,GAAuBid,EAAOU,UAAU3d,EAAOud,EADtC,EAEXS,QAAS,SAAChe,EAAOud,GAAR,YAA0BlgB,IAAV2C,GAAuBid,EAAOe,QAAQhe,EAAOud,EAA7D,IAEZ,UASe2B,GACdC,EACAC,GAEA,OAAO,IAAInB,GAAO,CAChBd,KAAM,SACNM,OAAQ,KACPG,SAHe,0BAGP5d,GAHO,kFAIVqc,GAASrc,GAJC,qCAKIA,GALJ,8CAOV,OAFS2Z,EALC,WAMJ7c,EAAIkD,EAAM2Z,GANN,SAOJ,CAACA,EAAGA,EAAGwF,GAPH,OAQV,OARU,SAQJ,CAACxF,EAAG7c,EAAGsiB,GARH,iEAYhBzB,UAZgB,SAYN3d,GACR,OACEqc,GAASrc,IAATqc,qCAAwDG,GAAMxc,EAEjE,GAEJ,UAiDeqf,KACd,OAAOb,GAAO,UAAWxe,SAAAA,GACvB,MACmB,kBAAVA,GAAP,oCACoCwc,GAAMxc,EAHjC,GAMd,UAsDese,GAAMgB,GACpB,IAAMC,EAAQR,KAEd,OAAO,IAAId,GAAO,CAChBd,KAAM,QACNM,OAAQ,KACPG,SAHe,0BAGP5d,GAHO,kFAIV9C,MAAMC,QAAQ6C,GAJJ,gBAKNrI,EAASuB,KAAKsf,IAAI8G,EAAS3nB,OAAQqI,EAAMrI,QAEtC+E,EAAI,EAPD,YAOIA,EAAI/E,GAPR,gBAQV,OARU,SAQJ,CAAC+E,EAAGsD,EAAMtD,GAAI4iB,EAAS5iB,IAAM6iB,GARzB,OAOgB7iB,IAPhB,yDAYhBihB,UAZgB,SAYN3d,GACR,OACE9C,MAAMC,QAAQ6C,IAAd9C,oCACoCsf,GAAMxc,EAE7C,GAEJ,UASemd,GACdM,GAEA,IAAM+B,EAAOpnB,OAAOonB,KAAK/B,GACzB,OAAO,IAAIQ,GAAO,CAChBd,KAAM,OACNM,OAAAA,EACCG,SAHe,0BAGP5d,GAHO,oFAIVqc,GAASrc,GAJC,2BAKIwf,GALJ,yDAMV,OADS7F,EALC,iBAMJ,CAACA,EAAG3Z,EAAM2Z,GAAI8D,EAAO9D,IANjB,qMAUhBgE,UAVgB,SAUN3d,GACR,OACEqc,GAASrc,IAATqc,qCAAwDG,GAAMxc,EAEjE,GAEJ,UAwDeN,GAAM+f,GACpB,IAAMX,EAAcW,EAAQ/W,KAAK5B,SAAAA,GAAD,OAAOA,EAAEqW,IAAT,IAAehB,KAAK,OACpD,OAAO,IAAI8B,GAAO,CAChBd,KAAM,QACNM,OAAQ,KACRE,UAHgB,SAGN3d,EAAOud,GACf,IADO,EC/mBoBra,EDgnBrB8Y,EAAW,GADV,UAGSyD,GAHT,IAGP,IAAK,EAAL,qBAAyB,KACvB,EAAoB5D,GAAI7b,EADD,QACWud,GAAxBc,GCnnBenb,EDmnBzB,GClnBC,EAAAwc,GAAA,GAAexc,KAAQ,EAAAyc,GAAA,GAAgBzc,KAAQ,EAAA0c,GAAA,GAA2B1c,KAAQ,EAAA2c,GAAA,MDknBnF,SAGA,KAFA,OAAgBxB,EAAhB,MAEW,GACT,MAAO,GACF,gBACmBA,GADnB,IACL,IAAK,EAAL,qBAAgC,KAApBtC,GAAoB,qBAC1BA,GACFC,EAASrf,KAAKof,EAEjB,CALI,+BAOR,CAhBM,+BAkBP,MAAO,8CACyC+C,EADzC,oBACyEtC,GAC5Exc,IAFJ,OAIKgc,EAEN,GAEJ,UAMe8D,KACd,OAAOtB,GAAO,WAAW,kBAAM,CAAN,GAC1B,UEtoBelB,GACdL,EACA8C,EACAvC,GAEA,OAAO,IAAIS,IAAJ,kBACFhB,GADE,IAELO,QAAS,SAACxd,EAAOud,GACf,OAAOa,GAAGpe,EAAO+f,GACb9C,EAAOO,QAAQA,EAAQxd,EAAOud,GAAMA,GACpCN,EAAOO,QAAQxd,EAAOud,EAC3B,IAEJ,CCjBD,2CAPOyC,GAAmC,GAA1BC,GAA8B,GAAnBC,GAAuB,GAC5ClV,GAAMzF,OAAO,GACb0F,GAAM1F,OAAO,GACb2F,GAAM3F,OAAO,GACb4a,GAAM5a,OAAO,GACb6a,GAAQ7a,OAAO,KACf8a,GAAS9a,OAAO,KACb+a,GAAQ,EAAGtG,GAAI/O,GAAKiB,GAAI,EAAGC,GAAI,EAAGmU,GAAQ,GAAIA,KAAS,QAEnD,CAACnU,IAAI,EAAID,GAAI,EAAIC,IAAK,GAA9BD,GAF2D,MAExDC,GAFwD,MAG5D6T,GAAQrjB,KAAK,GAAK,EAAIwP,GAAID,KAE1B+T,GAAUtjB,MAAQ2jB,GAAQ,IAAMA,GAAQ,GAAM,EAAK,IAGnD,IADA,IAAIjU,GAAIrB,GACC+K,GAAI,EAAGA,GAAI,EAAGA,MACnBiE,IAAMA,IAAK/O,IAAS+O,IAAKmG,IAAOE,IAAWD,IACnClV,KACJmB,IAAKpB,KAASA,IAAO1F,OAAOwQ,KAAM9K,IAE1CiV,GAAWvjB,KAAK0P,GACnB,CACD,OAAmC7F,EAAAA,MAAU0Z,IAAY,GAAzD,iBAAOK,GAAP,MAAoBC,GAApB,MAEMC,GAAQ,SAAC9a,EAAGC,EAAGkB,GAAP,OAAaA,EAAI,GAAKN,EAAAA,OAAWb,EAAGC,EAAGkB,GAAKN,EAAAA,OAAWb,EAAGC,EAAGkB,EAA7D,EACR4Z,GAAQ,SAAC/a,EAAGC,EAAGkB,GAAP,OAAaA,EAAI,GAAKN,EAAAA,OAAWb,EAAGC,EAAGkB,GAAKN,EAAAA,OAAWb,EAAGC,EAAGkB,EAA7D,EA+CP,IAAM6Z,GAAb,0CAEI,WAAYre,EAAUse,EAAQve,GAA2C,MAAhCwe,EAAgC,wDAAbC,EAAa,uDAAJ,GAcjE,IAdqE,gBACrE,gBACKxe,SAAWA,EAChB,EAAKse,OAASA,EACd,EAAKve,UAAYA,EACjB,EAAKwe,UAAYA,EACjB,EAAKC,OAASA,EACd,EAAKnc,IAAM,EACX,EAAKoc,OAAS,EACd,EAAKpe,UAAW,EAChB,EAAKD,WAAY,EAEjBR,EAAAA,OAAcG,GAEV,GAAK,EAAKC,UAAY,EAAKA,UAAY,IACvC,MAAM,IAAIxJ,MAAM,4CAfiD,OAgBrE,EAAKkoB,MAAQ,IAAI5pB,WAAW,KAC5B,EAAK6pB,QAAUle,EAAI,EAAKie,OAjB6C,CAkBxE,CApBL,qCAqBI,YAlEG,SAAiBla,GAGpB,IAHoC,IAAbga,EAAa,uDAAJ,GAC1B1T,EAAI,IAAIjK,YAAY,IAEjBmd,EAAQ,GAAKQ,EAAQR,EAAQ,GAAIA,IAAS,CAE/C,IAAK,IAAIpU,EAAI,EAAGA,EAAI,GAAIA,IACpBkB,EAAElB,GAAKpF,EAAEoF,GAAKpF,EAAEoF,EAAI,IAAMpF,EAAEoF,EAAI,IAAMpF,EAAEoF,EAAI,IAAMpF,EAAEoF,EAAI,IAC5D,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAOzB,IANA,IAAMgV,GAAQhV,EAAI,GAAK,GACjBiV,GAAQjV,EAAI,GAAK,GACjBkV,EAAKhU,EAAE+T,GACPE,EAAKjU,EAAE+T,EAAO,GACdG,EAAKb,GAAMW,EAAIC,EAAI,GAAKjU,EAAE8T,GAC1BK,EAAKb,GAAMU,EAAIC,EAAI,GAAKjU,EAAE8T,EAAO,GAC9B/U,EAAI,EAAGA,EAAI,GAAIA,GAAK,GACzBrF,EAAEoF,EAAIC,IAAMmV,EACZxa,EAAEoF,EAAIC,EAAI,IAAMoV,EAMxB,IAFA,IAAIC,EAAO1a,EAAE,GACT2a,EAAO3a,EAAE,GACJuF,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAMtO,EAAQkiB,GAAU5T,GAClBiV,EAAKb,GAAMe,EAAMC,EAAM1jB,GACvBwjB,EAAKb,GAAMc,EAAMC,EAAM1jB,GACvB2jB,EAAK1B,GAAQ3T,GACnBmV,EAAO1a,EAAE4a,GACTD,EAAO3a,EAAE4a,EAAK,GACd5a,EAAE4a,GAAMJ,EACRxa,EAAE4a,EAAK,GAAKH,CACf,CAED,IAAK,IAAIpV,EAAI,EAAGA,EAAI,GAAIA,GAAK,GAAI,CAC7B,IAAK,IAAID,EAAI,EAAGA,EAAI,GAAIA,IACpBkB,EAAElB,GAAKpF,EAAEqF,EAAID,GACjB,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACpBpF,EAAEqF,EAAID,KAAOkB,GAAGlB,EAAI,GAAK,IAAMkB,GAAGlB,EAAI,GAAK,GAClD,CAEDpF,EAAE,IAAMyZ,GAAYD,GACpBxZ,EAAE,IAAM0Z,GAAYF,EACvB,CACDlT,EAAEhI,KAAK,EACV,CAuBOuc,CAAQ5d,KAAKkd,QAASld,KAAK+c,QAC3B/c,KAAKgd,OAAS,EACdhd,KAAKY,IAAM,CACd,GAzBL,oBA0BI,SAAOjB,GACHxB,EAAAA,OAAc6B,MAId,IAHA,IAAQzB,EAAoByB,KAApBzB,SAAU0e,EAAUjd,KAAVid,MAEZnc,GADNnB,EAAOD,EAAQC,IACE/L,OACRgN,EAAM,EAAGA,EAAME,GAAM,CAE1B,IADA,IAAMC,EAAO5L,KAAK4J,IAAIR,EAAWyB,KAAKY,IAAKE,EAAMF,GACxCjI,EAAI,EAAGA,EAAIoI,EAAMpI,IACtBskB,EAAMjd,KAAKY,QAAUjB,EAAKiB,KAC1BZ,KAAKY,MAAQrC,GACbyB,KAAK6d,QACZ,CACD,OAAO7d,IACV,GAvCL,oBAwCI,WACI,IAAIA,KAAKpB,SAAT,CAEAoB,KAAKpB,UAAW,EAChB,IAAQqe,EAAiCjd,KAAjCid,MAAOJ,EAA0B7c,KAA1B6c,OAAQjc,EAAkBZ,KAAlBY,IAAKrC,EAAayB,KAAbzB,SAE5B0e,EAAMrc,IAAQic,EACU,KAAV,IAATA,IAAwBjc,IAAQrC,EAAW,GAC5CyB,KAAK6d,SACTZ,EAAM1e,EAAW,IAAM,IACvByB,KAAK6d,QARK,CASb,GAnDL,uBAoDI,SAAU/e,GACNX,EAAAA,OAAc6B,MAAM,GACpB7B,EAAAA,MAAaW,GACbkB,KAAK8d,SAGL,IAFA,IAAMC,EAAY/d,KAAKid,MACf1e,EAAayB,KAAbzB,SACCqC,EAAM,EAAGE,EAAMhC,EAAIlL,OAAQgN,EAAME,GAAM,CACxCd,KAAKgd,QAAUze,GACfyB,KAAK6d,SACT,IAAM9c,EAAO5L,KAAK4J,IAAIR,EAAWyB,KAAKgd,OAAQlc,EAAMF,GACpD9B,EAAIkC,IAAI+c,EAAU9c,SAASjB,KAAKgd,OAAQhd,KAAKgd,OAASjc,GAAOH,GAC7DZ,KAAKgd,QAAUjc,EACfH,GAAOG,CACV,CACD,OAAOjC,CACV,GAnEL,qBAoEI,SAAQA,GAEJ,IAAKkB,KAAK8c,UACN,MAAM,IAAI/nB,MAAM,yCACpB,OAAOiL,KAAKge,UAAUlf,EACzB,GAzEL,iBA0EI,SAAId,GAEA,OADAG,EAAAA,OAAcH,GACPgC,KAAKie,QAAQ,IAAI5qB,WAAW2K,GACtC,GA7EL,wBA8EI,SAAWc,GAEP,GADAX,EAAAA,OAAcW,EAAKkB,MACfA,KAAKpB,SACL,MAAM,IAAI7J,MAAM,+BAGpB,OAFAiL,KAAKge,UAAUlf,GACfkB,KAAKoC,UACEtD,CACV,GArFL,oBAsFI,WACI,OAAOkB,KAAKkC,WAAW,IAAI7O,WAAW2M,KAAK1B,WAC9C,GAxFL,qBAyFI,WACI0B,KAAKrB,WAAY,EACjBqB,KAAKid,MAAM5b,KAAK,EACnB,GA5FL,wBA6FI,SAAWgB,GACP,IAAQ9D,EAAmDyB,KAAnDzB,SAAUse,EAAyC7c,KAAzC6c,OAAQve,EAAiC0B,KAAjC1B,UAAWye,EAAsB/c,KAAtB+c,OAAQD,EAAc9c,KAAd8c,UAY7C,OAXAza,IAAOA,EAAK,IAAIua,EAAOre,EAAUse,EAAQve,EAAWwe,EAAWC,IAC/D1a,EAAG6a,QAAQlc,IAAIhB,KAAKkd,SACpB7a,EAAGzB,IAAMZ,KAAKY,IACdyB,EAAG2a,OAAShd,KAAKgd,OACjB3a,EAAGzD,SAAWoB,KAAKpB,SACnByD,EAAG0a,OAASA,EAEZ1a,EAAGwa,OAASA,EACZxa,EAAG/D,UAAYA,EACf+D,EAAGya,UAAYA,EACfza,EAAG1D,UAAYqB,KAAKrB,UACb0D,CACV,KA3GL,GAA4BtC,GA6GtBme,GAAM,SAACrB,EAAQte,EAAUD,GAAnB,OAAiC4B,GAAgB,kBAAM,IAAI0c,GAAOre,EAAUse,EAAQve,EAAnC,GAAjD,EAcC6f,IAbWD,GAAI,EAAM,IAAK,IAKfA,GAAI,EAAM,IAAK,IACfA,GAAI,EAAM,IAAK,IACfA,GAAI,EAAM,GAAI,IACZA,GAAI,EAAM,IAAK,IAKfA,GAAI,EAAM,IAAK,KAGnCE,IAFoBF,GAAI,EAAM,IAAK,IACfA,GAAI,EAAM,GAAI,IACvB,SAACrB,EAAQte,EAAUD,GAAnB,OdlFV,SAAiC+f,GACpC,IAAMje,EAAQ,SAACsV,EAAK4I,GAAN,OAAeD,EAASC,GAAMhe,OAAOZ,EAAQgW,IAAMnV,QAAnD,EACRC,EAAM6d,EAAS,CAAC,GAItB,OAHAje,EAAM9B,UAAYkC,EAAIlC,UACtB8B,EAAM7B,SAAWiC,EAAIjC,SACrB6B,EAAM9L,OAAS,SAACgqB,GAAD,OAAUD,EAASC,EAAnB,EACRle,CACV,Cc2EiDme,EAAwB,eAACD,EAAD,uDAAQ,CAAC,EAAT,OAAe,IAAI1B,GAAOre,EAAUse,OAAuBvjB,IAAfglB,EAAKE,MAAsBlgB,EAAYggB,EAAKE,OAAO,EAA/F,GAAzD,GCvMXC,IDwMkBL,GAAS,GAAM,IAAK,IACpBA,GAAS,GAAM,IAAK,ICzMtCK,SAAAA,iCACF,WAAYpgB,EAAMqgB,GAAM,uBACpB,gBACK9f,UAAW,EAChB,EAAKD,WAAY,EACjBR,EAAAA,KAAYE,GACZ,IAAMuW,EAAMlV,EAAQgf,GAEpB,GADA,EAAKC,MAAQtgB,EAAK/J,SACe,oBAAtB,EAAKqqB,MAAMre,OAClB,MAAM,IAAIhN,UAAU,uDACxB,EAAKiL,SAAW,EAAKogB,MAAMpgB,SAC3B,EAAKD,UAAY,EAAKqgB,MAAMrgB,UAC5B,IAAMC,EAAW,EAAKA,SAChBoT,EAAM,IAAIte,WAAWkL,GAE3BoT,EAAI3Q,IAAI4T,EAAIhhB,OAAS2K,EAAWF,EAAK/J,SAASgM,OAAOsU,GAAKrU,SAAWqU,GACrE,IAAK,IAAIjc,EAAI,EAAGA,EAAIgZ,EAAI/d,OAAQ+E,IAC5BgZ,EAAIhZ,IAAM,GACd,EAAKgmB,MAAMre,OAAOqR,GAElB,EAAKiN,MAAQvgB,EAAK/J,SAElB,IAAK,IAAIqE,EAAI,EAAGA,EAAIgZ,EAAI/d,OAAQ+E,IAC5BgZ,EAAIhZ,IAAM,IAtBM,OAuBpB,EAAKimB,MAAMte,OAAOqR,GAClBA,EAAItQ,KAAK,GAxBW,CAyBvB,sCACD,SAAOwd,GAGH,OAFA1gB,EAAAA,OAAc6B,MACdA,KAAK2e,MAAMre,OAAOue,GACX7e,IACV,2BACD,SAAWlB,GACPX,EAAAA,OAAc6B,MACd7B,EAAAA,MAAaW,EAAKkB,KAAK1B,WACvB0B,KAAKpB,UAAW,EAChBoB,KAAK2e,MAAMzc,WAAWpD,GACtBkB,KAAK4e,MAAMte,OAAOxB,GAClBkB,KAAK4e,MAAM1c,WAAWpD,GACtBkB,KAAKoC,SACR,uBACD,WACI,IAAMtD,EAAM,IAAIzL,WAAW2M,KAAK4e,MAAMtgB,WAEtC,OADA0B,KAAKkC,WAAWpD,GACTA,CACV,2BACD,SAAWuD,GAEPA,IAAOA,EAAKhO,OAAOC,OAAOD,OAAOyqB,eAAe9e,MAAO,CAAC,IACxD,IAAQ4e,EAA2D5e,KAA3D4e,MAAOD,EAAoD3e,KAApD2e,MAAO/f,EAA6CoB,KAA7CpB,SAAUD,EAAmCqB,KAAnCrB,UAAWJ,EAAwByB,KAAxBzB,SAAUD,EAAc0B,KAAd1B,UAQrD,OANA+D,EAAGzD,SAAWA,EACdyD,EAAG1D,UAAYA,EACf0D,EAAG9D,SAAWA,EACd8D,EAAG/D,UAAYA,EACf+D,EAAGuc,MAAQA,EAAM3e,WAAWoC,EAAGuc,OAC/Bvc,EAAGsc,MAAQA,EAAM1e,WAAWoC,EAAGsc,OACxBtc,CACV,wBACD,WACIrC,KAAKrB,WAAY,EACjBqB,KAAK4e,MAAMxc,UACXpC,KAAK2e,MAAMvc,SACd,OA/DCqc,CAAa1e,IAuENgf,GAAO,SAAC1gB,EAAMuW,EAAKvU,GAAZ,OAAwB,IAAIoe,GAAKpgB,EAAMuW,GAAKtU,OAAOD,GAASE,QAA5D,EACpBwe,GAAKzqB,OAAS,SAAC+J,EAAMuW,GAAP,OAAe,IAAI6J,GAAKpgB,EAAMuW,EAA9B,+BCzER3N,GAAMzF,OAAO,GACb0F,GAAM1F,OAAO,GACb2F,GAAM3F,OAAO,GACbwd,GAAMxd,OAAO,GACbyd,GAAMzd,OAAO,GACb6F,GAAQhT,OAAOiT,OAAO,CACxBC,EAAGN,GACH7T,EAAGoO,OAAO,GACViG,EAAGjG,OAAO,sEACV1D,EAAG0D,OAAO,sEACVI,EAAGsF,GACHQ,GAAIlG,OAAO,iFACXmG,GAAInG,OAAO,iFACX0d,KAAM1d,OAAO,wEAGjB,SAAS2d,GAAUhX,GACf,IAAQZ,EAASF,GAATE,EAAGnU,EAAMiU,GAANjU,EACLgsB,EAAKpW,GAAIb,EAAIA,GACbkX,EAAKrW,GAAIoW,EAAKjX,GACpB,OAAOa,GAAIqW,EAAK9X,EAAIY,EAAI/U,EAC3B,CACD,IAAMksB,GAAmBjY,GAAME,IAAMN,GAC/BsY,GAAAA,SAAAA,iCACF,WAAYlf,GAAS,kCACXA,EACT,kBAHCkf,SAAiBxqB,QAKjByqB,GAAAA,WACF,WAAYrX,EAAGC,EAAGC,IAAG,eACjBrI,KAAKmI,EAAIA,EACTnI,KAAKoI,EAAIA,EACTpI,KAAKqI,EAAIA,CACZ,sCAcD,SAAOE,GACH,KAAMA,aAAiBiX,GACnB,MAAM,IAAIlsB,UAAU,0BACxB,IAAWmV,EAAqBzI,KAAxBmI,EAAUO,EAAc1I,KAAjBoI,EAAUO,EAAO3I,KAAVqI,EACXO,EAAqBL,EAAxBJ,EAAUU,EAAcN,EAAjBH,EAAUU,EAAOP,EAAVF,EAChBoX,EAAOzW,GAAIL,EAAKA,GAChB+W,EAAO1W,GAAIF,EAAKA,GAChB6W,EAAK3W,GAAIP,EAAKiX,GACdE,EAAK5W,GAAIJ,EAAK6W,GACdI,EAAK7W,GAAIA,GAAIN,EAAKI,GAAM4W,GACxBI,EAAK9W,GAAIA,GAAIH,EAAKF,GAAM8W,GAC9B,OAAOE,IAAOC,GAAMC,IAAOC,CAC9B,uBACD,WACI,OAAO,IAAIN,EAAcxf,KAAKmI,EAAGa,IAAKhJ,KAAKoI,GAAIpI,KAAKqI,EACvD,uBACD,WACI,IAAWI,EAAqBzI,KAAxBmI,EAAUO,EAAc1I,KAAjBoI,EAAUO,EAAO3I,KAAVqI,EAChBe,EAAIJ,GAAIP,EAAKA,GACbY,EAAIL,GAAIN,EAAKA,GACbY,EAAIN,GAAIK,EAAIA,GACZ0W,EAAMtX,EAAKY,EACXE,EAAIP,GAAI7B,IAAO6B,GAAI+W,EAAMA,GAAO3W,EAAIE,IACpCG,EAAIT,GAAIgW,GAAM5V,GACdO,EAAIX,GAAIS,EAAIA,GACZI,EAAKb,GAAIW,EAAIxC,GAAMoC,GAGzB,OAAO,IAAIiW,EAAc3V,EAFdb,GAAIS,GAAKF,EAAIM,GAAMoV,GAAM3V,GACzBN,GAAI7B,GAAMuB,EAAKC,GAE7B,oBACD,SAAIJ,GACA,KAAMA,aAAiBiX,GACnB,MAAM,IAAIlsB,UAAU,0BACxB,IAAWmV,EAAqBzI,KAAxBmI,EAAUO,EAAc1I,KAAjBoI,EAAUO,EAAO3I,KAAVqI,EACXO,EAAqBL,EAAxBJ,EAAUU,EAAcN,EAAjBH,EAAUU,EAAOP,EAAVF,EACtB,GAAIO,IAAO3B,IAAO4B,IAAO5B,GACrB,OAAOjH,KACX,GAAIyI,IAAOxB,IAAOyB,IAAOzB,GACrB,OAAOsB,EACX,IAAMkX,EAAOzW,GAAIL,EAAKA,GAChB+W,EAAO1W,GAAIF,EAAKA,GAChB6W,EAAK3W,GAAIP,EAAKiX,GACdE,EAAK5W,GAAIJ,EAAK6W,GACdI,EAAK7W,GAAIA,GAAIN,EAAKI,GAAM4W,GACxBI,EAAK9W,GAAIA,GAAIH,EAAKF,GAAM8W,GACxB7V,EAAIZ,GAAI4W,EAAKD,GACbnR,EAAIxF,GAAI8W,EAAKD,GACnB,GAAIjW,IAAM3C,GACN,OAAIuH,IAAMvH,GACCjH,KAAKkK,SAGLsV,EAAcrU,KAG7B,IAAM6U,EAAKhX,GAAIY,EAAIA,GACbqW,EAAMjX,GAAIY,EAAIoW,GACdE,EAAIlX,GAAI2W,EAAKK,GACbnW,EAAKb,GAAIwF,EAAIA,EAAIyR,EAAM9Y,GAAM+Y,GAGnC,OAAO,IAAIV,EAAc3V,EAFdb,GAAIwF,GAAK0R,EAAIrW,GAAMgW,EAAKI,GACxBjX,GAAIL,EAAKG,EAAKc,GAE5B,yBACD,SAASrB,GACL,OAAOvI,KAAK2D,IAAI4E,EAAM4B,SACzB,+BACD,SAAe0B,GACX,IAAMG,EAAKwT,EAAcrU,KACzB,GAAsB,kBAAXU,GAAuBA,IAAW5E,GACzC,OAAO+E,EACX,IAAIlO,EAAIiO,GAAgBF,GACxB,GAAI/N,IAAMoJ,GACN,OAAOlH,KACX,IAAKsf,GAAkB,CAGnB,IAFA,IAAI/U,EAAIyB,EACJxE,EAAIxH,KACDlC,EAAImJ,IACHnJ,EAAIoJ,KACJqD,EAAIA,EAAE5G,IAAI6D,IACdA,EAAIA,EAAE0C,SACNpM,IAAMoJ,GAEV,OAAOqD,CACV,CAKD,IAJA,MAA+B4V,GAAgBriB,GAAzCsiB,EAAN,EAAMA,MAAOC,EAAb,EAAaA,GAAIC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,GACpBC,EAAMxU,EACNyU,EAAMzU,EACNxE,EAAIxH,KACDqgB,EAAKpZ,IAAOsZ,EAAKtZ,IAChBoZ,EAAKnZ,KACLsZ,EAAMA,EAAI7c,IAAI6D,IACd+Y,EAAKrZ,KACLuZ,EAAMA,EAAI9c,IAAI6D,IAClBA,EAAIA,EAAE0C,SACNmW,IAAOnZ,GACPqZ,IAAOrZ,GAOX,OALIkZ,IACAI,EAAMA,EAAIrW,UACVmW,IACAG,EAAMA,EAAItW,UACdsW,EAAM,IAAIjB,EAAcxW,GAAIyX,EAAItY,EAAId,GAAM6X,MAAOuB,EAAIrY,EAAGqY,EAAIpY,GACrDmY,EAAI7c,IAAI8c,EAClB,iCACD,SAAiBrW,GAKb,IAJA,IAAMC,EAAUiV,GAAmB,IAAMlV,EAAI,EAAI,IAAMA,EAAI,EACrDE,EAAS,GACXC,EAAIvK,KACJwK,EAAOD,EACFE,EAAS,EAAGA,EAASJ,EAASI,IAAU,CAC7CD,EAAOD,EACPD,EAAO1R,KAAK4R,GACZ,IAAK,IAAI7R,EAAI,EAAGA,EAAI,KAAH,IAAG,EAAMyR,EAAI,GAAIzR,IAC9B6R,EAAOA,EAAK7G,IAAI4G,GAChBD,EAAO1R,KAAK4R,GAEhBD,EAAIC,EAAKN,QACZ,CACD,OAAOI,CACV,qBACD,SAAKxM,EAAG4M,IACCA,GAAe1K,KAAK2K,OAAO6U,EAAc5U,QAC1CF,EAAcG,GAAMD,MACxB,IAAMR,EAAKM,GAAeA,EAAYI,cAAiB,EACvD,GAAI,IAAMV,EACN,MAAM,IAAIrV,MAAM,iEAEpB,IAAIgW,EAAcL,GAAeM,GAAiBhJ,IAAI0I,GACjDK,IACDA,EAAc/K,KAAKiL,iBAAiBb,GAChCM,GAAqB,IAANN,IACfW,EAAcyU,EAActU,WAAWH,GACvCC,GAAiBhK,IAAI0J,EAAaK,KAU1C,IAPA,IAAIR,EAAIiV,EAAcrU,KAClBC,EAAIoU,EAAcrU,KAChBd,EAAU,GAAKiV,GAAmB,IAAMlV,EAAI,IAAMA,GAClDiB,EAAa,KAAH,IAAG,EAAMjB,EAAI,GACvBkB,EAAO9J,OAAO,WAAK4I,GAAI,GACvBmB,EAAY,KAAH,IAAG,EAAKnB,GACjBoB,EAAUhK,OAAO4I,GACdK,EAAS,EAAGA,EAASJ,EAASI,IAAU,CAC7C,IAAMvW,EAASuW,EAASY,EACpBI,EAAQzX,OAAO8J,EAAIwN,GAMvB,GALAxN,IAAM0N,EACFC,EAAQJ,IACRI,GAASF,EACTzN,GAAKoJ,IAEK,IAAVuE,EAAa,CACb,IAAIC,EAAKX,EAAY7W,GACjBuW,EAAS,IACTiB,EAAKA,EAAGvB,UACZiB,EAAIA,EAAEzH,IAAI+H,EACb,KACI,CACD,IAAIC,EAASZ,EAAY7W,EAASiB,KAAKyW,IAAIH,GAAS,GAChDA,EAAQ,IACRE,EAASA,EAAOxB,UACpBI,EAAIA,EAAE5G,IAAIgI,EACb,CACJ,CACD,MAAO,CAAEpB,EAAAA,EAAGa,EAAAA,EACf,yBACD,SAASS,EAAQnB,GACb,IACIwG,EACAwP,EAFA5iB,EAAIiO,GAAgBF,GAGxB,GAAIyT,GAAkB,CAClB,MAAiCa,GAAgBriB,GAAzCsiB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,GAAIC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,GAC1B,EAAyBvgB,KAAK8L,KAAKuU,EAAI3V,GAA9B8V,EAAT,EAAMjW,EAAWoW,EAAjB,EAAcvV,EACd,EAAyBpL,KAAK8L,KAAKyU,EAAI7V,GAA9B+V,EAAT,EAAMlW,EAAWqW,EAAjB,EAAcxV,EACVgV,IACAI,EAAMA,EAAIrW,UACVmW,IACAG,EAAMA,EAAItW,UACdsW,EAAM,IAAIjB,EAAcxW,GAAIyX,EAAItY,EAAId,GAAM6X,MAAOuB,EAAIrY,EAAGqY,EAAIpY,GAC5D6I,EAAQsP,EAAI7c,IAAI8c,GAChBC,EAAOC,EAAIhd,IAAIid,EAClB,KACI,CACD,MAAiB5gB,KAAK8L,KAAKhO,EAAG4M,GAC9BwG,EADA,EAAQ3G,EAERmW,EAFA,EAAWtV,CAGd,CACD,OAAOoU,EAActU,WAAW,CAACgG,EAAOwP,IAAO,EAClD,yBACD,WAAgC,IAAvBxU,EAAuB,uDAAhBC,GAAOnM,KAAKqI,GAChBF,EAAYnI,KAAZmI,EAAGC,EAASpI,KAAToI,EAAGC,EAAMrI,KAANqI,EACRwY,EAAM3U,EACN4U,EAAM9X,GAAI6X,EAAMA,GAChBE,EAAM/X,GAAI8X,EAAMD,GAChBzU,EAAKpD,GAAIb,EAAI2Y,GACbzU,EAAKrD,GAAIZ,EAAI2Y,GACbzU,EAAKtD,GAAIX,EAAIwY,GACnB,GAAIvU,IAAOpF,GACP,MAAM,IAAInS,MAAM,oBACpB,OAAO,IAAI8V,GAAMuB,EAAIC,EACxB,6BApND,SAAkB9B,GACd,KAAMA,aAAaM,IACf,MAAM,IAAIvX,UAAU,4CAExB,OAAO,IAAIksB,EAAcjV,EAAEpC,EAAGoC,EAAEnC,EAAGlB,GACtC,8BACD,SAAqBoD,GACjB,IAAMkC,EA0jBd,SAAqBC,GAAmB,IAAblC,EAAa,uDAATlD,GAAMI,EAC3BuZ,EAAU,IAAI7nB,MAAMsT,EAAK7Y,QAOzB8Y,EAAWP,GANMM,EAAK3T,QAAO,SAACO,EAAKsT,EAAKhU,GAC1C,OAAIgU,IAAQ1F,GACD5N,GACX2nB,EAAQroB,GAAKU,EACN2P,GAAI3P,EAAMsT,EAAKpC,GACzB,GAAErD,IACqCqD,GAOxC,OANAkC,EAAKG,aAAY,SAACvT,EAAKsT,EAAKhU,GACxB,OAAIgU,IAAQ1F,GACD5N,GACX2nB,EAAQroB,GAAKqQ,GAAI3P,EAAM2nB,EAAQroB,GAAI4R,GAC5BvB,GAAI3P,EAAMsT,EAAKpC,GACzB,GAAEmC,GACIsU,CACV,CA1kBqBnU,CAAYvC,EAAO3F,KAAI,SAAC4F,GAAD,OAAOA,EAAElC,CAAT,KACrC,OAAOiC,EAAO3F,KAAI,SAAC4F,EAAG5R,GAAJ,OAAU4R,EAAEuC,SAASN,EAAM7T,GAA3B,GACrB,2BACD,SAAkB2R,GACd,OAAOkV,EAAczS,cAAczC,GAAQ3F,IAAI6a,EAAcxS,WAChE,OAlBCwS,GA4NNA,GAAc5U,KAAO,IAAI4U,GAAcnY,GAAMK,GAAIL,GAAMM,GAAIT,IAC3DsY,GAAcrU,KAAO,IAAIqU,GAAcvY,GAAKC,GAAKD,IACjD,IAAM+D,GAAmB,IAAIsF,QAChBzF,GAAb,WACI,WAAY1C,EAAGC,IAAG,eACdpI,KAAKmI,EAAIA,EACTnI,KAAKoI,EAAIA,CACZ,CAJL,6CAKI,SAAeiD,GACXrL,KAAK8K,aAAeO,EACpBL,GAAiBuF,OAAOvQ,KAC3B,GARL,sBASI,WACI,OAAOA,KAAKoI,EAAIjB,KAAQF,EAC3B,GAXL,wBAyEI,WAAiC,IAAtBga,EAAsB,wDAC7B,OAAOnP,GAAW9R,KAAKkO,MAAM+S,GAChC,GA3EL,mBA4EI,WAA4B,IAAtBA,EAAsB,wDAClB9Y,EAAI+Y,GAAYlhB,KAAKmI,GAC3B,GAAI8Y,EAAc,CACd,IAAMjM,EAAShV,KAAKmhB,WAAa,KAAO,KACxC,MAAO,GAAP,OAAUnM,GAAV,OAAmB7M,EACtB,CAEG,MAAO,KAAP,OAAYA,GAAZ,OAAgB+Y,GAAYlhB,KAAKoI,GAExC,GArFL,oBAsFI,WACI,OAAOpI,KAAKkO,OAAM,GAAMjR,MAAM,EACjC,GAxFL,oBAyFI,WACI,OAAO+C,KAAKiO,YAAW,GAAMhR,MAAM,EACtC,GA3FL,4BA4FI,WACI,IAAMyY,EAAM,iCACJvN,EAASnI,KAATmI,EAAGC,EAAMpI,KAANoI,EACX,IAAKgZ,GAAoBjZ,KAAOiZ,GAAoBhZ,GAChD,MAAM,IAAIrT,MAAM2gB,GACpB,IAAM2L,EAAOrY,GAAIZ,EAAIA,GAErB,GAAIY,GAAIqY,EADMlC,GAAUhX,MACElB,GACtB,MAAM,IAAIlS,MAAM2gB,EACvB,GArGL,oBAsGI,SAAOnN,GACH,OAAOvI,KAAKmI,IAAMI,EAAMJ,GAAKnI,KAAKoI,IAAMG,EAAMH,CACjD,GAxGL,oBAyGI,WACI,OAAO,IAAIyC,EAAM7K,KAAKmI,EAAGa,IAAKhJ,KAAKoI,GACtC,GA3GL,oBA4GI,WACI,OAAOoX,GAAcxS,WAAWhN,MAAMkK,SAAS4C,UAClD,GA9GL,iBA+GI,SAAIvE,GACA,OAAOiX,GAAcxS,WAAWhN,MAAM2D,IAAI6b,GAAcxS,WAAWzE,IAAQuE,UAC9E,GAjHL,sBAkHI,SAASvE,GACL,OAAOvI,KAAK2D,IAAI4E,EAAM4B,SACzB,GApHL,sBAqHI,SAAS0B,GACL,OAAO2T,GAAcxS,WAAWhN,MAAMsO,SAASzC,EAAQ7L,MAAM8M,UAChE,GAvHL,kCAwHI,SAAqBwU,EAAG/Z,EAAGnU,GACvB,IAAMqU,EAAI+X,GAAcxS,WAAWhN,MAC7BuhB,EAAKha,IAAMN,IAAOM,IAAML,IAAOlH,OAAS6K,EAAMD,KAAOnD,EAAEwE,eAAe1E,GAAKE,EAAE6G,SAAS/G,GACtFia,EAAKhC,GAAcxS,WAAWsU,GAAGrV,eAAe7Y,GAChDuJ,EAAM4kB,EAAG5d,IAAI6d,GACnB,OAAO7kB,EAAIgO,OAAO6U,GAAcrU,WAAQ7R,EAAYqD,EAAImQ,UAC3D,IA9HL,gCAYI,SAAyB9O,GACrB,IAAMyjB,EAA2B,KAAjBzjB,EAAMpK,OAChBuU,EAAIuZ,GAAcD,EAAUzjB,EAAQA,EAAMiD,SAAS,IACzD,IAAKmgB,GAAoBjZ,GACrB,MAAM,IAAIpT,MAAM,yBACpB,IACIqT,EA4SZ,SAAiBD,GACb,IAAQV,EAAMJ,GAANI,EACFka,EAAMngB,OAAO,GACbogB,EAAOpgB,OAAO,IACdqgB,EAAOrgB,OAAO,IACdsgB,EAAOtgB,OAAO,IACdugB,EAAOvgB,OAAO,IACdwgB,EAAOxgB,OAAO,IACduO,EAAM5H,EAAIA,EAAIA,EAAKV,EACnBwa,EAAMlS,EAAKA,EAAK5H,EAAKV,EACrBya,EAAMrP,GAAKoP,EAAIjD,IAAOiD,EAAMxa,EAC5B0a,EAAMtP,GAAKqP,EAAIlD,IAAOiD,EAAMxa,EAC5B2a,EAAOvP,GAAKsP,EAAIhb,IAAO4I,EAAMtI,EAC7B4a,EAAOxP,GAAKuP,EAAKR,GAAQQ,EAAO3a,EAChC6a,EAAOzP,GAAKwP,EAAKR,GAAQQ,EAAO5a,EAChC8a,EAAO1P,GAAKyP,EAAKP,GAAQO,EAAO7a,EAChC+a,EAAQ3P,GAAK0P,EAAKP,GAAQO,EAAO9a,EACjCgb,EAAQ5P,GAAK2P,EAAMT,GAAQO,EAAO7a,EAClCib,EAAQ7P,GAAK4P,EAAMzD,IAAOiD,EAAMxa,EAChCkb,EAAM9P,GAAK6P,EAAMZ,GAAQO,EAAO5a,EAChCmb,EAAM/P,GAAK8P,EAAIhB,GAAO5R,EAAMtI,EAClC,OAAOoL,GAAK+P,EAAIzb,GACnB,CAlUe0b,CADG1D,GAAUhX,IAEf2a,GAAU1a,EAAIlB,MAASA,GACzBua,EACIqB,IACA1a,EAAIY,IAAKZ,IAG6B,KAAP,EAAXpK,EAAM,MACP8kB,IACnB1a,EAAIY,IAAKZ,IAEjB,IAAM8I,EAAQ,IAAIrG,EAAM1C,EAAGC,GAE3B,OADA8I,EAAME,iBACCF,CACV,GAhCL,iCAiCI,SAA2BlT,GACvB,IAEMkT,EAAQ,IAAIrG,EAFR6W,GAAc1jB,EAAMiD,SAAS,EAAG,KAChCygB,GAAc1jB,EAAMiD,SAAS,GAAI,MAG3C,OADAiQ,EAAME,iBACCF,CACV,GAvCL,qBAwCI,SAAe7B,GACX,IAAMrR,EAAQwR,GAAYH,GACpBvO,EAAM9C,EAAMpK,OACZmvB,EAAS/kB,EAAM,GACrB,GAAY,KAAR8C,GAAuB,KAARA,IAA0B,IAAXiiB,GAA8B,IAAXA,GACjD,OAAO/iB,KAAKgjB,kBAAkBhlB,GAElC,GAAY,KAAR8C,GAAyB,IAAXiiB,EACd,OAAO/iB,KAAKijB,oBAAoBjlB,GACpC,MAAM,IAAIjJ,MAAJ,+GAAkH+L,GAC3H,GAlDL,4BAmDI,SAAsBkQ,GAClB,OAAOnG,EAAMD,KAAK0D,SAAS4U,GAAoBlS,GAClD,GArDL,2BAsDI,SAAqBmS,EAASC,EAAWC,GAErC,IAAMzhB,EAAI0hB,GADVH,EAAU3T,GAAY2T,IAEtB,EAAiBI,GAAmBH,GAA5B5U,EAAR,EAAQA,EAAGzL,EAAX,EAAWA,EACX,GAAiB,IAAbsgB,GAA+B,IAAbA,EAClB,MAAM,IAAItuB,MAAM,kDAEpB,IAAMigB,EAAoB,EAAXqO,EAAe,KAAO,KAC/BpN,EAAIpL,EAAMyG,QAAQ0D,EAASkM,GAAY1S,IACrC1Q,EAAMuJ,GAANvJ,EACF0lB,EAAOrX,GAAOqC,EAAG1Q,GACjBsP,EAAKpE,IAAKpH,EAAI4hB,EAAM1lB,GACpBuP,EAAKrE,GAAIjG,EAAIygB,EAAM1lB,GACnBwjB,EAAIzW,EAAMD,KAAK6Y,qBAAqBxN,EAAG7I,EAAIC,GACjD,IAAKiU,EACD,MAAM,IAAIvsB,MAAM,+CAEpB,OADAusB,EAAElQ,iBACKkQ,CACV,KAxEL,KAkIA,SAASoC,GAAS3gB,GACd,OAAO/O,OAAOme,SAASpP,EAAE,GAAI,KAAO,EAAI,KAAOA,EAAIA,CACtD,CACD,SAAS4gB,GAAYhkB,GACjB,GAAIA,EAAK/L,OAAS,GAAiB,IAAZ+L,EAAK,GACxB,MAAM,IAAI5K,MAAJ,yCAA4CiZ,GAAWrO,KAEjE,IAAMmB,EAAMnB,EAAK,GACXwC,EAAMxC,EAAKsB,SAAS,EAAGH,EAAM,GACnC,IAAKA,GAAOqB,EAAIvO,SAAWkN,EACvB,MAAM,IAAI/L,MAAJ,2CAEV,GAAe,IAAXoN,EAAI,IAAeA,EAAI,IAAM,IAC7B,MAAM,IAAIpN,MAAM,8CAEpB,MAAO,CAAE4K,KAAM+hB,GAAcvf,GAAMkf,KAAM1hB,EAAKsB,SAASH,EAAM,GAChE,CAlBD+J,GAAMD,KAAO,IAAIC,GAAMxD,GAAMK,GAAIL,GAAMM,IACvCkD,GAAMM,KAAO,IAAIN,GAAM5D,GAAKA,IAgCrB,IAAMkK,GAAb,WACI,WAAY3C,EAAGzL,IAAG,eACd/C,KAAKwO,EAAIA,EACTxO,KAAK+C,EAAIA,EACT/C,KAAKoR,gBACR,CALL,6CA0BI,WACI,IAAQ5C,EAASxO,KAATwO,EAAGzL,EAAM/C,KAAN+C,EACX,IAAK6gB,GAAmBpV,GACpB,MAAM,IAAIzZ,MAAM,0CACpB,IAAK6uB,GAAmB7gB,GACpB,MAAM,IAAIhO,MAAM,yCACvB,GAhCL,sBAiCI,WACI,IAAM8uB,EAAOxc,GAAMvJ,GAAKoJ,GACxB,OAAOlH,KAAK+C,EAAI8gB,CACnB,GApCL,wBAqCI,WACI,OAAO7jB,KAAK8jB,WAAa,IAAI3S,EAAUnR,KAAKwO,EAAGnH,GAAMvJ,EAAIkC,KAAK+C,GAAK/C,IACtE,GAvCL,2BAwCI,WAAoC,IAAtBihB,EAAsB,wDAChC,OAAOnP,GAAW9R,KAAK+jB,SAAS9C,GACnC,GA1CL,sBA2CI,WAA+B,IAAtBA,EAAsB,wDACrB+C,EAAON,GAASO,GAAoBjkB,KAAK+C,IAC/C,GAAIke,EACA,OAAO+C,EACX,IAAME,EAAOR,GAASO,GAAoBjkB,KAAKwO,IACzC2V,EAAOF,GAAoBC,EAAKtwB,OAAS,GACzCwwB,EAAOH,GAAoBD,EAAKpwB,OAAS,GACzCA,EAASqwB,GAAoBC,EAAKtwB,OAAS,EAAIowB,EAAKpwB,OAAS,EAAI,GACvE,MAAO,KAAP,OAAYA,EAAZ,aAAuBuwB,GAAvB,OAA8BD,EAA9B,aAAuCE,GAAvC,OAA8CJ,EACjD,GApDL,wBAqDI,WACI,OAAOhkB,KAAKqkB,eACf,GAvDL,mBAwDI,WACI,OAAOrkB,KAAK+jB,UACf,GA1DL,+BA2DI,WACI,OAAOjS,GAAW9R,KAAKskB,eAC1B,GA7DL,0BA8DI,WACI,OAAOpD,GAAYlhB,KAAKwO,GAAK0S,GAAYlhB,KAAK+C,EACjD,IAhEL,0BAMI,SAAmBsM,GACf,IAAMlQ,EAAMkQ,aAAehc,WACrBuB,EAAO,wBACb,GAAmB,kBAARya,IAAqBlQ,EAC5B,MAAM,IAAI7L,UAAJ,UAAiBsB,EAAjB,oCACV,IAAMgL,EAAMT,EAAM6O,GAAWqB,GAAOA,EACpC,GAAmB,MAAfzP,EAAIhM,OACJ,MAAM,IAAImB,MAAJ,UAAaH,EAAb,2BACV,OAAO,IAAIuc,EAAUoT,GAAY3kB,EAAI3C,MAAM,EAAG,KAAMsnB,GAAY3kB,EAAI3C,MAAM,GAAI,MACjF,GAfL,qBAgBI,SAAeoS,GACX,IAAMlQ,EAAMkQ,aAAehc,WAC3B,GAAmB,kBAARgc,IAAqBlQ,EAC5B,MAAM,IAAI7L,UAAJ,oDACV,MAlCR,SAA2BqM,GACvB,GAAIA,EAAK/L,OAAS,GAAgB,IAAX+L,EAAK,GACxB,MAAM,IAAI5K,MAAJ,iCAAoCiZ,GAAWrO,KAEzD,GAAIA,EAAK,KAAOA,EAAK/L,OAAS,EAC1B,MAAM,IAAImB,MAAM,uCAEpB,MAAkC4uB,GAAYhkB,EAAKsB,SAAS,IAA9CuN,EAAd,EAAQ7O,KACR,EAAsCgkB,GADtC,EAAiBtC,MACHte,EAAd,EAAQpD,KAAe6kB,EAAvB,EAAiBnD,KACjB,GAAImD,EAAW5wB,OACX,MAAM,IAAImB,MAAJ,uDAA0DiZ,GAAWwW,KAE/E,MAAO,CAAEhW,EAAAA,EAAGzL,EAAAA,EACf,CAqBwB0hB,CAAkBtlB,EAAMkQ,EAAMyC,GAAWzC,IAC1D,OAAO,IAAI8B,EADX,EAAQ3C,EAAR,EAAWzL,EAEd,GAtBL,qBAuBI,SAAesM,GACX,OAAOrP,KAAK0kB,QAAQrV,EACvB,KAzBL,KAkEA,SAASkC,KAAuB,2BAARC,EAAQ,yBAARA,EAAQ,gBAC5B,IAAKA,EAAOC,OAAM,SAACre,GAAD,OAAOA,aAAaC,UAApB,IACd,MAAM,IAAI0B,MAAM,4BACpB,GAAsB,IAAlByc,EAAO5d,OACP,OAAO4d,EAAO,GAGlB,IAFA,IAAM5d,EAAS4d,EAAO1Y,QAAO,SAACyO,EAAGpI,GAAJ,OAAYoI,EAAIpI,EAAIvL,MAApB,GAA4B,GACnD8d,EAAS,IAAIre,WAAWO,GACrB+E,EAAI,EAAGgZ,EAAM,EAAGhZ,EAAI6Y,EAAO5d,OAAQ+E,IAAK,CAC7C,IAAMwG,EAAMqS,EAAO7Y,GACnB+Y,EAAO1Q,IAAI7B,EAAKwS,GAChBA,GAAOxS,EAAIvL,MACd,CACD,OAAO8d,CACV,CACD,IAAME,GAAQzY,MAAM1F,KAAK,CAAEG,OAAQ,MAAO,SAACmF,EAAGJ,GAAJ,OAAUA,EAAEyE,SAAS,IAAIqC,SAAS,EAAG,IAArC,IAC1C,SAASuO,GAAW6D,GAChB,KAAMA,aAAkBxe,YACpB,MAAM,IAAI0B,MAAM,uBAEpB,IADA,IAAIsa,EAAM,GACD1W,EAAI,EAAGA,EAAIkZ,EAAOje,OAAQ+E,IAC/B0W,GAAOuC,GAAMC,EAAOlZ,IAExB,OAAO0W,CACV,CACD,IAAMzH,GAAYpG,OAAO,uEACzB,SAAS0f,GAAYvU,GACjB,GAAmB,kBAARA,EACP,MAAM,IAAI5X,MAAM,mBACpB,KAAMkS,IAAO0F,GAAOA,EAAM/E,IACtB,MAAM,IAAI7S,MAAM,2BACpB,OAAO4X,EAAIvP,SAAS,IAAIqC,SAAS,GAAI,IACxC,CACD,SAASklB,GAAShY,GACd,IAAMvZ,EAAI0e,GAAWoP,GAAYvU,IACjC,GAAiB,KAAbvZ,EAAEQ,OACF,MAAM,IAAImB,MAAM,4BACpB,OAAO3B,CACV,CACD,SAAS6wB,GAAoBtX,GACzB,IAAM0C,EAAM1C,EAAIvP,SAAS,IACzB,OAAoB,EAAbiS,EAAIzb,OAAJ,WAAqByb,GAAQA,CACvC,CACD,SAASkV,GAAYlV,GACjB,GAAmB,kBAARA,EACP,MAAM,IAAI/b,UAAU,4CAA8C+b,GAEtE,OAAO7N,OAAO,KAAD,OAAM6N,GACtB,CACD,SAASyC,GAAWzC,GAChB,GAAmB,kBAARA,EACP,MAAM,IAAI/b,UAAU,2CAA6C+b,GAErE,GAAIA,EAAIzb,OAAS,EACb,MAAM,IAAImB,MAAM,4CAA8Csa,EAAIzb,QAEtE,IADA,IAAMme,EAAQ,IAAI1e,WAAWgc,EAAIzb,OAAS,GACjC+E,EAAI,EAAGA,EAAIoZ,EAAMne,OAAQ+E,IAAK,CACnC,IAAMqZ,EAAQ,EAAJrZ,EACJsZ,EAAU5C,EAAIpS,MAAM+U,EAAGA,EAAI,GAC3BE,EAAOle,OAAOme,SAASF,EAAS,IACtC,GAAIje,OAAOoe,MAAMF,IAASA,EAAO,EAC7B,MAAM,IAAInd,MAAM,yBACpBgd,EAAMpZ,GAAKuZ,CACd,CACD,OAAOH,CACV,CACD,SAAS2P,GAAc1jB,GACnB,OAAOumB,GAAYvW,GAAWhQ,GACjC,CACD,SAASwR,GAAYH,GACjB,OAAOA,aAAehc,WAAaA,WAAWI,KAAK4b,GAAOyC,GAAWzC,EACxE,CACD,SAAStD,GAAgBY,GACrB,GAAmB,kBAARA,GAAoB3Y,OAAO+J,cAAc4O,IAAQA,EAAM,EAC9D,OAAOnL,OAAOmL,GAClB,GAAmB,kBAARA,GAAoBiX,GAAmBjX,GAC9C,OAAOA,EACX,MAAM,IAAIrZ,UAAU,sDACvB,CACD,SAAS0V,GAAIzB,GAAgB,IAAbnU,EAAa,uDAATiU,GAAMI,EAChBiK,EAASnK,EAAInU,EACnB,OAAOse,GAAUzK,GAAMyK,EAASte,EAAIse,CACvC,CACD,SAASmB,GAAK1K,EAAG2K,GAGb,IAFA,IAAQrL,EAAMJ,GAANI,EACJtF,EAAMgG,EACH2K,KAAU7L,IACb9E,GAAOA,EACPA,GAAOsF,EAEX,OAAOtF,CACV,CAwBD,SAASgK,GAAOtO,GAA0B,IAAlB4U,EAAkB,uDAATpL,GAAMI,EACnC,GAAI5J,IAAWoJ,IAAOwL,GAAUxL,GAC5B,MAAM,IAAIlS,MAAJ,oDAAuD8I,EAAvD,gBAAqE4U,IAK/E,IAHA,IAAIlL,EAAIyB,GAAInL,EAAQ4U,GAChBrf,EAAIqf,EACJtK,EAAIlB,GAAKmB,EAAIlB,GAAK2J,EAAI3J,GAAKnO,EAAIkO,GAC5BM,IAAMN,IAAK,CACd,IAAMyL,EAAItf,EAAImU,EACRiH,EAAIpb,EAAImU,EACRoL,EAAIxK,EAAI0I,EAAI6B,EACZ5U,EAAIsK,EAAIrP,EAAI2Z,EAClBtf,EAAImU,EAAGA,EAAIiH,EAAGrG,EAAI0I,EAAGzI,EAAIrP,EAAG8X,EAAI8B,EAAG5Z,EAAI+E,CAC1C,CACD,IAAM8U,EAAMxf,EACZ,GAAIwf,IAAQ1L,GACR,MAAM,IAAInS,MAAM,0BACpB,OAAOiU,GAAIb,EAAGsK,EACjB,CAkBD,IAqCImS,GACAC,GAtCEC,GAAa,SAACvd,EAAGnU,GAAJ,OAAWmU,EAAInU,EAAI+T,IAAO/T,CAA1B,EACb2xB,GAAO,CACTC,GAAIxjB,OAAO,sCACXsO,IAAK5I,GAAM1F,OAAO,sCAClByjB,GAAIzjB,OAAO,uCACXuO,GAAIvO,OAAO,sCACX0jB,UAAW1jB,OAAO,wCAEtB,SAAS2e,GAAgBvK,GACrB,IAAQ9X,EAAMuJ,GAANvJ,EACAknB,EAA8BD,GAA9BC,GAAIlV,EAA0BiV,GAA1BjV,GAAImV,EAAsBF,GAAtBE,GAAIlV,EAAkBgV,GAAlBhV,GAAImV,EAAcH,GAAdG,UAClBC,EAAKL,GAAW/U,EAAK6F,EAAG9X,GACxBsnB,EAAKN,IAAYhV,EAAK8F,EAAG9X,GAC3BuiB,EAAKrX,GAAI4M,EAAIuP,EAAKH,EAAKI,EAAKH,EAAInnB,GAChCyiB,EAAKvX,IAAKmc,EAAKrV,EAAKsV,EAAKrV,EAAIjS,GAC3BsiB,EAAQC,EAAK6E,EACb5E,EAAQC,EAAK2E,EAKnB,GAJI9E,IACAC,EAAKviB,EAAIuiB,GACTC,IACAC,EAAKziB,EAAIyiB,GACTF,EAAK6E,GAAa3E,EAAK2E,EACvB,MAAM,IAAInwB,MAAM,2CAA6C6gB,GAEjE,MAAO,CAAEwK,MAAAA,EAAOC,GAAAA,EAAIC,MAAAA,EAAOC,GAAAA,EAC9B,CACD,SAAS+C,GAAajlB,GAClB,IAAQP,EAAMuJ,GAANvJ,EAEFunB,EAAqB,EADRhnB,EAAKzK,OACO,IAC3BgO,EAAI8f,GAAcrjB,GAKtB,OAJIgnB,EAAQ,IACRzjB,IAASJ,OAAO6jB,IAChBzjB,GAAK9D,IACL8D,GAAK9D,GACF8D,CACV,KAGK0jB,GAAAA,WACF,cAAc,eACVtlB,KAAKjH,EAAI,IAAI1F,WAAW,IAAIgO,KAAK,GACjCrB,KAAK4V,EAAI,IAAIviB,WAAW,IAAIgO,KAAK,GACjCrB,KAAKulB,QAAU,CAClB,oCACD,WAAgB,2BAAR7wB,EAAQ,yBAARA,EAAQ,gBACZ,OAAOygB,GAAMqQ,WAAN,MAAArQ,GAAK,CAAYnV,KAAK4V,GAAjB,OAAuBlhB,GACtC,yBACD,WAAoB,2BAARA,EAAQ,yBAARA,EAAQ,gBAChB,OAAOmwB,GAAe,WAAf,GAAgB7kB,KAAK4V,GAArB,OAA2BlhB,GACrC,0BACD,WACI,GAA+B,oBAApBmwB,GACP,MAAM,IAAItF,GAAS,iCAC1B,qBACD,WACI,GAAIvf,KAAKulB,SAAW,IAChB,MAAM,IAAIxwB,MAAM,qDACpBiL,KAAKulB,SAAW,CACnB,gEACD,4GAAaE,EAAb,+BAAoB,IAAIpyB,WAAxB,SACmB2M,KAAK+e,KAAK/e,KAAKjH,EAAG1F,WAAWI,KAAK,CAAC,IAAQgyB,GAD9D,cACIzlB,KAAK4V,EADT,gBAEmB5V,KAAK+e,KAAK/e,KAAKjH,GAFlC,UAEIiH,KAAKjH,EAFT,OAGwB,IAAhB0sB,EAAK7xB,OAHb,kEAKmBoM,KAAK+e,KAAK/e,KAAKjH,EAAG1F,WAAWI,KAAK,CAAC,IAAQgyB,GAL9D,eAKIzlB,KAAK4V,EALT,iBAMmB5V,KAAK+e,KAAK/e,KAAKjH,GANlC,QAMIiH,KAAKjH,EANT,sIAQA,WAAoC,IAAzB0sB,EAAyB,uDAAlB,IAAIpyB,WAClB2M,KAAK0lB,YACL1lB,KAAK4V,EAAI5V,KAAK2lB,SAAS3lB,KAAKjH,EAAG1F,WAAWI,KAAK,CAAC,IAAQgyB,GACxDzlB,KAAKjH,EAAIiH,KAAK2lB,SAAS3lB,KAAKjH,GACR,IAAhB0sB,EAAK7xB,SAEToM,KAAK4V,EAAI5V,KAAK2lB,SAAS3lB,KAAKjH,EAAG1F,WAAWI,KAAK,CAAC,IAAQgyB,GACxDzlB,KAAKjH,EAAIiH,KAAK2lB,SAAS3lB,KAAKjH,GAC/B,kEACD,0FACIiH,KAAK4lB,OADT,SAEmB5lB,KAAK+e,KAAK/e,KAAKjH,GAFlC,cAEIiH,KAAKjH,EAFT,yBAGWiH,KAAKjH,GAHhB,gIAKA,WAII,OAHAiH,KAAK0lB,YACL1lB,KAAK4lB,OACL5lB,KAAKjH,EAAIiH,KAAK2lB,SAAS3lB,KAAKjH,GACrBiH,KAAKjH,CACf,OAhDCusB,GAkDN,SAAS1B,GAAmBjX,GACxB,OAAO1F,GAAM0F,GAAOA,EAAMtF,GAAMvJ,CACnC,CACD,SAASsjB,GAAoBzU,GACzB,OAAO1F,GAAM0F,GAAOA,EAAMtF,GAAMI,CACnC,CACD,SAASoe,GAASC,EAAQnT,EAAGnL,GACzB,IAAMoO,EAAI8L,GAAcoE,GACxB,GAAKlC,GAAmBhO,GAAxB,CAEA,IAAQ9X,EAAMuJ,GAANvJ,EACF4U,EAAI7H,GAAMD,KAAK0D,SAASsH,GACxBpH,EAAIxF,GAAI0J,EAAEvK,EAAGrK,GACnB,GAAI0Q,IAAMvH,GAAV,CAEA,IAAMlE,EAAIiG,GAAImD,GAAOyJ,EAAG9X,GAAKkL,GAAI2J,EAAInL,EAAIgH,EAAG1Q,GAAIA,GAChD,GAAIiF,IAAMkE,GAAV,CAEA,IAAMqO,EAAM,IAAInE,GAAU3C,EAAGzL,GAE7B,MAAO,CAAEuS,IAAAA,EAAK+N,UADI3Q,EAAEvK,IAAMmN,EAAI9G,EAAI,EAAI,GAAKxa,OAAO0e,EAAEtK,EAAIlB,IAF9C,CAHA,CALA,CAYb,CACD,SAASgc,GAAoBtO,GACzB,IAAIjI,EACJ,GAAmB,kBAARiI,EACPjI,EAAMiI,OAEL,GAAmB,kBAARA,GAAoB5gB,OAAO+J,cAAc6W,IAAQA,EAAM,EACnEjI,EAAMnL,OAAOoT,QAEZ,GAAmB,kBAARA,EAAkB,CAC9B,GAAmB,KAAfA,EAAIhhB,OACJ,MAAM,IAAImB,MAAM,oCACpB4X,EAAM4X,GAAY3P,EACrB,KACI,MAAIA,aAAevhB,YAMpB,MAAM,IAAIC,UAAU,8BALpB,GAAmB,KAAfshB,EAAIhhB,OACJ,MAAM,IAAImB,MAAM,oCACpB4X,EAAM+U,GAAc9M,EAIvB,CACD,IAAKgP,GAAmBjX,GACpB,MAAM,IAAI5X,MAAM,qCACpB,OAAO4X,CACV,CAUD,SAAS4W,GAAmBH,GACxB,GAAIA,aAAqBjS,GAErB,OADAiS,EAAUhS,iBACHgS,EAEX,IACI,OAAOjS,GAAUuT,QAAQtB,EAI5B,CAFD,MAAO5I,GACH,OAAOrJ,GAAU4U,YAAY3C,EAChC,CACJ,CA4BD,SAAS4C,GAAShoB,GAEd,OAAO0jB,GADO1jB,EAAMpK,OAAS,GAAKoK,EAAMf,MAAM,EAAG,IAAMe,EAE1D,CACD,SAASioB,GAAYjoB,GACjB,IAAMkoB,EAAKF,GAAShoB,GACdmoB,EAAKnd,GAAIkd,EAAI7e,GAAMvJ,GACzB,OAAOsoB,GAAWD,EAAKlf,GAAMif,EAAKC,EACrC,CACD,SAASC,GAAWzZ,GAChB,OAAOgY,GAAShY,EACnB,CACD,SAAS0Z,GAAYlD,EAASnS,EAAYsV,GACtC,GAAe,MAAXnD,EACA,MAAM,IAAIpuB,MAAJ,kDAAqDouB,EAArD,MACV,IAAMoD,EAAK/W,GAAY2T,GACjB3b,EAAI0b,GAAoBlS,GACxBwV,EAAW,CAACJ,GAAW5e,GAAIye,GAAYM,IAC7C,GAAoB,MAAhBD,EAAsB,EACD,IAAjBA,IACAA,EAAenR,GAAMsB,YAAY,KACrC,IAAMjd,EAAIgW,GAAY8W,GACtB,GAAiB,KAAb9sB,EAAE5F,OACF,MAAM,IAAImB,MAAM,yCACpByxB,EAAS5tB,KAAKY,EACjB,CAGD,MAAO,CAAEisB,KAFIlU,GAAW,WAAX,EAAeiV,GAEb7T,EADLqT,GAASO,GACD/e,EAAAA,EACrB,CACD,SAASif,GAAYC,EAAQpI,GACzB,IAAMhJ,EAAkBoR,EAAlBpR,IAAK+N,EAAaqD,EAAbrD,SACX,EAAsChvB,OAAOI,OAAO,CAAEkyB,WAAW,EAAMC,KAAK,GAAQtI,GAA5EqI,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,IAAKC,EAAxB,EAAwBA,UACpBF,GAAarR,EAAIwO,aACjBxO,EAAMA,EAAIwR,aACVzD,GAAY,GAEhB,IAAMvO,EAAS8R,EAAMtR,EAAI+O,gBAAkB/O,EAAIyR,oBAC/C,OAAOF,EAAY,CAAC/R,EAAQuO,GAAYvO,CAC3C,CAgMDjK,GAAMD,KAAKuL,eAAe,GAC1B,IAAMjX,GAAS,CACXkX,KAAMC,GACNC,IAAqB,kBAATrX,MAAqB,WAAYA,KAAOA,KAAKC,YAAS5F,GAOhE0tB,GAAuB,CAAC,EACjB7R,GAAQ,CACjBnH,WAAAA,GACA8D,WAAAA,GACAP,YAAAA,GACAvI,IAAAA,GACAmD,OAAAA,GACA8a,kBANiB,SAMCjW,GACd,IAEI,OADAkS,GAAoBlS,IACb,CAIV,CAFD,MAAOwJ,GACH,OAAO,CACV,CACJ,EACD0M,iBAAkBvC,GAClBwC,qBAAsBjE,GACtBkE,iBAAkB,SAAC/oB,GAEf,IADAA,EAAOmR,GAAYnR,IACVzK,OAAS,IAAMyK,EAAKzK,OAAS,KAClC,MAAM,IAAImB,MAAM,yDAEpB,OAAO4vB,GADK3b,GAAI0Y,GAAcrjB,GAAOgJ,GAAMvJ,EAAIoJ,IAAOA,GAEzD,EACDuP,YAAa,WAAsB,IAArBC,EAAqB,uDAAP,GACxB,GAAIxX,GAAOoX,IACP,OAAOpX,GAAOoX,IAAIK,gBAAgB,IAAItjB,WAAWqjB,IAEhD,GAAIxX,GAAOkX,KAAM,CAClB,IAAQK,EAAgBvX,GAAOkX,KAAvBK,YACR,OAAOpjB,WAAWI,KAAKgjB,EAAYC,GACtC,CAEG,MAAM,IAAI3hB,MAAM,oDAEvB,EACD6hB,iBAAkB,WACd,OAAOzB,GAAMiS,iBAAiBjS,GAAMsB,YAAY,IACnD,EACDmB,OAAQ,WAAF,8BAAE,8HAAUyP,EAAV,yBAAUA,EAAV,YACAnoB,GAAOoX,IADP,gCAEqBpX,GAAOoX,IAAIO,OAAOtW,OAAO,UAAWgR,GAAW,WAAX,EAAe8V,IAFxE,cAEM3zB,EAFN,yBAGO,IAAIL,WAAWK,IAHtB,WAKKwL,GAAOkX,KALZ,wBAMQU,EAAe5X,GAAOkX,KAAtBU,WACFzY,EAAOyY,EAAW,UACxBuQ,EAASplB,SAAQ,SAAC0Q,GAAD,OAAOtU,EAAKiC,OAAOqS,EAAnB,IARjB,kBASOtf,WAAWI,KAAK4K,EAAKkC,WAT5B,cAYM,IAAIxL,MAAM,gDAZhB,4CAAF,kDAAE,GAeRywB,WAAY,WAAF,8BAAE,WAAO5Q,GAAP,qHAAeyS,EAAf,iCAAeA,EAAf,cACJnoB,GAAOoX,IADH,iCAEepX,GAAOoX,IAAIO,OAAOyQ,UAAU,MAAO1S,EAAK,CAAEhgB,KAAM,OAAQyJ,KAAM,CAAEzJ,KAAM,aAAe,EAAO,CAAC,SAF5G,cAEE2yB,EAFF,OAGElnB,EAAUkR,GAAW,WAAX,EAAe8V,GAH3B,SAIiBnoB,GAAOoX,IAAIO,OAAOb,KAAK,OAAQuR,EAAMlnB,GAJtD,cAIE3M,EAJF,yBAKG,IAAIL,WAAWK,IALlB,YAOCwL,GAAOkX,KAPR,wBAQIoR,EAAetoB,GAAOkX,KAAtBoR,WACFnpB,EAAOmpB,EAAW,SAAU5S,GAClCyS,EAASplB,SAAQ,SAAC0Q,GAAD,OAAOtU,EAAKiC,OAAOqS,EAAnB,IAVb,kBAWGtf,WAAWI,KAAK4K,EAAKkC,WAXxB,cAcE,IAAIxL,MAAM,qDAdZ,4CAAF,mDAAE,GAiBZ0yB,gBAAYnuB,EACZouB,oBAAgBpuB,EAChBquB,WAAY,WAAF,8BAAE,WAAOvsB,GAAP,wGAEK9B,KADTsuB,EAAOZ,GAAqB5rB,IADxB,gCAGe+Z,GAAMyC,OAAOvkB,WAAWI,KAAK2H,GAAK,SAACsT,GAAD,OAAOA,EAAEmZ,WAAW,EAApB,KAHjD,OAGEC,EAHF,OAIJF,EAAOrW,GAAYuW,EAAMA,GACzBd,GAAqB5rB,GAAOwsB,EALxB,sBAAeP,EAAf,iCAAeA,EAAf,mCAODlS,GAAMyC,OAAN,MAAAzC,GAAK,CAAQyS,GAAR,OAAiBP,KAPrB,2CAAF,mDAAE,GASZU,eAAgB,SAAC3sB,GACb,GAA2B,oBAAhBwpB,GACP,MAAM,IAAIrF,GAAS,+CACvB,IAAIqI,EAAOZ,GAAqB5rB,GAChC,QAAa9B,IAATsuB,EAAoB,CACpB,IAAME,EAAOlD,GAAYvxB,WAAWI,KAAK2H,GAAK,SAACsT,GAAD,OAAOA,EAAEmZ,WAAW,EAApB,KAC9CD,EAAOrW,GAAYuW,EAAMA,GACzBd,GAAqB5rB,GAAOwsB,CAC/B,CARiC,2BAAbP,EAAa,iCAAbA,EAAa,kBASlC,OAAOzC,GAAW,WAAX,GAAYgD,GAAZ,OAAqBP,GAC/B,EACDtQ,WA7FiB,WA6F8B,IAApC1L,EAAoC,uDAAvB,EAAG6F,EAAoB,uDAAZrG,GAAMD,KAC/Be,EAASuF,IAAUrG,GAAMD,KAAOsG,EAAQ,IAAIrG,GAAMqG,EAAM/I,EAAG+I,EAAM9I,GAGvE,OAFAuD,EAAOwK,eAAe9K,GACtBM,EAAO2C,SAAS0Q,IACTrT,CACV,GAELtX,OAAO4iB,iBAAiB9B,GAAO,CAC3BsS,WAAY,CACRvQ,cAAc,EACdlV,IAFQ,WAGJ,OAAO4iB,EACV,EACD5jB,IALQ,SAKJmW,GACKyN,KACDA,GAAczN,EACrB,GAELuQ,eAAgB,CACZxQ,cAAc,EACdlV,IAFY,WAGR,OAAO6iB,EACV,EACD7jB,IALY,SAKRmW,GACK0N,KACDA,GAAkB1N,EACzB,+ECroCT6Q,GAAAA,WAA2B,wBAAUhhB,GAAOghB,EAAAA,IAAczW,YAAdyW,MAAAA,EAAAA,WAAjB,EAEOA,GAAAA,iBAA3B,IACMC,GAAkB,WAC7B,IAAMC,EAAgBF,GAAAA,mBAChBzS,EAAYQ,GAAamS,GACzBC,EAAY,IAAI90B,WAAW,IAGjC,OAFA80B,EAAUnnB,IAAIknB,GACdC,EAAUnnB,IAAIuU,EAAW,IAClB,CACLA,UAAAA,EACA4S,UAAAA,EARG,EAWMpS,GAAeiS,GAAAA,aACrB,SAASI,GAAU7S,GACxB,IAEE,OADAyS,GAAAA,QAAsBzS,GAAW,IAC1B,CAGR,CAFC,SACA,OAAO,CACR,CACF,CACM,IAAMS,GAAO,SAClB3V,EACA8nB,GAFkB,OAGfH,GAAAA,KAAkB3nB,EAAS8nB,EAAUlrB,MAAM,EAAG,IAH/B,EAIPiZ,GAAS8R,GAAAA,OC3CTK,GAAYlpB,SAAAA,GACvB,OAAImpB,EAAAA,GAAAA,SAAgBnpB,GACXA,EACEA,aAAe9L,WACjBi1B,EAAAA,GAAAA,KAAYnpB,EAAIzL,OAAQyL,EAAIxL,WAAYwL,EAAIE,YAE5CipB,EAAAA,GAAAA,KAAYnpB,EANhB,ECEM+a,GAAAA,WACX3lB,SAAAA,EAAYg0B,IAAiB,eAC3Bl0B,OAAOI,OAAOuL,KAAMuoB,EACrB,sCAED5yB,WACE,OAAO2yB,EAAAA,GAAAA,MAAYE,EAAAA,GAAAA,WAAUC,GAAezoB,MAC7C,yBAEY,SAACL,GACZ,OAAO+oB,EAAAA,GAAAA,aAAYD,GAAezoB,KAAML,EACzC,gCAEqB,SAACA,GACrB,OAAOgpB,EAAAA,GAAAA,sBAAqBF,GAAezoB,KAAML,EAClD,OAfUua,GAiCAuO,GAAoC,IAAI1O,ICpBxC6O,GAAoB,GAyBjC,IAAIC,GAAyB,EAKhBC,GAAAA,SAAAA,iCAQXv0B,SAAAA,EAAY0H,GAA0B,MAEpC,IAFoC,gBACpC,cAAM,CAAC,IAPT8sB,SAMsC,EAlBxC,SAAyB9sB,GACvB,YAAwC3C,IAAhC2C,EAAwB8sB,GACjC,CAkBOC,CAAgB/sB,GAClB,EAAK8sB,IAAM9sB,EAAM8sB,QACZ,CACL,GAAqB,kBAAV9sB,EAAoB,CAE7B,IAAMgtB,EAAUC,KAAAA,OAAYjtB,GAC5B,GAAIgtB,EAAQr1B,QAAUg1B,GACpB,MAAM,IAAI7zB,MAAJ,4BAER,EAAKg0B,IAAM,IAAII,KAAJ,CAAOF,EANpB,MAQE,EAAKF,IAAM,IAAII,KAAJ,CAAOltB,GAGpB,GAAI,EAAK8sB,IAAI1pB,aAAe,GAC1B,MAAM,IAAItK,MAAJ,2BAET,CAnBmC,QAoBrC,sCAmBD4V,SAAO4K,GACL,OAAOvV,KAAK+oB,IAAIK,GAAG7T,EAAUwT,IAC9B,yBAKDM,WACE,OAAOH,KAAAA,OAAYlpB,KAAKN,UACzB,uBAED4pB,WACE,OAAOtpB,KAAKqpB,UACb,wBAKD3pB,WACE,OAAOM,KAAKqoB,UACb,yBAKDA,WACE,IAAMj1B,EAAI4M,KAAK+oB,IAAIQ,YAAYjB,EAAAA,IAC/B,GAAIl1B,EAAEQ,SAAWg1B,GACf,OAAOx1B,EAGT,IAAMo2B,EAAUlB,EAAAA,GAAAA,MAAa,IAE7B,OADAl1B,EAAEoK,KAAKgsB,EAAS,GAAKp2B,EAAEQ,QAChB41B,CACR,yBAKDpsB,WACE,OAAO4C,KAAKqpB,UACb,yBAvDY,WACX,IAAMzU,EAAM,IAAIkU,EAAUD,IAE1B,OADAA,IAA0B,EACnB,IAAIC,EAAUlU,EAAIyT,WAC1B,wEA2D0B,WACzBoB,EACAhE,EACAiE,GAHyB,qFAKnBh2B,EAAS40B,EAAAA,GAAAA,OAAc,CAC3BmB,EAAcpB,WACdC,EAAAA,GAAAA,KAAY7C,GACZiE,EAAUrB,aAENsB,EAAiB/R,GAAOlkB,GAVL,kBAWlB,IAAIo1B,EAAUa,IAXI,4IAkBI,SAC7BC,EACAF,GAEA,IAAIh2B,EAAS40B,EAAAA,GAAAA,MAAa,GAC1BsB,EAAM3nB,SAAQ,SAAUwjB,GACtB,GAAIA,EAAK7xB,OA3JgB,GA4JvB,MAAM,IAAIN,UAAJ,4BAERI,EAAS40B,EAAAA,GAAAA,OAAc,CAAC50B,EAAQ20B,GAAS5C,IAJ3C,IAMA/xB,EAAS40B,EAAAA,GAAAA,OAAc,CACrB50B,EACAg2B,EAAUrB,WACVC,EAAAA,GAAAA,KAAY,2BAEd,IAAMqB,EAAiB/R,GAAOlkB,GAC9B,GAAI00B,GAAUuB,GACZ,MAAM,IAAI50B,MAAJ,kDAER,OAAO,IAAI+zB,EAAUa,EACtB,8EAOgC,WAC/BC,EACAF,GAF+B,+FAIxB1pB,KAAK6pB,yBAAyBD,EAAOF,IAJb,6IAcJ,SAC3BE,EACAF,GAIA,IAFA,IACII,EADAC,EAAQ,IAEI,GAATA,GAAY,CACjB,IACE,IAAMC,EAAiBJ,EAAMK,OAAO3B,EAAAA,GAAAA,KAAY,CAACyB,KACjDD,EAAU9pB,KAAK6pB,yBAAyBG,EAAgBN,EAOzD,CANC,MAAOQ,GACP,GAAIA,aAAe52B,UACjB,MAAM42B,EAERH,IACA,QACD,CACD,MAAO,CAACD,EAASC,EAClB,CACD,MAAM,IAAIh1B,MAAJ,gDACP,4EAM8B,WAC7B60B,EACAF,GAF6B,+FAItB1pB,KAAKmqB,uBAAuBP,EAAOF,IAJb,gIAUf,SAACU,GAEf,OAAOhC,GADQ,IAAIU,EAAUsB,GACL1qB,UACzB,OAnMUopB,CAAkB5O,IAAlB4O,GA0CJuB,QAAqB,IAAIvB,GAAU,oCA4J5CL,GAAcznB,IAAI8nB,GAAW,CAC3BwB,KAAM,SACNrxB,OAAQ,CAAC,CAAC,MAAO,WCrP6B,IAAI6vB,GAClD,mDCIWyB,GAAmB,KCPnBC,GAAAA,SAAAA,iCAGXj2B,SAAAA,EAAY6uB,GAAmB,6BAC7B,kCAAmBA,EAAnB,0CAHFA,eAE+B,EAE7B,EAAKA,UAAYA,EAFY,CAG9B,kBANUoH,SAAmDz1B,QAShEV,OAAOo2B,eACLD,GAA2Ch2B,UAC3C,OACA,CACEyH,MAAO,mDAIEyuB,GAAAA,SAAAA,iCAGXn2B,SAAAA,EAAY6uB,EAAmBuH,GAAwB,6BACrD,cACG,2CAAmCA,EAAeC,QACjD,GADD,oBAGC,sDAHD,UAIIxH,EAJJ,8CAJLA,eAEuD,EAQrD,EAAKA,UAAYA,EARoC,CAStD,kBAZUsH,SAAuC31B,QAepDV,OAAOo2B,eAAeC,GAA+Bl2B,UAAW,OAAQ,CACtEyH,MAAO,uCC1BI4uB,GAAAA,WAIXt2B,SAAAA,EACEu2B,EACAC,IACA,oBANFD,uBAME,OALFC,4BAKE,EACA/qB,KAAK8qB,kBAAoBA,EACzB9qB,KAAK+qB,uBAAyBA,CAC/B,2CAEDC,WACE,IAAMA,EAAc,CAAChrB,KAAK8qB,mBAK1B,OAJI9qB,KAAK+qB,yBACPC,EAAYpyB,KAAKoH,KAAK+qB,uBAAuBE,UAC7CD,EAAYpyB,KAAKoH,KAAK+qB,uBAAuBG,WAExCF,CACR,oBAEDhpB,SAAImpB,GAAsC,gBACfnrB,KAAKgrB,eADU,IACxC,IAAK,EAAL,qBAA6C,KAAlCI,EAAkC,QAC3C,GAAID,EAAQC,EAAWx3B,OACrB,OAAOw3B,EAAWD,GAElBA,GAASC,EAAWx3B,MAEvB,CAPuC,+BASzC,qBAES,WACR,OAAOoM,KAAKgrB,cAAcK,OAAOz3B,MAClC,oCAED03B,SACEC,GAIA,GAAIvrB,KAAKpM,OAAS43B,IAChB,MAAM,IAAIz2B,MAAM,yDAGlB,IAAM02B,EAAc,IAAI1R,IACxB/Z,KAAKgrB,cACFK,OACAppB,SAAQ,SAAC2S,EAAKuW,GACbM,EAAYzqB,IAAI4T,EAAIyU,WAAY8B,EAHpC,IAMA,IAAMO,EAAgB9W,SAAAA,GACpB,IAAM+W,EAAWF,EAAYzpB,IAAI4S,EAAIyU,YACrC,QAAiB/vB,IAAbqyB,EACF,MAAM,IAAI52B,MACR,qEAEJ,OAAO42B,CANT,EASA,OAAOJ,EAAa5mB,KAAKinB,SAAAA,GACvB,MAAO,CACLC,eAAgBH,EAAaE,EAAYlC,WACzCoC,kBAAmBF,EAAYnQ,KAAK9W,KAAIonB,SAAAA,GAAI,OAC1CL,EAAaK,EAAKC,OADwB,IAG5CrsB,KAAMisB,EAAYjsB,KANf,GASR,OAtEUkrB,GCCAtV,GAAY,WAAoC,IAAnCxhB,EAAmC,uDAAhB,YAC3C,OAAOk4B,GAAAA,GAAkB,GAAIl4B,EADxB,EAsCMm4B,GAAa,WAEQ,IADhCn4B,EACgC,uDADb,SAEbo4B,EAAMF,GAAAA,GAOV,CACEA,GAAAA,GAAiB,UACjBA,GAAAA,GAAiB,iBACjBA,GAAAA,GAAkBA,GAAAA,GAAoBA,GAAAA,MAAqB,GAAI,UAEjEl4B,GAEIq4B,EAAUD,EAAIz2B,OAAOkF,KAAKuxB,GAC1BE,EAAUF,EAAIx2B,OAAOiF,KAAKuxB,GAE1BG,EAAUH,EAsBhB,OApBAG,EAAQ52B,OAAS,SAACtC,EAAec,GAE/B,OADak4B,EAAQh5B,EAAGc,GACb,MAAUkJ,UAFvB,EAKAkvB,EAAQ32B,OAAS,SAACiK,EAAaxM,EAAec,GAC5C,IAAMyL,EAAO,CACX4sB,MAAOjE,EAAAA,GAAAA,KAAY1oB,EAAK,SAE1B,OAAOysB,EAAQ1sB,EAAMvM,EAAGc,EAJ1B,EAOAo4B,EAAQE,MAAS5sB,SAAAA,GACf,OACEqsB,GAAAA,KAAmBn4B,KACnBm4B,GAAAA,KAAmBn4B,KACnBw0B,EAAAA,GAAAA,KAAY1oB,EAAK,QAAQhM,MAJ7B,EAQO04B,CA1CF,EAoHA,SAASG,GAASrT,EAAWngB,GAClC,IAAMyzB,EAAgBC,SAAhBD,EAAgBC,GACpB,GAAIA,EAAK74B,MAAQ,EACf,OAAO64B,EAAK74B,KACP,GAA0B,oBAAf64B,EAAKH,MACrB,OAAOG,EAAKH,MAAMvzB,EAAO0zB,EAAK54B,WACzB,GAAI,UAAW44B,GAAQ,kBAAmBA,EAAM,CACrD,IAAMC,EAAQ3zB,EAAO0zB,EAAK54B,UAC1B,GAAIoF,MAAMC,QAAQwzB,GAChB,OAAOA,EAAMh5B,OAAS84B,EAAaC,EAAKr0B,cAHrC,MAKA,GAAI,WAAYq0B,EAErB,OAAOF,GAAS,CAACl3B,OAAQo3B,GAAO1zB,EAAO0zB,EAAK54B,WAG9C,OAAO,CAfT,EAkBIy4B,EAAQ,EAKZ,OAJApT,EAAK7jB,OAAO0D,OAAOgJ,SAAS0qB,SAAAA,GAC1BH,GAASE,EAAaC,EADxB,IAIOH,CACR,CC3LM,SAASK,GAAa7uB,GAG3B,IAFA,IAAI8C,EAAM,EACNgsB,EAAO,IACF,CACP,IAAIC,EAAO/uB,EAAMhE,QAGjB,GAFA8G,IAAe,IAAPisB,IAAwB,EAAPD,EACzBA,GAAQ,EACc,KAAV,IAAPC,GACH,KAEH,CACD,OAAOjsB,CACR,CAEM,SAASksB,GAAahvB,EAAsB8C,GAEjD,IADA,IAAImsB,EAAUnsB,IACL,CACP,IAAIisB,EAAiB,IAAVE,EAEX,GAAe,IADfA,IAAY,GACM,CAChBjvB,EAAMpF,KAAKm0B,GACX,KAFF,CAIEA,GAAQ,IACR/uB,EAAMpF,KAAKm0B,EAEd,CACF,CC3Bc,SAAS,GACtB/Q,EACA3b,GAEA,IAAK2b,EACH,MAAM,IAAIjnB,MAAMsL,GAAW,mBAE9B,KCaiB6sB,GCLLC,GAAAA,WAIX54B,SAAAA,EAAY64B,EAAkBC,IAAwB,oBAHtDD,WAGsD,OAFtDC,gBAEsD,EACpDrtB,KAAKotB,MAAQA,EACbptB,KAAKqtB,WAAaA,CACnB,oDAqCDC,WACE,IAAMC,GAAa,OAAIvtB,KAAKqtB,WAAWxT,WACvC1b,GAAOovB,EAAW35B,QAAU,IAAK,2CAEjC,IAAM45B,EAAkBD,EAAWE,QACjC,gBAAI1B,GAAJ,sBAAcA,EAAK2B,UAAY3B,EAAK4B,UAApC,IAEIC,EAAkBL,EAAWE,QACjC,gBAAI1B,GAAJ,sBAAcA,EAAK2B,WAAa3B,EAAK4B,UAArC,IAEIE,EAAqBN,EAAWE,QACpC,gBAAI1B,GAAJ,sBAAeA,EAAK2B,UAAY3B,EAAK4B,UAArC,IAEIG,EAAqBP,EAAWE,QACpC,gBAAI1B,GAAJ,sBAAeA,EAAK2B,WAAa3B,EAAK4B,UAAtC,IAGI5K,EAAwB,CAC5BgL,sBAAuBP,EAAgB55B,OAASg6B,EAAgBh6B,OAChEo6B,0BAA2BJ,EAAgBh6B,OAC3Cq6B,4BAA6BH,EAAmBl6B,QAuBlD,OAlBEuK,GACEqvB,EAAgB55B,OAAS,EACzB,6CAGFuK,IADA,OAAuBqvB,EAAgB,GAAvC,QAEmBxtB,KAAKotB,MAAM/D,WAC5B,0DAWG,CAACtG,EAPkB,GAAH,eAClByK,EAAgB7oB,KAAI,gBAAEmlB,GAAF,sBAAe,IAAIhB,GAAUgB,EAA7B,MADF,OAElB8D,EAAgBjpB,KAAI,gBAAEmlB,GAAF,sBAAe,IAAIhB,GAAUgB,EAA7B,MAFF,OAGlB+D,EAAmBlpB,KAAI,gBAAEmlB,GAAF,sBAAe,IAAIhB,GAAUgB,EAA7B,MAHL,OAIlBgE,EAAmBnpB,KAAI,gBAAEmlB,GAAF,sBAAe,IAAIhB,GAAUgB,EAA7B,MAI7B,mCAEDoE,SACEC,GAEA,MACEnuB,KAAKouB,4BACHD,EAAYlR,MAAMoR,WAClBC,SAAAA,GAAO,OACJA,EAAQZ,WAAaY,EAAQC,WAAaD,EAAQX,UAD9C,IAHX,eAAOa,EAAP,KAAwBC,EAAxB,KAMA,EACEzuB,KAAKouB,4BACHD,EAAYlR,MAAMoR,WAClBC,SAAAA,GAAO,OACJA,EAAQZ,WAAaY,EAAQC,YAAcD,EAAQX,UAD/C,IAHX,eAAOe,EAAP,KAAwBC,EAAxB,KAQA,GAA+B,IAA3BH,EAAgB56B,QAA2C,IAA3B86B,EAAgB96B,OAIpD,MAAO,CACL,CACEg7B,WAAYT,EAAYvZ,IACxB4Z,gBAAAA,EACAE,gBAAAA,GAEF,CACEzD,SAAUwD,EACVvD,SAAUyD,GAGf,4CAGOP,SACNS,EACAC,GACmC,aAC7BC,EAAqB,IAAI51B,MACzB61B,EAAc,IAAI71B,MAFW,UAIF6G,KAAKqtB,WAAWxT,WAJd,IAInC,IAAK,EAAL,qBAA4D,0BAAhDiQ,EAAgD,KACtDgF,EADsD,OAC9B,WAC1B,IAAMla,EAAM,IAAIkU,GAAUgB,GACpBmF,EAAmBJ,EAAmBK,WAAUC,SAAAA,GAAK,OACzDA,EAAMxkB,OAAOiK,EAD4C,IAGvDqa,GAAoB,IACtB9wB,GAAO8wB,EAAmB,IAAK,mCAC/BF,EAAmBn2B,KAAKq2B,GACxBD,EAAYp2B,KAAKgc,GACjB,EAAKyY,WAAW9c,OAAOuZ,GATC,GAY7B,CAjBkC,+BAmBnC,MAAO,CAACiF,EAAoBC,EAC7B,0BA3Ia,SACZzD,EACA6B,GAEA,IAAMC,EAAyB,IAAItT,IAC7BqV,EAAsBpD,SAAAA,GAC1B,IAAMlC,EAAUkC,EAAO3C,WACnBiF,EAAUjB,EAAWrrB,IAAI8nB,GAS7B,YARgBxwB,IAAZg1B,IACFA,EAAU,CACRZ,UAAU,EACVC,YAAY,EACZY,WAAW,GAEblB,EAAWrsB,IAAI8oB,EAASwE,IAEnBA,CAXT,EAcMe,EAAeD,EAAmBhC,GACxCiC,EAAa3B,UAAW,EACxB2B,EAAa1B,YAAa,EAlBZ,gBAoBGpC,GApBH,IAoBd,IAAK,EAAL,qBAA+B,KAApB+D,EAAoB,QAC7BF,EAAmBE,EAAG5F,WAAW6E,WAAY,EADhB,gBAEHe,EAAG7T,MAFA,IAE7B,IAAK,EAAL,qBAAmC,KAAxB8T,EAAwB,QAC3BjB,EAAUc,EAAmBG,EAAYvD,QAC/CsC,EAAQZ,WAARY,EAAQZ,SAAa6B,EAAY7B,UACjCY,EAAQX,aAARW,EAAQX,WAAe4B,EAAY5B,WACpC,CAN4B,+BAO9B,CA3Ba,+BA6Bd,OAAO,IAAIR,EAAaC,EAAOC,EAChC,OA1CUF,GC2CAqC,GAAAA,WAWXj7B,SAAAA,EAAYk7B,GAAmB,gCAV/B1M,YAU+B,OAT/B2M,iBAS+B,OAR/BC,qBAQ+B,OAP/BpE,kBAO+B,OALvBqE,kBAA4C,IAAI7V,IAMtD/Z,KAAK+iB,OAAS0M,EAAK1M,OACnB/iB,KAAK0vB,YAAcD,EAAKC,YAAY/qB,KAAIkrB,SAAAA,GAAO,OAAI,IAAI/G,GAAU+G,EAAlB,IAC/C7vB,KAAK2vB,gBAAkBF,EAAKE,gBAC5B3vB,KAAKurB,aAAekE,EAAKlE,aACzBvrB,KAAKurB,aAAatpB,SAAQqtB,SAAAA,GAAE,OAC1B,EAAKM,kBAAkB5uB,IACrBsuB,EAAGzD,eACH,EAAK6D,YAAYJ,EAAGzD,gBAHI,GAM7B,qCAEU,WACT,MAAO,QACR,gCAEoB,WACnB,OAAO7rB,KAAK0vB,WACb,mCAEuB,WACtB,OAAO1vB,KAAKurB,aAAa5mB,KACtB2qB,SAAAA,GAAD,MAAqC,CACnCzD,eAAgByD,EAAGzD,eACnBC,kBAAmBwD,EAAGQ,SACtBnwB,KAAMupB,KAAAA,OAAYoG,EAAG3vB,MAHvB,GAMH,kCAEsB,WACrB,MAAO,EACR,+BAEDowB,WACE,OAAO,IAAIlF,GAAmB7qB,KAAK8qB,kBACpC,gCAqBDkF,SAAgB7E,GACd,OAAOA,EAAQnrB,KAAK+iB,OAAOgL,qBAC5B,kCAEDkC,SAAkB9E,GAChB,IAAM+E,EAAoBlwB,KAAK+iB,OAAOgL,sBACtC,OAAI5C,GAASnrB,KAAK+iB,OAAOgL,sBACM5C,EAAQ+E,EACTlwB,KAAK0vB,YAAY97B,OAASs8B,EAE9BlwB,KAAK+iB,OAAOkL,4BAK7B9C,EADL+E,EAAoBlwB,KAAK+iB,OAAOiL,yBAGrC,4BAEDmC,SAAYhF,GACV,OAAOnrB,KAAK4vB,kBAAkBQ,IAAIjF,EACnC,2BAEDkF,WACE,OAAO,OAAIrwB,KAAK4vB,kBAAkBl7B,SACnC,8BAED47B,WAA6B,WAC3B,OAAOtwB,KAAK0vB,YAAYjC,QAAO,SAAC8C,EAAGpF,GAAJ,OAAe,EAAKgF,YAAYhF,EAAhC,GAChC,0BAED3C,WACE,IAAMgI,EAAUxwB,KAAK0vB,YAAY97B,OAE7B68B,EAAqB,GACzBC,GAAsBD,EAAUD,GAEhC,IAAMjF,EAAevrB,KAAKurB,aAAa5mB,KAAIinB,SAAAA,GACzC,IAAOkE,EAA4BlE,EAA5BkE,SAAUjE,EAAkBD,EAAlBC,eACXlsB,EAAOxG,MAAM1F,KAAKy1B,KAAAA,OAAY0C,EAAYjsB,OAE5CgxB,EAA4B,GAChCD,GAAsBC,EAAiBb,EAASl8B,QAEhD,IAAIg9B,EAAsB,GAG1B,OAFAF,GAAsBE,EAAWjxB,EAAK/L,QAE/B,CACLi4B,eAAAA,EACA8E,gBAAiBrI,EAAAA,GAAAA,KAAYqI,GAC7BE,WAAYf,EACZgB,WAAYxI,EAAAA,GAAAA,KAAYsI,GACxBjxB,KAAAA,EAfiB,IAmBjBoxB,EAA6B,GACjCL,GAAsBK,EAAkBxF,EAAa33B,QACrD,IAAIo9B,EAAoB1I,EAAAA,GAAAA,MAAaiC,IACrCjC,EAAAA,GAAAA,KAAYyI,GAAkBvzB,KAAKwzB,GACnC,IAAIC,EAA0BF,EAAiBn9B,OAE/C23B,EAAatpB,SAAQ2pB,SAAAA,GACnB,IA2BMh4B,EA3BoBq4B,GAAAA,GAQxB,CACAA,GAAAA,GAAgB,kBAEhBA,GAAAA,GACEL,EAAY+E,gBAAgB/8B,OAC5B,mBAEFq4B,GAAAA,GACEA,GAAAA,GAAgB,YAChBL,EAAYiF,WAAWj9B,OACvB,cAEFq4B,GAAAA,GAAkBL,EAAYkF,WAAWl9B,OAAQ,cACjDq4B,GAAAA,GACEA,GAAAA,GAAgB,aAChBL,EAAYjsB,KAAK/L,OACjB,UAG6B+B,OAC/Bi2B,EACAoF,EACAC,GAEFA,GAA2Br9B,CAjC7B,IAmCAo9B,EAAoBA,EAAkB/zB,MAAM,EAAGg0B,GAE/C,IAAMC,EAAiBjF,GAAAA,GASrB,CACAA,GAAAA,GAAkB,EAAG,yBACrBA,GAAAA,GAAkB,EAAG,6BACrBA,GAAAA,GAAkB,EAAG,+BACrBA,GAAAA,GAAkBwE,EAAS78B,OAAQ,YACnCq4B,GAAAA,GAAiBp4B,GAAiB,OAAQ28B,EAAS,QACnD38B,GAAiB,qBAGbs9B,EAAc,CAClBpD,sBAAuBzF,EAAAA,GAAAA,KAAY,CAACtoB,KAAK+iB,OAAOgL,wBAChDC,0BAA2B1F,EAAAA,GAAAA,KAAY,CACrCtoB,KAAK+iB,OAAOiL,4BAEdC,4BAA6B3F,EAAAA,GAAAA,KAAY,CACvCtoB,KAAK+iB,OAAOkL,8BAEdwC,SAAUnI,EAAAA,GAAAA,KAAYmI,GACtBhV,KAAMzb,KAAK0vB,YAAY/qB,KAAIiQ,SAAAA,GAAG,OAAIyT,GAASzT,EAAIlV,UAAjB,IAC9BiwB,gBAAiBzG,KAAAA,OAAYlpB,KAAK2vB,kBAGhCyB,EAAW9I,EAAAA,GAAAA,MAAa,MACtB10B,EAASs9B,EAAev7B,OAAOw7B,EAAaC,GAElD,OADAJ,EAAkBxzB,KAAK4zB,EAAUx9B,GAC1Bw9B,EAASn0B,MAAM,EAAGrJ,EAASo9B,EAAkBp9B,OACrD,0BAzJa,SAAC67B,GACb,IACA,EADqBtC,GAAakE,QAAQ5B,EAAKlE,aAAckE,EAAK6B,UACjBhE,uBAAjD,eAAOvK,EAAP,KAAe+H,EAAf,KAEMS,EADc,IAAIV,GAAmBC,GACVQ,oBAAoBmE,EAAKlE,cAAc5mB,KACrE2qB,SAAAA,GAAD,MAA0D,CACxDzD,eAAgByD,EAAGzD,eACnBiE,SAAUR,EAAGxD,kBACbnsB,KAAMupB,KAAAA,OAAYoG,EAAG3vB,MAHvB,IAMF,OAAO,IAAI6vB,EAAQ,CACjBzM,OAAAA,EACA2M,YAAa5E,EACb6E,gBAAiBF,EAAKE,gBACtBpE,aAAAA,GAEH,qBA6IU,SAAC73B,GAEV,IAAI69B,GAAY,OAAI79B,GAEdq6B,EAAwBwD,EAAUv3B,QACxC,GACE+zB,KRvQ6B,IQwQ5BA,GAED,MAAM,IAAIh5B,MACR,+EASJ,IALA,IAAMi5B,EAA4BuD,EAAUv3B,QACtCi0B,EAA8BsD,EAAUv3B,QAExCw3B,EAAed,GAAsBa,GACvC7B,EAAc,GACT/2B,EAAI,EAAGA,EAAI64B,EAAc74B,IAAK,CACrC,IAAMk3B,EAAU0B,EAAUt0B,MAAM,EAAG2rB,IACnC2I,EAAYA,EAAUt0B,MAAM2rB,IAC5B8G,EAAY92B,KAAK,IAAIkwB,GAAUR,EAAAA,GAAAA,KAAYuH,IAC5C,CAOD,IALA,IAAMF,EAAkB4B,EAAUt0B,MAAM,EAAG2rB,IAGrCmI,EAAmBL,GAFzBa,EAAYA,EAAUt0B,MAAM2rB,KAGxB2C,EAAsC,GACjC5yB,EAAI,EAAGA,EAAIo4B,EAAkBp4B,IAAK,CACzC,IAAMkzB,EAAiB0F,EAAUv3B,QAC3Bw3B,EAAed,GAAsBa,GACrCzB,EAAWyB,EAAUt0B,MAAM,EAAGu0B,GAE9BV,EAAaJ,GADnBa,EAAYA,EAAUt0B,MAAMu0B,IAEtBC,EAAYF,EAAUt0B,MAAM,EAAG6zB,GAC/BnxB,EAAOupB,KAAAA,OAAYZ,EAAAA,GAAAA,KAAYmJ,IACrCF,EAAYA,EAAUt0B,MAAM6zB,GAC5BvF,EAAa3yB,KAAK,CAChBizB,eAAAA,EACAiE,SAAAA,EACAnwB,KAAAA,GAEH,CAaD,OAAO,IAAI6vB,EAXS,CAClBzM,OAAQ,CACNgL,sBAAAA,EACAC,0BAAAA,EACAC,4BAAAA,GAEF0B,gBAAiBzG,KAAAA,OAAYZ,EAAAA,GAAAA,KAAYqH,IACzCD,YAAAA,EACAnE,aAAAA,GAIH,OA1QUiE,GCRAkC,GAAAA,WAOXn9B,SAAAA,EAAYk7B,IAAqB,oBANjC1M,YAMiC,OALjC+H,uBAKiC,OAJjC6E,qBAIiC,OAHjCgC,0BAGiC,OAFjCC,yBAEiC,EAC/B5xB,KAAK+iB,OAAS0M,EAAK1M,OACnB/iB,KAAK8qB,kBAAoB2E,EAAK3E,kBAC9B9qB,KAAK2vB,gBAAkBF,EAAKE,gBAC5B3vB,KAAK2xB,qBAAuBlC,EAAKkC,qBACjC3xB,KAAK4xB,oBAAsBnC,EAAKmC,mBACjC,qCAEU,WACT,OAAO,CACR,wCAE4B,WAC3B,IADsC,EAClCr5B,EAAQ,EAD0B,UAEjByH,KAAK4xB,qBAFY,IAEtC,IAAK,EAAL,qBAA+C,KAApCC,EAAoC,QAC7Ct5B,GAASs5B,EAAOnD,gBAAgB96B,OAASi+B,EAAOrD,gBAAgB56B,MACjE,CAJqC,+BAKtC,OAAO2E,CACR,+BAEDw3B,SAAeN,GACb,IAAI1E,EACJ,GACE0E,GACA,2BAA4BA,GAC5BA,EAAK1E,uBACL,CACA,GACE/qB,KAAK8xB,2BACLrC,EAAK1E,uBAAuBE,SAASr3B,OACnC67B,EAAK1E,uBAAuBG,SAASt3B,OAEvC,MAAM,IAAImB,MACR,+FAGJg2B,EAAyB0E,EAAK1E,sBAdhC,MAeO,GACL0E,GACA,+BAAgCA,GAChCA,EAAKsC,2BAELhH,EAAyB/qB,KAAKgyB,2BAC5BvC,EAAKsC,iCAEF,GAAI/xB,KAAK4xB,oBAAoBh+B,OAAS,EAC3C,MAAM,IAAImB,MACR,8EAGJ,OAAO,IAAI81B,GACT7qB,KAAK8qB,kBACLC,EAEH,gCAEDiF,SAAgB7E,GACd,OAAOA,EAAQnrB,KAAK+iB,OAAOgL,qBAC5B,kCAEDkC,SAAkB9E,GAChB,IAAM+E,EAAoBlwB,KAAK+iB,OAAOgL,sBAChCkE,EAAuBjyB,KAAK8qB,kBAAkBl3B,OACpD,OAAIu3B,GAAS8G,EACoB9G,EAAQ8G,EACFjyB,KAAK4xB,oBAAoB94B,QAC5D,SAACP,EAAOs5B,GAAR,OAAmBt5B,EAAQs5B,EAAOrD,gBAAgB56B,MAAlD,GACA,GAGOu3B,GAASnrB,KAAK+iB,OAAOgL,sBACD5C,EAAQ+E,EACT+B,EAAuB/B,EAE3BlwB,KAAK+iB,OAAOkL,4BAK7B9C,EADL+E,EAAoBlwB,KAAK+iB,OAAOiL,yBAGrC,2CAEDgE,SACED,GAEA,IADwB,EAClBhH,EAAiD,CACrDE,SAAU,GACVC,SAAU,IAHY,UAMElrB,KAAK4xB,qBANP,yBAMbM,EANa,QAOhBC,EAAeJ,EAA2BK,MAAKvC,SAAAA,GAAO,OAC1DA,EAAQjb,IAAIjK,OAAOunB,EAAYtD,WAD2B,IAG5D,IAAKuD,EACH,MAAM,IAAIp9B,MAAJ,oEACyDm9B,EAAYtD,WAAWvF,aAZlE,gBAgBF6I,EAAY1D,iBAhBV,IAgBtB,IAAK,EAAL,qBAAiD,KAAtCrD,EAAsC,QAC/C,KAAIA,EAAQgH,EAAalV,MAAMoR,UAAUz6B,QAKvC,MAAM,IAAImB,MAAJ,2CACgCo2B,EADhC,oCACiE+G,EAAYtD,WAAWvF,aAL9F0B,EAAuBE,SAASryB,KAC9Bu5B,EAAalV,MAAMoR,UAAUlD,GAOlC,CA1BqB,+CA4BF+G,EAAYxD,iBA5BV,IA4BtB,IAAK,EAAL,qBAAiD,KAAtCvD,EAAsC,QAC/C,KAAIA,EAAQgH,EAAalV,MAAMoR,UAAUz6B,QAKvC,MAAM,IAAImB,MAAJ,2CACgCo2B,EADhC,oCACiE+G,EAAYtD,WAAWvF,aAL9F0B,EAAuBG,SAAStyB,KAC9Bu5B,EAAalV,MAAMoR,UAAUlD,GAOlC,CAtCqB,iCAMxB,IAAK,EAAL,qBAAoD,GAN5B,+BAyCxB,OAAOJ,CACR,0BAsCDvC,WACE,IAAM6J,EAAiCl5B,QACvCu3B,GACE2B,EACAryB,KAAK8qB,kBAAkBl3B,QAGzB,IAAM0+B,EAAyBtyB,KAAKuyB,wBAC9BC,EAA4Br5B,QAClCu3B,GACE8B,EACAxyB,KAAK2xB,qBAAqB/9B,QAG5B,IAAM6+B,EAAgCzyB,KAAK0yB,+BACrCC,EAAmCx5B,QACzCu3B,GACEiC,EACA3yB,KAAK4xB,oBAAoBh+B,QAG3B,IAAMg/B,EAAgB3G,GAAAA,GAUnB,CACDA,GAAAA,GAAgB,UAChBA,GAAAA,GACE,CACEA,GAAAA,GAAgB,yBAChBA,GAAAA,GAAgB,6BAChBA,GAAAA,GAAgB,gCAElB,UAEFA,GAAAA,GACEoG,EAA+Bz+B,OAC/B,2BAEFq4B,GAAAA,GACEp4B,KACAmM,KAAK8qB,kBAAkBl3B,OACvB,qBAEFC,GAAiB,mBACjBo4B,GAAAA,GAAkBuG,EAA0B5+B,OAAQ,sBACpDq4B,GAAAA,GACEqG,EAAuB1+B,OACvB,0BAEFq4B,GAAAA,GACE0G,EAAiC/+B,OACjC,6BAEFq4B,GAAAA,GACEwG,EAA8B7+B,OAC9B,mCAIEi/B,EAAoB,IAAIx/B,WAAWk3B,IAEnCuI,EAA0BF,EAAcj9B,OAC5C,CACEqf,OAH6B,IAI7B+N,OAAQ/iB,KAAK+iB,OACbgQ,wBAAyB,IAAI1/B,WAAWg/B,GACxCvH,kBAAmB9qB,KAAK8qB,kBAAkBnmB,KAAIiQ,SAAAA,GAAG,OAAIA,EAAIlV,SAAR,IACjDiwB,gBAAiBzG,KAAAA,OAAYlpB,KAAK2vB,iBAClCqD,mBAAoB,IAAI3/B,WAAWm/B,GACnCF,uBAAAA,EACAW,0BAA2B,IAAI5/B,WAC7Bs/B,GAEFF,8BAAAA,GAEFI,GAEF,OAAOA,EAAkB51B,MAAM,EAAG61B,EACnC,sCAEOP,WACN,IAD0C,EACtCW,EAAmB,EACjBZ,EAAyB,IAAIj/B,WAAWk3B,IAFJ,UAGhBvqB,KAAK2xB,sBAHW,IAG1C,IAAK,EAAL,qBAAqD,KAA1C/F,EAA0C,QAC7CuH,EAAiCh6B,QACvCu3B,GACEyC,EACAvH,EAAYE,kBAAkBl4B,QAGhC,IAAMw/B,EAAoBj6B,QAC1Bu3B,GAAsB0C,EAAmBxH,EAAYjsB,KAAK/L,QAuB1Ds/B,GArB0BjH,GAAAA,GAMvB,CACDA,GAAAA,GAAgB,kBAChBA,GAAAA,GACEkH,EAA+Bv/B,OAC/B,kCAEFq4B,GAAAA,GACEA,GAAAA,KACAL,EAAYE,kBAAkBl4B,OAC9B,qBAEFq4B,GAAAA,GAAkBmH,EAAkBx/B,OAAQ,qBAC5Cq4B,GAAAA,GAAkBL,EAAYjsB,KAAK/L,OAAQ,UAGP+B,OACpC,CACEk2B,eAAgBD,EAAYC,eAC5BsH,+BAAgC,IAAI9/B,WAClC8/B,GAEFrH,kBAAmBF,EAAYE,kBAC/BsH,kBAAmB,IAAI//B,WAAW+/B,GAClCzzB,KAAMisB,EAAYjsB,MAEpB2yB,EACAY,EAEH,CA/CyC,+BAiD1C,OAAOZ,EAAuBr1B,MAAM,EAAGi2B,EACxC,6CAEOR,WACN,IADiD,EAC7CQ,EAAmB,EACjBT,EAAgC,IAAIp/B,WAAWk3B,IAFJ,UAG5BvqB,KAAK4xB,qBAHuB,IAGjD,IAAK,EAAL,qBAA+C,KAApCC,EAAoC,QACvCwB,EAA+Bl6B,QACrCu3B,GACE2C,EACAxB,EAAOrD,gBAAgB56B,QAGzB,IAAM0/B,EAA+Bn6B,QACrCu3B,GACE4C,EACAzB,EAAOnD,gBAAgB96B,QA+BzBs/B,GA5BiCjH,GAAAA,GAM9B,CACDp4B,GAAiB,cACjBo4B,GAAAA,GACEoH,EAA6Bz/B,OAC7B,gCAEFq4B,GAAAA,GACEA,GAAAA,KACA4F,EAAOrD,gBAAgB56B,OACvB,mBAEFq4B,GAAAA,GACEqH,EAA6B1/B,OAC7B,gCAEFq4B,GAAAA,GACEA,GAAAA,KACA4F,EAAOnD,gBAAgB96B,OACvB,qBAIyC+B,OAC3C,CACEi5B,WAAYiD,EAAOjD,WAAWlvB,UAC9B2zB,6BAA8B,IAAIhgC,WAChCggC,GAEF7E,gBAAiBqD,EAAOrD,gBACxB8E,6BAA8B,IAAIjgC,WAChCigC,GAEF5E,gBAAiBmD,EAAOnD,iBAE1B+D,EACAS,EAEH,CA3DgD,+BA6DjD,OAAOT,EAA8Bx1B,MAAM,EAAGi2B,EAC/C,0BA7Oa,SAACzD,GACb,IAD6C,EACvC8D,EAAepG,GAAakE,QAAQ5B,EAAKlE,aAAckE,EAAK6B,UAE5DM,EAAsB,IAAIz4B,MAC1B4xB,EAAiD,CACrDE,SAAU,IAAI9xB,MACd+xB,SAAU,IAAI/xB,OAEVq6B,EAAsB/D,EAAKsC,4BAA8B,GARlB,UASnByB,GATmB,IAS7C,IAAK,EAAL,qBAA+C,KAApCrF,EAAoC,QACvCsF,EAAgBF,EAAarF,mBAAmBC,GACtD,QAAsB70B,IAAlBm6B,EAA6B,SAC/B,UAAmDA,EAAnD,GAAOC,EAAP,YAA4BzI,EAA5B,EAA4BA,SAAUC,EAAtC,EAAsCA,SACtC0G,EAAoBh5B,KAAK86B,IACzB3I,EAAAA,EAAuBE,UAASryB,KAAhCmyB,MAAAA,GAAAA,EAAAA,EAAAA,GAAwCE,KACxCF,EAAAA,EAAuBG,UAAStyB,KAAhCmyB,MAAAA,GAAAA,EAAAA,EAAAA,GAAwCG,GACzC,CACF,CAjB4C,+BAmB7C,MAAoCqI,EAAajG,uBAAjD,eAAOvK,EAAP,KAAe+H,EAAf,KAKM6G,EAJc,IAAI9G,GACtBC,EACAC,GAEuCO,oBACvCmE,EAAKlE,cAEP,OAAO,IAAImG,EAAU,CACnB3O,OAAAA,EACA+H,kBAAAA,EACA6E,gBAAiBF,EAAKE,gBACtBgC,qBAAAA,EACAC,oBAAAA,GAEH,4BA6MiB,SAACiB,GACjB,IAAItB,GAAY,OAAIsB,GAEd7d,EAASuc,EAAUv3B,QACnB25B,ETpayB,ISoaV3e,EACrB7W,GACE6W,IAAW2e,EADP,0DAMNx1B,GACc,IAFEw1B,EACV,sEADUA,IAchB,IARA,IAAM5Q,EAAwB,CAC5BgL,sBAAuBwD,EAAUv3B,QACjCg0B,0BAA2BuD,EAAUv3B,QACrCi0B,4BAA6BsD,EAAUv3B,SAGnC8wB,EAAoB,GACpBiI,EAA0BrC,GAAsBa,GAC7C54B,EAAI,EAAGA,EAAIo6B,EAAyBp6B,IAC3CmyB,EAAkBlyB,KAChB,IAAIkwB,GAAUyI,EAAUqC,OAAO,EAAGhL,MAQtC,IAJA,IAAM+G,EAAkBzG,KAAAA,OAAYqI,EAAUqC,OAAO,EAAGhL,KAElDmI,EAAmBL,GAAsBa,GACzCI,EAAqD,GAClDh5B,EAAI,EAAGA,EAAIo4B,EAAkBp4B,IAAK,CACzC,IAAMkzB,EAAiB0F,EAAUv3B,QAC3B65B,EAA0BnD,GAAsBa,GAChDzF,EAAoByF,EAAUqC,OAAO,EAAGC,GACxC/C,EAAaJ,GAAsBa,GACnC5xB,EAAO,IAAItM,WAAWk+B,EAAUqC,OAAO,EAAG9C,IAChDa,EAAqB/4B,KAAK,CACxBizB,eAAAA,EACAC,kBAAAA,EACAnsB,KAAAA,GAEH,CAID,IAFA,IAAMm0B,EAA2BpD,GAAsBa,GACjDK,EAAmD,GAChDj5B,EAAI,EAAGA,EAAIm7B,EAA0Bn7B,IAAK,CACjD,IAAMi2B,EAAa,IAAI9F,GAAUyI,EAAUqC,OAAO,EAAGhL,KAC/CmL,EAAwBrD,GAAsBa,GAC9C/C,EAAkB+C,EAAUqC,OAAO,EAAGG,GACtCC,EAAwBtD,GAAsBa,GAC9C7C,EAAkB6C,EAAUqC,OAAO,EAAGI,GAC5CpC,EAAoBh5B,KAAK,CACvBg2B,WAAAA,EACAJ,gBAAAA,EACAE,gBAAAA,GAEH,CAED,OAAO,IAAIgD,EAAU,CACnB3O,OAAAA,EACA+H,kBAAAA,EACA6E,gBAAAA,EACAgC,qBAAAA,EACAC,oBAAAA,GAEH,OA5bUF,aH9BKxE,GAAAA,EAAAA,EAAAA,qBAAAA,GAAAA,uBAAAA,EAAAA,EAAAA,UAAAA,GAAAA,YAAAA,EAAAA,EAAAA,UAAAA,GAAAA,WAAAA,EAAAA,KAAAA,GAAAA,CAAAA,IASlB,IAAM+G,GAAoB3L,EAAAA,GAAAA,MNlBe,IMkByBjnB,KAAK,GAiD1D6yB,GAAAA,WAiBX3/B,SAAAA,EAAY+pB,IAAwC,oBAZpD7C,UAYoD,OAPpDiO,eAOoD,OAFpD/pB,KAAe2oB,EAAAA,GAAAA,MAAa,GAG1BtoB,KAAK0pB,UAAYpL,EAAKoL,UACtB1pB,KAAKyb,KAAO6C,EAAK7C,KACb6C,EAAK3e,OACPK,KAAKL,KAAO2e,EAAK3e,KAEpB,sCAKD2pB,WACE,MAAO,CACL7N,KAAMzb,KAAKyb,KAAK9W,KAAI,gBAAEqnB,EAAF,EAAEA,OAAQ0B,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,WAApB,MAAqC,CACvD3B,OAAQA,EAAO1C,SACfoE,SAAAA,EACAC,WAAAA,EAHkB,IAKpBjE,UAAW1pB,KAAK0pB,UAAUJ,SAC1B3pB,MAAM,OAAIK,KAAKL,MAElB,OAtCUu0B,GA6GAC,GAAAA,WAiEX5/B,SAAAA,EACE+pB,GAEA,IADA,oBA9DF8V,WAAyC,GA8DvC,KA/CFC,cA+CE,OA1CF9I,aAA8C,GA0C5C,KArCFoE,qBAqCE,OAhCF2E,0BAgCE,OA1BFC,eA0BE,OArBFC,cAqBE,OAhBFC,WAgBE,EACKnW,EASL,GANIA,EAAK+V,WACPr0B,KAAKq0B,SAAW/V,EAAK+V,UAEnB/V,EAAK8V,aACPp0B,KAAKo0B,WAAa9V,EAAK8V,YAErB//B,OAAOG,UAAU0G,eAAeC,KAAKmjB,EAAM,wBAAyB,CACtE,IAAOoW,EACLpW,EADKoW,UAAWJ,EAChBhW,EADgBgW,qBAElBt0B,KAAK2vB,gBAAkB+E,EACvB10B,KAAKs0B,qBAAuBA,CAJ9B,KAKO,CACL,IAAO3E,EACLrR,EADKqR,gBAAiB4E,EACtBjW,EADsBiW,UAEpBA,IACFv0B,KAAKu0B,UAAYA,GAEnBv0B,KAAK2vB,gBAAkBA,CACxB,CACF,uCAhFY,WACX,OAAI3vB,KAAKo0B,WAAWxgC,OAAS,EACpBoM,KAAKo0B,WAAW,GAAGhR,UAErB,IACR,uBAgFDkG,WACE,MAAO,CACLqG,gBAAiB3vB,KAAK2vB,iBAAmB,KACzC0E,SAAUr0B,KAAKq0B,SAAWr0B,KAAKq0B,SAAS/K,SAAW,KACnDiL,UAAWv0B,KAAKu0B,UACZ,CACExK,MAAO/pB,KAAKu0B,UAAUxK,MACtB4K,iBAAkB30B,KAAKu0B,UAAUI,iBAAiBrL,UAEpD,KACJiC,aAAcvrB,KAAKurB,aAAa5mB,KAAIinB,SAAAA,GAAW,OAAIA,EAAYtC,QAAhB,IAC/CsL,QAAS50B,KAAKo0B,WAAWzvB,KAAI,YAC3B,OAD4C,EAAf4Q,UACZ+T,QADV,IAIZ,oBAKD3lB,WAIe,kCAHVkxB,EAGU,yBAHVA,EAGU,gBACb,GAAqB,IAAjBA,EAAMjhC,OACR,MAAM,IAAImB,MAAM,mBAYlB,OATA8/B,EAAM5yB,SAAS0qB,SAAAA,GACT,iBAAkBA,EACpB,EAAKpB,aAAe,EAAKA,aAAatB,OAAO0C,EAAKpB,cACzC,SAAUoB,GAAQ,cAAeA,GAAQ,SAAUA,EAC5D,EAAKpB,aAAa3yB,KAAK+zB,GAEvB,EAAKpB,aAAa3yB,KAAK,IAAIs7B,GAAuBvH,GANtD,IASO3sB,IACR,+BAKD80B,WACE,GACE90B,KAAKw0B,UACL9b,KAAKC,UAAU3Y,KAAKspB,YAAc5Q,KAAKC,UAAU3Y,KAAKy0B,OAEtD,OAAOz0B,KAAKw0B,SAGd,IAAI7E,EACApE,EAoBA8I,EARJ,GAXIr0B,KAAKu0B,WACP5E,EAAkB3vB,KAAKu0B,UAAUxK,MAE/BwB,EADEvrB,KAAKurB,aAAa,IAAMvrB,KAAKu0B,UAAUI,iBAC1B,CAAC30B,KAAKu0B,UAAUI,kBAAnB,eAAwC30B,KAAKurB,eAE1CvrB,KAAKurB,eAGtBoE,EAAkB3vB,KAAK2vB,gBACvBpE,EAAevrB,KAAKurB,eAEjBoE,EACH,MAAM,IAAI56B,MAAM,wCAQlB,GALIw2B,EAAa33B,OAAS,GACxBmhC,QAAQC,KAAK,4BAIXh1B,KAAKq0B,SACPA,EAAWr0B,KAAKq0B,aACX,MAAIr0B,KAAKo0B,WAAWxgC,OAAS,GAAKoM,KAAKo0B,WAAW,GAAG7e,WAI1D,MAAM,IAAIxgB,MAAM,kCAFhBs/B,EAAWr0B,KAAKo0B,WAAW,GAAG7e,SAG/B,CAED,IAAK,IAAI5c,EAAI,EAAGA,EAAI4yB,EAAa33B,OAAQ+E,IACvC,QAAkCW,IAA9BiyB,EAAa5yB,GAAG+wB,UAClB,MAAM,IAAI30B,MAAJ,wCAC6B4D,EAD7B,8BAMV,IAAM03B,EAAuB,GACvB4E,EAA8B,GACpC1J,EAAatpB,SAAQ2pB,SAAAA,GACnBA,EAAYnQ,KAAKxZ,SAAQstB,SAAAA,GACvB0F,EAAar8B,MAAbq8B,EAAAA,EAAAA,GAAAA,CAAAA,EAAsB1F,GADxB,IAIA,IAAM7F,EAAYkC,EAAYlC,UAAUtsB,WACnCizB,EAAWnyB,SAASwrB,IACvB2G,EAAWz3B,KAAK8wB,EAPpB,IAYA2G,EAAWpuB,SAAQynB,SAAAA,GACjBuL,EAAar8B,KAAK,CAChBozB,OAAQ,IAAIlD,GAAUY,GACtBgE,UAAU,EACVC,YAAY,GAJhB,IASA,IAAMuH,EAA6B,GACnCD,EAAahzB,SAAQstB,SAAAA,GACnB,IAAM4F,EAAe5F,EAAYvD,OAAO5uB,WAClCg4B,EAAcF,EAAYhG,WAAU/mB,SAAAA,GACxC,OAAOA,EAAE6jB,OAAO5uB,aAAe+3B,CADb,IAGhBC,GAAe,GACjBF,EAAYE,GAAazH,WACvBuH,EAAYE,GAAazH,YAAc4B,EAAY5B,WACrDuH,EAAYE,GAAa1H,SACvBwH,EAAYE,GAAa1H,UAAY6B,EAAY7B,UAEnDwH,EAAYt8B,KAAK22B,EAXrB,IAgBA2F,EAAYG,MAAK,SAAUltB,EAAGC,GAC5B,OAAID,EAAEulB,WAAatlB,EAAEslB,SAEZvlB,EAAEulB,UAAY,EAAI,EAEvBvlB,EAAEwlB,aAAevlB,EAAEulB,WAEdxlB,EAAEwlB,YAAc,EAAI,EAGtBxlB,EAAE6jB,OAAO3C,WAAWiM,cAAcltB,EAAE4jB,OAAO3C,WAVpD,IAcA,IAAMkM,EAAgBL,EAAYhG,WAAU/mB,SAAAA,GAC1C,OAAOA,EAAE6jB,OAAOrhB,OAAO0pB,EADH,IAGtB,GAAIkB,GAAiB,EAAG,CACtB,MAAoBL,EAAYtB,OAAO2B,EAAe,GAA/CC,GAAP,eACAA,EAAU9H,UAAW,EACrB8H,EAAU7H,YAAa,EACvBuH,EAAYO,QAAQD,EAJtB,MAMEN,EAAYO,QAAQ,CAClBzJ,OAAQqI,EACR3G,UAAU,EACVC,YAAY,IAjHQ,gBAsHA3tB,KAAKo0B,YAtHL,yBAsHbhR,EAtHa,QAuHhBgS,EAAcF,EAAYhG,WAAU/mB,SAAAA,GACxC,OAAOA,EAAE6jB,OAAOrhB,OAAOyY,EAAU7N,UADf,IAGpB,KAAI6f,GAAe,GAUjB,MAAM,IAAIrgC,MAAJ,0BAA6BquB,EAAU7N,UAAUnY,aATlD83B,EAAYE,GAAa1H,WAC5BwH,EAAYE,GAAa1H,UAAW,EACpCqH,QAAQC,KACN,gOA9HgB,EAsHxB,IAAK,EAAL,qBAAyC,GAtHjB,+BAwIxB,IAAIjH,EAAwB,EACxBC,EAA4B,EAC5BC,EAA8B,EAG5ByH,EAAuB,GACvBC,EAAyB,GAC/BT,EAAYjzB,SAAQ,YAAoC,IAAlC+pB,EAAkC,EAAlCA,OAAQ0B,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,WAClCD,GACFgI,EAAW98B,KAAKozB,EAAO5uB,YACvB2wB,GAAyB,EACpBJ,IACHK,GAA6B,KAG/B2H,EAAa/8B,KAAKozB,EAAO5uB,YACpBuwB,IACHM,GAA+B,GAVrC,IAeA,IAAMyB,EAAcgG,EAAWzL,OAAO0L,GAChChE,EAA8CpG,EAAa5mB,KAC/DinB,SAAAA,GACE,IAAOjsB,EAAmBisB,EAAnBjsB,KAAM+pB,EAAakC,EAAblC,UACb,MAAO,CACLmC,eAAgB6D,EAAYkG,QAAQlM,EAAUtsB,YAC9C0yB,SAAUlE,EAAYnQ,KAAK9W,KAAIonB,SAAAA,GAAI,OACjC2D,EAAYkG,QAAQ7J,EAAKC,OAAO5uB,WADC,IAGnCuC,KAAMupB,KAAAA,OAAYvpB,GAR4B,IAkBpD,OALAgyB,EAAqB1vB,SAAQ2pB,SAAAA,GAC3BiK,GAAUjK,EAAYC,gBAAkB,GACxCD,EAAYkE,SAAS7tB,SAAQ0pB,SAAAA,GAAQ,OAAIkK,GAAUlK,GAAY,EAA1B,GAFvC,IAKO,IAAI6D,GAAQ,CACjBzM,OAAQ,CACNgL,sBAAAA,EACAC,0BAAAA,EACAC,4BAAAA,GAEFyB,YAAAA,EACAC,gBAAAA,EACApE,aAAcoG,GAEjB,yBAKDmE,WACE,IAAMz1B,EAAUL,KAAK80B,iBACfY,EAAar1B,EAAQqvB,YAAYzyB,MACrC,EACAoD,EAAQ0iB,OAAOgL,uBAGjB,GAAI/tB,KAAKo0B,WAAWxgC,SAAW8hC,EAAW9hC,QAC1BoM,KAAKo0B,WAAW3iB,OAAM,SAACskB,EAAM5K,GACzC,OAAOuK,EAAWvK,GAAOxgB,OAAOorB,EAAKxgB,UADzB,IAIH,OAAOlV,EAQpB,OALAL,KAAKo0B,WAAasB,EAAW/wB,KAAI4Q,SAAAA,GAAS,MAAK,CAC7C6N,UAAW,KACX7N,UAAAA,EAFwC,IAKnClV,CACR,iCAKD21B,WACE,OAAOh2B,KAAK81B,WAAWtN,WACxB,yEAKoB,WAACyN,GAAD,sFACLA,EAAWC,iBAAiBl2B,KAAK80B,kBAD5B,uCAC+C74B,OAD/C,+HAcrBk6B,WAAyC,2BAA3BvB,EAA2B,yBAA3BA,EAA2B,gBACvC,GAAuB,IAAnBA,EAAQhhC,OACV,MAAM,IAAImB,MAAM,cAGlB,IAAMqhC,EAAO,IAAIpc,IACjBha,KAAKo0B,WAAaQ,EACfnH,QAAOlY,SAAAA,GACN,IAAMX,EAAMW,EAAUnY,WACtB,OAAIg5B,EAAKhG,IAAIxb,KAGXwhB,EAAKzyB,IAAIiR,IACF,EAPK,IAUfjQ,KAAI4Q,SAAAA,GAAS,MAAK,CAAC6N,UAAW,KAAM7N,UAAAA,EAAvB,GACjB,qBAgBDS,WAAgC,2BAAxB4e,EAAwB,yBAAxBA,EAAwB,gBAC9B,GAAuB,IAAnBA,EAAQhhC,OACV,MAAM,IAAImB,MAAM,cAMlB,IAFA,IAAMqhC,EAAO,IAAIpc,IACXqc,EAAgB,GACtB,MAAqBzB,EAArB,eAA8B,CAAzB,IAAM0B,EAAX,KACQ1hB,EAAM0hB,EAAO/gB,UAAUnY,WACzBg5B,EAAKhG,IAAIxb,KAGXwhB,EAAKzyB,IAAIiR,GACTyhB,EAAcz9B,KAAK09B,GAEtB,CAEDt2B,KAAKo0B,WAAaiC,EAAc1xB,KAAI2xB,SAAAA,GAAM,MAAK,CAC7ClT,UAAW,KACX7N,UAAW+gB,EAAO/gB,UAFsB,IAK1C,IAAMlV,EAAUL,KAAK81B,WACrB91B,KAAKu2B,aAAL,MAAAv2B,KAAA,CAAkBK,GAAlB,OAA8Bg2B,GAC/B,4BASDG,WAAuC,2BAAxB5B,EAAwB,yBAAxBA,EAAwB,gBACrC,GAAuB,IAAnBA,EAAQhhC,OACV,MAAM,IAAImB,MAAM,cAMlB,IAFA,IAAMqhC,EAAO,IAAIpc,IACXqc,EAAgB,GACtB,MAAqBzB,EAArB,eAA8B,CAAzB,IAAM0B,EAAX,KACQ1hB,EAAM0hB,EAAO/gB,UAAUnY,WACzBg5B,EAAKhG,IAAIxb,KAGXwhB,EAAKzyB,IAAIiR,GACTyhB,EAAcz9B,KAAK09B,GAEtB,CAED,IAAMj2B,EAAUL,KAAK81B,WACrB91B,KAAKu2B,aAAL,MAAAv2B,KAAA,CAAkBK,GAAlB,OAA8Bg2B,GAC/B,6BAKDE,SAAal2B,GAA6C,eAClD+wB,EAAW/wB,EAAQmoB,YAD+B,mBAAxBoM,EAAwB,iCAAxBA,EAAwB,kBAExDA,EAAQ3yB,SAAQq0B,SAAAA,GACd,IAAMlT,EAAYpN,GAAKob,EAAUkF,EAAOnO,WACxC,EAAKsO,cAAcH,EAAO/gB,UAAW8S,GAASjF,GAFhD,GAID,6BAODsT,SAAa1K,EAAmB5I,GAC9BpjB,KAAK81B,WACL91B,KAAKy2B,cAAczK,EAAQ5I,EAC5B,8BAKDqT,SAAczK,EAAmB5I,GAC/ByS,GAA+B,KAArBzS,EAAUxvB,QAEpB,IAAMu3B,EAAQnrB,KAAKo0B,WAAWlF,WAAUyH,SAAAA,GAAO,OAC7C3K,EAAOrhB,OAAOgsB,EAAQphB,UADuB,IAG/C,GAAI4V,EAAQ,EACV,MAAM,IAAIp2B,MAAJ,0BAA6Bi3B,EAAO5uB,aAG5C4C,KAAKo0B,WAAWjJ,GAAO/H,UAAYkF,EAAAA,GAAAA,KAAYlF,EAChD,iCAKDwT,WACE,OAAO52B,KAAK62B,kBAAkB72B,KAAKg2B,oBAAoB,EACxD,kCAKDa,SAAkBzF,EAAkB0F,GAAwC,gBACrC92B,KAAKo0B,YADgC,IAC1E,IAAK,EAAL,qBAAsD,eAA1ChR,EAA0C,EAA1CA,UAAW7N,EAA+B,EAA/BA,UACrB,GAAkB,OAAd6N,GACF,GAAI0T,EACF,OAAO,OAGT,IAAK5gB,GAAOkN,EAAWgO,EAAU7b,EAAU8S,YACzC,OAAO,CAGZ,CAXyE,+BAY1E,OAAO,CACR,0BAKDG,SAAUuO,GACR,MAAiD1iC,OAAOI,OACtD,CAACqiC,sBAAsB,EAAMF,kBAAkB,GAC/CG,GAFKD,EAAP,EAAOA,qBAAsBF,EAA7B,EAA6BA,iBAKvBxF,EAAWpxB,KAAKg2B,mBACtB,GACEY,IACC52B,KAAK62B,kBAAkBzF,EAAU0F,GAElC,MAAM,IAAI/hC,MAAM,iCAGlB,OAAOiL,KAAKg3B,WAAW5F,EACxB,2BAKD4F,SAAW5F,GACT,IAAOgD,EAAcp0B,KAAdo0B,WACD6C,EAA2B,GACjCvG,GAAsBuG,EAAgB7C,EAAWxgC,QACjD,IAAMsjC,EACJD,EAAerjC,OAA6B,GAApBwgC,EAAWxgC,OAAcw9B,EAASx9B,OACtDujC,EAAkB7O,EAAAA,GAAAA,MAAa4O,GAoBrC,OAnBArB,GAAUzB,EAAWxgC,OAAS,KAC9B00B,EAAAA,GAAAA,KAAY2O,GAAgBz5B,KAAK25B,EAAiB,GAClD/C,EAAWnyB,SAAQ,WAAckpB,GAAU,IAAtB/H,EAAsB,EAAtBA,UACD,OAAdA,IACFyS,GAA+B,KAArBzS,EAAUxvB,OAAX,gCACT00B,EAAAA,GAAAA,KAAYlF,GAAW5lB,KACrB25B,EACAF,EAAerjC,OAAiB,GAARu3B,GAL9B,IASAiG,EAAS5zB,KACP25B,EACAF,EAAerjC,OAA6B,GAApBwgC,EAAWxgC,QAErCiiC,GACEsB,EAAgBvjC,QAAU22B,GADnB,iCAEmB4M,EAAgBvjC,OAFnC,cAE+C22B,KAEjD4M,CACR,mBAMO,WAEN,OADAtB,GAAuC,IAA7B71B,KAAKurB,aAAa33B,QACrBoM,KAAKurB,aAAa,GAAG9P,KAAK9W,KAAIyyB,SAAAA,GAAM,OAAIA,EAAOpL,MAAX,GAC5C,wBAMY,WAEX,OADA6J,GAAuC,IAA7B71B,KAAKurB,aAAa33B,QACrBoM,KAAKurB,aAAa,GAAG7B,SAC7B,mBAMO,WAEN,OADAmM,GAAuC,IAA7B71B,KAAKurB,aAAa33B,QACrBoM,KAAKurB,aAAa,GAAG5rB,IAC7B,uBAKU,SAACjM,GAMV,IAJA,IAAI69B,GAAY,OAAI79B,GAEdujC,EAAiBvG,GAAsBa,GACzC6C,EAAa,GACRz7B,EAAI,EAAGA,EAAIs+B,EAAgBt+B,IAAK,CACvC,IAAMyqB,EAAYmO,EAAUt0B,MAAM,EN1xBC,IM2xBnCs0B,EAAYA,EAAUt0B,MN3xBa,IM4xBnCm3B,EAAWx7B,KAAKswB,KAAAA,OAAYZ,EAAAA,GAAAA,KAAYlF,IACzC,CAED,OAAO+Q,EAAYkD,SAAS7H,GAAQ/7B,KAAK89B,GAAY6C,EACtD,yBAKc,SACb/zB,GAEa,IADb+zB,EACa,uDADe,GAEtBjD,EAAc,IAAIgD,EAyCxB,OAxCAhD,EAAYxB,gBAAkBtvB,EAAQsvB,gBAClCtvB,EAAQ0iB,OAAOgL,sBAAwB,IACzCoD,EAAYkD,SAAWh0B,EAAQqvB,YAAY,IAE7C0E,EAAWnyB,SAAQ,SAACmhB,EAAW+H,GAC7B,IAAMmM,EAAgB,CACpBlU,UACEA,GAAa8F,KAAAA,OAAY+K,IACrB,KACA/K,KAAAA,OAAY9F,GAClB7N,UAAWlV,EAAQqvB,YAAYvE,IAEjCgG,EAAYiD,WAAWx7B,KAAK0+B,EAR9B,IAWAj3B,EAAQkrB,aAAatpB,SAAQ2pB,SAAAA,GAC3B,IAAMnQ,EAAOmQ,EAAYkE,SAASnrB,KAAIkrB,SAAAA,GACpC,IAAM7D,EAAS3rB,EAAQqvB,YAAYG,GACnC,MAAO,CACL7D,OAAAA,EACA0B,SACEyD,EAAYiD,WAAWmD,MACrBH,SAAAA,GAAM,OAAIA,EAAO7hB,UAAUnY,aAAe4uB,EAAO5uB,UAA3C,KACHiD,EAAQ2vB,gBAAgBH,GAC/BlC,WAAYttB,EAAQ4vB,kBAAkBJ,GAR7B,IAYbsB,EAAY5F,aAAa3yB,KACvB,IAAIs7B,GAAuB,CACzBzY,KAAAA,EACAiO,UAAWrpB,EAAQqvB,YAAY9D,EAAYC,gBAC3ClsB,KAAMupB,KAAAA,OAAY0C,EAAYjsB,QAjBpC,IAsBAwxB,EAAYqD,SAAWn0B,EACvB8wB,EAAYsD,MAAQtD,EAAY7H,SAEzB6H,CACR,OAnqBUgD,GIzLAqD,GAAsB,IAAI1O,GACrC,+CAWW2O,IAR+B,IAAI3O,GAC9C,+CAGwC,IAAIA,GAC5C,+CAG8C,IAAIA,GAClD,gDAGW4O,GAAqB,IAAI5O,GACpC,+CAeW6O,IAZwB,IAAI7O,GACvC,+CAGuC,IAAIA,GAC3C,+CAGwC,IAAIA,GAC5C,+CAGyC,IAAIA,GAC7C,yDClBoB8O,GAA0B,EAA1BA,EAAAA,EAAAA,mFAAf,WACL3B,EACA9E,EACAyD,EACAtb,GAJK,uFAMCue,EAAcve,GAAW,CAC7Bwe,cAAexe,EAAQwe,cACvBC,oBAAqBze,EAAQye,qBAAuBze,EAAQ0e,WAC5DC,WAAY3e,EAAQ2e,WACpBC,eAAgB5e,EAAQ4e,gBAVrB,SAamBjC,EAAWkC,gBACjChH,EACAyD,EACAiD,GAhBG,UAaCzU,EAbD,OAoB4B,MAA/B+N,EAAYxB,iBACwB,MAApCwB,EAAYmD,qBArBT,iCAuBS2B,EAAWmC,mBACf,CACEhV,UAAWA,EACXsR,UAAWvD,EAAYxB,gBACvB2E,qBAAsBnD,EAAYmD,sBAEpChb,GAAWA,EAAQ0e,YA7BxB,mBA+BG/7B,MA/BH,yCAiCSg6B,EAAWmC,mBACfhV,EACA9J,GAAWA,EAAQ0e,YAnCxB,oBAqCG/7B,MArCH,aAmBCo8B,EAnBD,MAuCMnO,IAvCN,uBAwCG,IAAIn1B,MAAJ,sBACWquB,EADX,oBACgC1K,KAAKC,UAAU0f,GAD/C,MAxCH,iCA6CEjV,GA7CF,qEChBA,SAASkV,GAAMC,GACpB,OAAO,IAAIC,SAAQC,SAAAA,GAAO,OAAIC,WAAWD,EAASF,EAAxB,GAC3B,CCoBM,SAASI,GACdvf,EACAngB,GAEA,IAAM2/B,EACJxf,EAAK7jB,OAAOzB,MAAQ,EAAIslB,EAAK7jB,OAAOzB,KAAOD,GAAgBulB,EAAMngB,GAC7D0G,EAAO2oB,EAAAA,GAAAA,MAAasQ,GACpBC,EAAexkC,OAAOI,OAAO,CAACm3B,YAAaxS,EAAK+R,OAAQlyB,GAE9D,OADAmgB,EAAK7jB,OAAOI,OAAOkjC,EAAcl5B,GAC1BA,CACR,CC1BM,ICSJ/L,GDTUklC,GAAsB7M,GAAAA,GAAkB,wBEQ/C8M,GAAqB9M,GAAAA,GAUzB,CACAA,GAAAA,GAAiB,WACjBA,GAAAA,GAAiB,SACjBp4B,GAAiB,oBACjBA,GAAiB,SACjBo4B,GAAAA,GACE,CAAC6M,IACD,mBAISE,GAAuBD,GAAmBjlC,KAW1CmlC,GAAAA,WAQX1kC,SAAAA,EAAYk7B,IAAwB,oBAPpCyJ,sBAOoC,OANpCnP,WAMoC,OALpCoP,mBAKoC,EAClCn5B,KAAKk5B,iBAAmBzJ,EAAKyJ,iBAC7Bl5B,KAAK+pB,MAAQ0F,EAAK1F,MAClB/pB,KAAKm5B,cAAgB1J,EAAK0J,aAC3B,oDAQqB,SACpBzlC,GAEA,IAAM0lC,EAAeL,GAAmBrjC,OAAO2yB,GAAS30B,GAAS,GACjE,OAAO,IAAIulC,EAAa,CACtBC,iBAAkB,IAAIpQ,GAAUsQ,EAAaF,kBAC7CnP,MAAO,IAAIjB,GAAUsQ,EAAarP,OAAO3sB,WACzC+7B,cAAeC,EAAaD,eAE/B,OA7BUF,GDXAx2B,IApBV7O,GAoBuB,EAnBvBG,SAAAA,GACC,IAAMwB,GAAS8jC,EAAAA,GAAAA,IAAKzlC,GAAQG,GAC5B,EAVqBwB,SAAAA,GAGvB,MAAO,CAACG,OAFOH,EAAOG,OAAOkF,KAAKrF,GAElBI,OADDJ,EAAOI,OAAOiF,KAAKrF,GAFpC,CAU6B+jC,CAAa/jC,GAA/BI,EAAP,EAAOA,OAAQD,EAAf,EAAeA,OAET6jC,EAAehkC,EAYrB,OAVAgkC,EAAa7jC,OAAS,SAAChC,EAAgBQ,GACrC,IAAMmB,EAAMK,EAAOhC,EAAQQ,GAC3B,OAAOslC,EAAAA,GAAAA,IAAWlR,EAAAA,GAAAA,KAAYjzB,GAFhC,EAKAkkC,EAAa5jC,OAAS,SAAC8jC,EAAgB/lC,EAAgBQ,GACrD,IAAMmB,GAAMqkC,EAAAA,GAAAA,IAAWD,EAAQ7lC,IAC/B,OAAO+B,EAAON,EAAK3B,EAAQQ,EAF7B,EAKOqlC,CAlBX,GEmmBaI,GAA6BtlC,OAAOiT,OAI9C,CACDsyB,OAAQ,CACNzO,MAAO,EACP51B,OAAQ02B,GAAAA,GAA0D,CAChEA,GAAAA,GAAiB,eACjBA,GAAAA,GAAkB,YAClBA,GAAAA,GAAkB,SAClBp4B,GAAiB,gBAGrBgmC,OAAQ,CACN1O,MAAO,EACP51B,OAAQ02B,GAAAA,GAA0D,CAChEA,GAAAA,GAAiB,eACjBp4B,GAAiB,gBAGrBimC,SAAU,CACR3O,MAAO,EACP51B,OAAQ02B,GAAAA,GAA4D,CAClEA,GAAAA,GAAiB,eACjBxpB,GAAI,eAGRs3B,eAAgB,CACd5O,MAAO,EACP51B,OAAQ02B,GAAAA,GAAkE,CACxEA,GAAAA,GAAiB,eACjBp4B,GAAiB,QACjBA,GAAkB,QAClBo4B,GAAAA,GAAkB,YAClBA,GAAAA,GAAkB,SAClBp4B,GAAiB,gBAGrBmmC,oBAAqB,CACnB7O,MAAO,EACP51B,OAAQ02B,GAAAA,GAEN,CAACA,GAAAA,GAAiB,kBAEtBgO,qBAAsB,CACpB9O,MAAO,EACP51B,OAAQ02B,GAAAA,GAEN,CAACA,GAAAA,GAAiB,eAAgBA,GAAAA,GAAkB,eAExDiO,uBAAwB,CACtB/O,MAAO,EACP51B,OAAQ02B,GAAAA,GAEN,CAACA,GAAAA,GAAiB,eAAgBp4B,GAAiB,iBAEvDsmC,sBAAuB,CACrBhP,MAAO,EACP51B,OAAQ02B,GAAAA,GAEN,CAACA,GAAAA,GAAiB,eAAgBp4B,GAAiB,iBAEvDumC,SAAU,CACRjP,MAAO,EACP51B,OAAQ02B,GAAAA,GAA4D,CAClEA,GAAAA,GAAiB,eACjBA,GAAAA,GAAkB,YAGtBoO,iBAAkB,CAChBlP,MAAO,EACP51B,OAAQ02B,GAAAA,GACN,CACEA,GAAAA,GAAiB,eACjBp4B,GAAiB,QACjBA,GAAkB,QAClBo4B,GAAAA,GAAkB,SAClBp4B,GAAiB,gBAIvBymC,eAAgB,CACdnP,MAAO,GACP51B,OAAQ02B,GAAAA,GAAkE,CACxEA,GAAAA,GAAiB,eACjBp4B,GAAiB,QACjBA,GAAkB,QAClBA,GAAiB,gBAGrB0mC,iBAAkB,CAChBpP,MAAO,GACP51B,OAAQ02B,GAAAA,GACN,CACEA,GAAAA,GAAiB,eACjBxpB,GAAI,YACJ5O,GAAkB,QAClBA,GAAiB,gBAIvB2mC,oBAAqB,CACnBrP,MAAO,GACP51B,OAAQ02B,GAAAA,GAEN,CAACA,GAAAA,GAAiB,oBAOXwO,GAAAA,WAIXlmC,SAAAA,KAAc,cAAE,kDAYI,SAACmmC,GACnB,IACM/6B,EAAOg5B,GADAgB,GAA2BC,OACV,CAC5Be,SAAUD,EAAOC,SACjBC,MAAOF,EAAOE,MACdlR,UAAWrB,GAASqS,EAAOhR,UAAUrB,cAGvC,OAAO,IAAI6L,GAAuB,CAChCzY,KAAM,CACJ,CAACuQ,OAAQ0O,EAAOG,WAAYnN,UAAU,EAAMC,YAAY,GACxD,CAAC3B,OAAQ0O,EAAOI,iBAAkBpN,UAAU,EAAMC,YAAY,IAEhEjE,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEH,yBAKc,SACb+6B,GAEA,IAAI/6B,EACA8b,EACA,eAAgBif,GAElB/6B,EAAOg5B,GADMgB,GAA2BY,iBAChB,CACtBI,SAAUn5B,OAAOk5B,EAAOC,UACxBlV,KAAMiV,EAAOjV,KACbiE,UAAWrB,GAASqS,EAAOhR,UAAUrB,cAEvC5M,EAAO,CACL,CAACuQ,OAAQ0O,EAAOG,WAAYnN,UAAU,EAAOC,YAAY,GACzD,CAAC3B,OAAQ0O,EAAOK,WAAYrN,UAAU,EAAMC,YAAY,GACxD,CAAC3B,OAAQ0O,EAAOM,SAAUtN,UAAU,EAAOC,YAAY,MAIzDhuB,EAAOg5B,GADMgB,GAA2BG,SAChB,CAACa,SAAUn5B,OAAOk5B,EAAOC,YACjDlf,EAAO,CACL,CAACuQ,OAAQ0O,EAAOG,WAAYnN,UAAU,EAAMC,YAAY,GACxD,CAAC3B,OAAQ0O,EAAOM,SAAUtN,UAAU,EAAOC,YAAY,KAI3D,OAAO,IAAIuG,GAAuB,CAChCzY,KAAAA,EACAiO,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEH,uBAKY,SACX+6B,GAEA,IAAI/6B,EACA8b,EACA,eAAgBif,GAElB/6B,EAAOg5B,GADMgB,GAA2BW,eAChB,CACtB9vB,KAAM6d,GAASqS,EAAOK,WAAW1S,YACjC5C,KAAMiV,EAAOjV,KACbiE,UAAWrB,GAASqS,EAAOhR,UAAUrB,cAEvC5M,EAAO,CACL,CAACuQ,OAAQ0O,EAAOO,cAAevN,UAAU,EAAOC,YAAY,GAC5D,CAAC3B,OAAQ0O,EAAOK,WAAYrN,UAAU,EAAMC,YAAY,MAI1DhuB,EAAOg5B,GADMgB,GAA2BE,OAChB,CACtBnQ,UAAWrB,GAASqS,EAAOhR,UAAUrB,cAEvC5M,EAAO,CAAC,CAACuQ,OAAQ0O,EAAOO,cAAevN,UAAU,EAAMC,YAAY,KAGrE,OAAO,IAAIuG,GAAuB,CAChCzY,KAAAA,EACAiO,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEH,sCAM2B,SAC1B+6B,GAEA,IACM/6B,EAAOg5B,GADAgB,GAA2BI,eACV,CAC5BvvB,KAAM6d,GAASqS,EAAOK,WAAW1S,YACjC5C,KAAMiV,EAAOjV,KACbkV,SAAUD,EAAOC,SACjBC,MAAOF,EAAOE,MACdlR,UAAWrB,GAASqS,EAAOhR,UAAUrB,cAEnC5M,EAAO,CACT,CAACuQ,OAAQ0O,EAAOG,WAAYnN,UAAU,EAAMC,YAAY,GACxD,CAAC3B,OAAQ0O,EAAOI,iBAAkBpN,UAAU,EAAOC,YAAY,IAMjE,OAJI+M,EAAOK,YAAcL,EAAOG,YAC9Bpf,EAAK7iB,KAAK,CAACozB,OAAQ0O,EAAOK,WAAYrN,UAAU,EAAMC,YAAY,IAG7D,IAAIuG,GAAuB,CAChCzY,KAAAA,EACAiO,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEH,mCAKwB,SACvB+6B,GAEA,IAAMvJ,EAAc,IAAIgD,GACpB,eAAgBuG,GAAU,SAAUA,EACtCvJ,EAAYxtB,IACV82B,EAAcS,sBAAsB,CAClCL,WAAYH,EAAOG,WACnBC,iBAAkBJ,EAAOS,YACzBJ,WAAYL,EAAOK,WACnBtV,KAAMiV,EAAOjV,KACbkV,SAAUD,EAAOC,SACjBC,MAAO5B,GACPtP,UAAW1pB,KAAK0pB,aAIpByH,EAAYxtB,IACV82B,EAAcW,cAAc,CAC1BP,WAAYH,EAAOG,WACnBC,iBAAkBJ,EAAOS,YACzBR,SAAUD,EAAOC,SACjBC,MAAO5B,GACPtP,UAAW1pB,KAAK0pB,aAKtB,IAAM2R,EAAa,CACjBF,YAAaT,EAAOS,YACpBjC,iBAAkBwB,EAAOxB,kBAI3B,OADA/H,EAAYxtB,IAAI3D,KAAKs7B,gBAAgBD,IAC9BlK,CACR,gCAKqB,SACpBuJ,GAEA,IACM/6B,EAAOg5B,GADAgB,GAA2BO,uBACV,CAC5BqB,WAAYlT,GAASqS,EAAOxB,iBAAiB7Q,cAEzCmT,EAAkB,CACtB/f,KAAM,CACJ,CAACuQ,OAAQ0O,EAAOS,YAAazN,UAAU,EAAOC,YAAY,GAC1D,CACE3B,OAAQyL,GACR/J,UAAU,EACVC,YAAY,GAEd,CAAC3B,OAAQ0L,GAAoBhK,UAAU,EAAOC,YAAY,IAE5DjE,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEF,OAAO,IAAIu0B,GAAuBsH,EACnC,6BAKkB,SAACd,GAClB,IACM/6B,EAAOg5B,GADAgB,GAA2BK,qBAElCwB,EAAkB,CACtB/f,KAAM,CACJ,CAACuQ,OAAQ0O,EAAOS,YAAazN,UAAU,EAAOC,YAAY,GAC1D,CACE3B,OAAQyL,GACR/J,UAAU,EACVC,YAAY,GAEd,CAAC3B,OAAQ0O,EAAOxB,iBAAkBxL,UAAU,EAAMC,YAAY,IAEhEjE,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEF,OAAO,IAAIu0B,GAAuBsH,EACnC,8BAKmB,SAACd,GACnB,IACM/6B,EAAOg5B,GADAgB,GAA2BM,qBACV,CAACU,SAAUD,EAAOC,WAEhD,OAAO,IAAIzG,GAAuB,CAChCzY,KAAM,CACJ,CAACuQ,OAAQ0O,EAAOS,YAAazN,UAAU,EAAOC,YAAY,GAC1D,CAAC3B,OAAQ0O,EAAOM,SAAUtN,UAAU,EAAOC,YAAY,GACvD,CACE3B,OAAQyL,GACR/J,UAAU,EACVC,YAAY,GAEd,CACE3B,OAAQ0L,GACRhK,UAAU,EACVC,YAAY,GAEd,CAAC3B,OAAQ0O,EAAOxB,iBAAkBxL,UAAU,EAAMC,YAAY,IAEhEjE,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEH,+BAMoB,SAAC+6B,GACpB,IACM/6B,EAAOg5B,GADAgB,GAA2BQ,sBACV,CAC5BoB,WAAYlT,GAASqS,EAAOe,oBAAoBpT,cAGlD,OAAO,IAAI6L,GAAuB,CAChCzY,KAAM,CACJ,CAACuQ,OAAQ0O,EAAOS,YAAazN,UAAU,EAAOC,YAAY,GAC1D,CAAC3B,OAAQ0O,EAAOxB,iBAAkBxL,UAAU,EAAMC,YAAY,IAEhEjE,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEH,yBAKc,SACb+6B,GAEA,IAAI/6B,EACA8b,EACA,eAAgBif,GAElB/6B,EAAOg5B,GADMgB,GAA2BU,iBAChB,CACtB7vB,KAAM6d,GAASqS,EAAOK,WAAW1S,YACjC5C,KAAMiV,EAAOjV,KACbmV,MAAOF,EAAOE,MACdlR,UAAWrB,GAASqS,EAAOhR,UAAUrB,cAEvC5M,EAAO,CACL,CAACuQ,OAAQ0O,EAAOO,cAAevN,UAAU,EAAOC,YAAY,GAC5D,CAAC3B,OAAQ0O,EAAOK,WAAYrN,UAAU,EAAMC,YAAY,MAI1DhuB,EAAOg5B,GADMgB,GAA2BS,SAChB,CACtBQ,MAAOF,EAAOE,QAEhBnf,EAAO,CAAC,CAACuQ,OAAQ0O,EAAOO,cAAevN,UAAU,EAAMC,YAAY,KAGrE,OAAO,IAAIuG,GAAuB,CAChCzY,KAAAA,EACAiO,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEH,OA/SU86B,GAAAA,GASJ/Q,UAAuB,IAAIZ,GAChC,oCC3tBJ,IAKa4S,GAAAA,WAIXnnC,SAAAA,KAAc,cAAE,wDAaU,SAACu8B,GACzB,OACE,GACC37B,KAAKwmC,KAAK7K,EAAa4K,EAAOE,WAC7B,EACA,EAEL,8DAYgB,WACf3F,EACA7I,EACAyO,EACAnS,EACA/pB,GALe,sHAQes2B,EAAW6F,kCACrCn8B,EAAK/L,QATM,cAQPmoC,EARO,gBAaa9F,EAAW+F,eACnCH,EAAQtmB,UACR,aAfW,UAaP0mB,EAbO,OAkBT9K,EAAkC,KAClB,OAAhB8K,EAnBS,qBAoBPA,EAAYC,WApBL,wBAqBTnH,QAAQva,MAAM,sDArBL,mBAsBF,GAtBE,QAyBPyhB,EAAYt8B,KAAK/L,SAAW+L,EAAK/L,SACnCu9B,EAAcA,GAAe,IAAIgD,IACrBxwB,IACV82B,GAAc0B,SAAS,CACrBlB,cAAeY,EAAQtmB,UACvBqlB,MAAOj7B,EAAK/L,UAKbqoC,EAAYG,MAAMzxB,OAAO+e,KAC5ByH,EAAcA,GAAe,IAAIgD,IACrBxwB,IACV82B,GAAchmC,OAAO,CACnBwmC,cAAeY,EAAQtmB,UACvBmU,UAAAA,KAKFuS,EAAYtB,SAAWoB,IACzB5K,EAAcA,GAAe,IAAIgD,IACrBxwB,IACV82B,GAAc4B,SAAS,CACrBxB,WAAYzN,EAAM7X,UAClBylB,SAAUa,EAAQtmB,UAClBolB,SAAUoB,EAAgBE,EAAYtB,YAnDjC,wBAwDXxJ,GAAc,IAAIgD,IAAcxwB,IAC9B82B,GAAcW,cAAc,CAC1BP,WAAYzN,EAAM7X,UAClBulB,iBAAkBe,EAAQtmB,UAC1BolB,SAAUoB,EAAgB,EAAIA,EAAgB,EAC9CnB,MAAOj7B,EAAK/L,OACZ81B,UAAAA,KA9DO,WAqEO,OAAhByH,EArES,kCAsELyG,GACJ3B,EACA9E,EACA,CAAC/D,EAAOyO,GACR,CACE7D,WAAY,cA3EL,QAiFTsE,EAAarQ,GAAAA,GAQjB,CACAA,GAAAA,GAAiB,eACjBA,GAAAA,GAAiB,UACjBA,GAAAA,GAAiB,eACjBA,GAAAA,GAAiB,sBACjBA,GAAAA,GACEA,GAAAA,GAAgB,QAChBA,GAAAA,GAAoBA,GAAAA,MAAqB,GACzC,WAIE2P,EAAYF,EAAOE,UACrB1nC,EAAS,EACT6d,EAAQpS,EACR48B,EAAe,GAxGJ,aAyGRxqB,EAAMne,OAAS,GAzGP,oBA0GPoK,EAAQ+T,EAAM9U,MAAM,EAAG2+B,GACvBj8B,EAAO2oB,EAAAA,GAAAA,MAAasT,EAAY,IACtCU,EAAW3mC,OACT,CACEi2B,YAAa,EACb13B,OAAAA,EACA8J,MAAOA,EACP0Y,YAAa,EACb8lB,mBAAoB,GAEtB78B,GAGIwxB,GAAc,IAAIgD,IAAcxwB,IAAI,CACxC8X,KAAM,CAAC,CAACuQ,OAAQ6P,EAAQtmB,UAAWmY,UAAU,EAAMC,YAAY,IAC/DjE,UAAAA,EACA/pB,KAAAA,IAEF48B,EAAa3jC,KACXg/B,GAA0B3B,EAAY9E,EAAa,CAAC/D,EAAOyO,GAAU,CACnE7D,WAAY,gBAKZ/B,EAAWwG,aAAav+B,SAAS,cAnIxB,wBAoIiB,EApIjB,UAqILo6B,GAAM,KArID,QAwIbpkC,GAAU0nC,EACV7pB,EAAQA,EAAM9U,MAAM2+B,GAzIP,yCA2ITpD,QAAQkE,IAAIH,GA3IH,eA+IPD,EAAarQ,GAAAA,GAA2C,CAC5DA,GAAAA,GAAiB,iBAGbtsB,EAAO2oB,EAAAA,GAAAA,MAAagU,EAAWxoC,MACrCwoC,EAAW3mC,OACT,CACEi2B,YAAa,GAEfjsB,GAGIwxB,GAAc,IAAIgD,IAAcxwB,IAAI,CACxC8X,KAAM,CACJ,CAACuQ,OAAQ6P,EAAQtmB,UAAWmY,UAAU,EAAMC,YAAY,GACxD,CAAC3B,OAAQ0L,GAAoBhK,UAAU,EAAOC,YAAY,IAE5DjE,UAAAA,EACA/pB,KAAAA,IAjKW,UAmKPi4B,GACJ3B,EACA9E,EACA,CAAC/D,EAAOyO,GACR,CACE7D,WAAY,cAxKH,kCA8KR,GA9KQ,+GApCN0D,GAAAA,GASJE,UAdUrR,ICXkB,IAAIzB,GACvC,mDCRE6T,GAActoC,OAAOG,UAAU4I,SAC/Bw/B,GAAUvoC,OAAOonB,MAAQ,SAASohB,GACpC,IAAIphB,EAAO,GACX,IAAK,IAAI7mB,KAAQioC,EAChBphB,EAAK7iB,KAAKhE,GAEX,OAAO6mB,CACP,EAEF,SAAS9C,GAAUxB,EAAK2lB,GACvB,IAAInkC,EAAG8b,EAAK7U,EAAK6b,EAAM7G,EAAKmoB,EAASC,EACrC,IAAY,IAAR7lB,EACH,MAAO,OAER,IAAY,IAARA,EACH,MAAO,QAER,cAAeA,GACd,IAAK,SACJ,GAAY,OAARA,EACH,OAAO,KACD,GAAIA,EAAImS,QAAgC,oBAAfnS,EAAImS,OACnC,OAAO3Q,GAAUxB,EAAImS,SAAUwT,GAG/B,GAAc,oBADdE,EAAQL,GAAYxhC,KAAKgc,IACO,CAG/B,IAFAvX,EAAM,IACN6U,EAAM0C,EAAIvjB,OAAS,EACf+E,EAAI,EAAGA,EAAI8b,EAAK9b,IACnBiH,GAAO+Y,GAAUxB,EAAIxe,IAAI,GAAQ,IAKlC,OAHI8b,GAAO,IACV7U,GAAO+Y,GAAUxB,EAAIxe,IAAI,IAEnBiH,EAAM,GACb,CAAM,GAAc,oBAAVo9B,EAA6B,CAMvC,IAHAvoB,GADAgH,EAAOmhB,GAAQzlB,GAAKke,QACTzhC,OACXgM,EAAM,GACNjH,EAAI,EACGA,EAAI8b,QAGMnb,KADhByjC,EAAUpkB,GAAUxB,EADpBvC,EAAM6G,EAAK9iB,KACmB,MAEzBiH,IACHA,GAAO,KAERA,GAAO8Y,KAAKC,UAAU/D,GAAO,IAAMmoB,GAEpCpkC,IAED,MAAO,IAAMiH,EAAM,GACnB,CACA,OAAO8Y,KAAKC,UAAUxB,GAGzB,IAAK,WACL,IAAK,YACJ,OAAO2lB,EAAc,UAAOxjC,EAC7B,IAAK,SACJ,OAAOof,KAAKC,UAAUxB,GACvB,QACC,OAAO8lB,SAAS9lB,GAAOA,EAAM,KAE/B,QAEgB,SAASA,GACzB,IAAI+lB,EAAYvkB,GAAUxB,GAAK,GAC/B,QAAkB7d,IAAd4jC,EACH,MAAO,GAAIA,CAEZ,ECrED,SAASC,GAAcr/B,GAErB,IADA,IAAIq/B,EAAgB,EACbr/B,EAAI,GACTA,GAAK,EACLq/B,IAEF,OAAOA,CACR,KAoBYC,GAAAA,WAYX7oC,SAAAA,EACE8oC,EACAC,EACAC,EACAC,EACAC,IACA,oBAhBKJ,mBAgBL,OAdKC,8BAcL,OAZKC,YAYL,OAVKC,sBAUL,OARKC,qBAQL,EACAz9B,KAAKq9B,cAAgBA,EACrBr9B,KAAKs9B,yBAA2BA,EAChCt9B,KAAKu9B,OAASA,EACdv9B,KAAKw9B,iBAAmBA,EACxBx9B,KAAKy9B,gBAAkBA,CACxB,wCAEDC,SAASC,GACP,OAAO39B,KAAK49B,qBAAqBD,GAAM,EACxC,qCAEDC,SAAqBD,GACnB,GAAIA,EAAO39B,KAAKy9B,gBAAiB,CAC/B,IAAMI,EACJV,GAjDI,KADYr/B,EAkDa6/B,EA/DN,GA+DsC,GAjD/C,GACpB7/B,IACAA,GAAKA,GAAK,EACVA,GAAKA,GAAK,EACVA,GAAKA,GAAK,EACVA,GAAKA,GAAK,EACVA,GAAKA,GAAK,GAEC,GADXA,GAAKA,GAAK,MA2CJq/B,GAhEuB,IAiEvB,EAIF,MAAO,CAACU,EADUF,GADD39B,KAAK89B,gBAAgBD,GAnEb,IA6D3B,CAUE,IA1DkB//B,EA0DZigC,EAAkBJ,EAAO39B,KAAKy9B,gBAC9BO,EAAmB7oC,KAAKC,MAAM2oC,EAAkB/9B,KAAKq9B,eAG3D,MAAO,CAFOr9B,KAAKw9B,iBAAmBQ,EACpBD,EAAkB/9B,KAAKq9B,cAG5C,oCAEDY,SAAoBJ,GAClB,OAAIA,GAAS79B,KAAKw9B,iBAhFS,IAiFjBroC,KAAKoB,IAAI,EAAGsnC,GAAS,IAG1BA,EAAQ79B,KAAKw9B,kBAAoBx9B,KAAKq9B,cACvCr9B,KAAKy9B,eAGV,mCAEDS,SAAmBL,GACjB,OAAO79B,KAAKi+B,oBAAoBJ,GAAS79B,KAAK89B,gBAAgBD,GAAS,CACxE,gCAEDC,SAAgBD,GACd,OAAIA,EAAQ79B,KAAKw9B,iBACRroC,KAAKoB,IAAI,EAAGsnC,EAAQV,GAhGF,KAkGlBn9B,KAAKq9B,aAEf,OAtEUD,GC9BAe,GAAAA,SAAAA,iCAGX5pC,SAAAA,EAAY8L,EAAiB+9B,GAAiB,6BAC5C,cAAM/9B,IAHR+9B,UAE8C,EAG5C,EAAKA,KAAOA,EAHgC,CAI7C,kBAPUD,SAA6BppC,QAiC7BspC,GAAAA,SAAAA,iCAGX9pC,SAAAA,EAAAA,EAME+pC,GACA,MALEC,EAKF,EALEA,KACAl+B,EAIF,EAJEA,QACAV,EAGF,EAHEA,KAGF,uBACA,cAAuB,MAAjB2+B,EAAAA,GAAAA,OAA2BA,EAA3BA,MAAAA,OAA6Cj+B,GAAYA,IAVjEk+B,UASE,IARF5+B,UAQE,EAEA,EAAK4+B,KAAOA,EACZ,EAAK5+B,KAAOA,EACZ,EAAK/K,KAAO,qBAJZ,CAKD,kBAfUypC,SAA2BtpC,QC9BxC,GAAeypC,WAAWC,MCmB1B,OAEaC,GAAAA,WAIXnqC,SAAAA,EAAYk7B,IAAqC,oBAHjD7a,SAGiD,OAFjDqI,WAEiD,EAC/Cjd,KAAK4U,IAAM6a,EAAK7a,IAChB5U,KAAKid,MAAQwS,EAAKxS,KACnB,wCAED0hB,WACE,IAAMC,EAAUp9B,OAAO,sBACvB,OAAOxB,KAAKid,MAAM4hB,mBAAqBD,CACxC,8BAEiB,SAACE,GACjB,IAAM/S,ECnBH,SACL3S,EACAzZ,GAEA,IAAIspB,EACJ,IACEA,EAAU7P,EAAK7jB,OAAOG,OAAOiK,EAG9B,CAFC,MAAOuqB,GACP,MAAM,IAAIn1B,MAAM,wBAA0Bm1B,EAC3C,CAED,GAAIjB,EAAQ8V,YAAc3lB,EAAK+R,MAC7B,MAAM,IAAIp2B,MAAJ,sDAC2Ck0B,EAAQ8V,UADnD,eACmE3lB,EAAK+R,QAIhF,OAAOlC,CACR,CDCgB+V,CAAWC,GAAuBH,GAEzCI,EAAyBJ,EAAYlrC,OAnBhB,GAoB3BuK,GAAO+gC,GAA0B,EAAG,2BACpC/gC,GAAO+gC,EAAyB,KAAO,EAAG,2BAE1C,IAAMC,EAAyBD,EAAyB,GACjD7Q,EAAapC,GAAAA,GAAoD,CACtEA,GAAAA,GAAiBp4B,KAAoBsrC,EAAwB,eAC5DzpC,OAAOopC,EAAY7hC,MA1BK,KAwBpBoxB,UAIP,MAAO,CACLwQ,iBAAkB9S,EAAK8S,iBACvBO,iBAAkBrT,EAAKqT,iBACvBC,2BAA4BtT,EAAKuT,uBACjCC,UAC4B,IAA1BxT,EAAKwT,UAAU3rC,OACX,IAAIk1B,GAAUiD,EAAKwT,UAAU,SAC7BjmC,EACN+0B,UAAWA,EAAU1pB,KAAImlB,SAAAA,GAAO,OAAI,IAAIhB,GAAUgB,EAAlB,IAEnC,OApCU4U,GAuCPO,GAAwB,CAC5B9T,MAAO,EACP51B,OAAQ02B,GAAAA,GAML,CACDA,GAAAA,GAAiB,aACjBxpB,GAAI,oBACJwpB,GAAAA,GAAkB,oBAClBA,GAAAA,GAAgB,0BAChBA,GAAAA,KACAA,GAAAA,GACEp4B,KACAo4B,GAAAA,GAAoBA,GAAAA,MAAoB,GACxC,gBEhFAuT,GAAS,6CCuDf,IAAMC,GAAsBlmB,GAC1B9a,GAASqqB,IACTxN,MACArf,SAAAA,GAAK,OAAI,IAAI6sB,GAAU7sB,EAAlB,IAGDyjC,GAAuBnlB,GAAM,CAACe,KAAUT,GAAQ,YAEhD8kB,GAA2BpmB,GAC/B9a,GAAS6pB,EAAAA,IACToX,IACAzjC,SAAAA,GAAK,OAAIqsB,EAAAA,GAAAA,KAAYrsB,EAAM,GAAI,SAA1B,IA8PP,SAAS2jC,GACPC,GAEA,IAAI7H,EACAjB,EACJ,GAAkC,kBAAvB8I,EACT7H,EAAa6H,OACR,GAAIA,EAAoB,CAG7B7H,EADE6H,EADK7H,WAGPjB,GAHA,OACE8I,EADF,GAID,CACD,MAAO,CAAC7H,WAAAA,EAAYjB,OAAAA,EACrB,CAKD,SAAS+I,GAAsBpuB,GAC7B,OAAO/V,GAAM,CACXokC,GAAK,CACHC,QAASnlB,GAAQ,OACjBolB,GAAI3kB,KACJ5J,OAAAA,IAEFquB,GAAK,CACHC,QAASnlB,GAAQ,OACjBolB,GAAI3kB,KACJd,MAAOulB,GAAK,CACVxB,KAAMxiB,KACN1b,QAASib,KACT3b,KAAMub,GtChVLT,GAAO,OAAO,kBAAM,CAAN,UsCoVtB,CAED,IAAMylB,GAAmBJ,GAAgB/jB,MAKzC,SAASokB,GAAoBzmB,GAC3B,OAAOH,GAAOumB,GAAgBpmB,GAASwmB,IAAkBjkC,SAAAA,GACvD,MAAI,UAAWA,EACNA,GAEA,kBACFA,GADL,IAEEyV,OAAQpd,GAAO2H,EAAMyV,OAAQgI,IANtB,GAUd,CAKD,SAAS0mB,GAA8BnkC,GACrC,OAAOkkC,GACLJ,GAAK,CACH9mB,QAAS8mB,GAAK,CACZpC,KAAM9/B,OAER5B,MAAAA,IAGL,CAKD,SAASokC,GAAmCpkC,GAC1C,OAAO8jC,GAAK,CACV9mB,QAAS8mB,GAAK,CACZpC,KAAM9/B,OAER5B,MAAAA,GAEH,CAKD,SAASqkC,GACPC,EACAC,GAEA,OAAgB,IAAZD,EACK,IAAI7O,GAAU,CACnB3O,OAAQyd,EAASzd,OACjB+H,kBAAmB0V,EAAS9Q,YAAY/qB,KACtCiqB,SAAAA,GAAU,OAAI,IAAI9F,GAAU8F,EAAlB,IAEZe,gBAAiB6Q,EAAS7Q,gBAC1BgC,qBAAsB6O,EAASjV,aAAa5mB,KAAI2qB,SAAAA,GAAE,MAAK,CACrDzD,eAAgByD,EAAGzD,eACnBC,kBAAmBwD,EAAGQ,SACtBnwB,KAAMupB,KAAAA,OAAYoG,EAAG3vB,MAH2B,IAKlDiyB,oBAAqB4O,EAAS5O,sBAGzB,IAAIpC,GAAQgR,EAEtB,CA0PD,IAAMC,GAA6BV,GAAK,CACtCW,WAAY7iC,KACZ8iC,eAAgB9iC,KAChB+iC,QAAS/iC,KACTgjC,MAAOhjC,KACPijC,SAAUjjC,OAoBNkjC,GAA2BZ,GAC/BpuB,GACEkJ,GACE8kB,GAAK,CACHlC,MAAOhgC,KACPmjC,cAAenjC,KACfojC,OAAQpjC,KACRqjC,YAAarjC,UAkBfsjC,GAAqBpB,GAAK,CAC9BlC,MAAOhgC,KACPujC,UAAWvjC,KACXwjC,aAAcxjC,KACdyjC,aAAczjC,KACd0jC,YAAarmB,GAASrd,MACtB2jC,iBAAkBtmB,GAASrd,QAGvB4jC,GAAyB1B,GAAK,CAClC1C,cAAex/B,KACfy/B,yBAA0Bz/B,KAC1B0/B,OAAQ5iB,KACR6iB,iBAAkB3/B,KAClB4/B,gBAAiB5/B,OAWb6jC,GAA0BvmB,GAAOG,KAAUvJ,GAAMlU,OAKjD8jC,GAAyB1mB,GAAStf,GAAM,CAACokC,GAAK,CAAC,GAAIzkB,QAKnDsmB,GAAwB7B,GAAK,CACjC7V,IAAKyX,KAMDE,GAA0BhnB,GAAQ,qBAWlCinB,GAAgB/B,GAAK,CACzB,cAAezkB,KACf,cAAeJ,GAASrd,QA8CpBkkC,GAAqC3B,GACzCL,GAAK,CACH7V,IAAKjP,GAAStf,GAAM,CAACokC,GAAK,CAAC,GAAIzkB,QAC/B8iB,KAAMnjB,GAASlJ,GAAMuJ,OACrBwU,SAAU5U,GACRD,GACElJ,GACEkJ,GACE8kB,GAAK,CACH7D,WAAYvhB,KACZyhB,MAAO9gB,KACPqf,SAAU98B,KACV8B,KAAMoS,GAAMuJ,MACZ0mB,UAAW9mB,GAASrd,YAM9BokC,cAAe/mB,GAASrd,MACxBqkC,WAAYhnB,GACVD,GACE8kB,GAAK,CACHrW,UAAWpO,KACX3b,KAAM4a,GAAM,CAACe,KAAUT,GAAQ,mBAyZnCsnB,GAAgC/B,GACpCL,GAAK,CACHqC,WAAYjnB,GAAOG,KAAUvJ,GAAMlU,OACnCwkC,MAAOtC,GAAK,CACVuC,UAAWzkC,KACX0kC,SAAU1kC,UAoJhB,IAAM2kC,GAAgCrC,GAAcM,IAK9CgC,GAAwBtC,GAAcgB,IAKtCuB,GAA4BvC,GAAcsB,IAK1CkB,GAA6BxC,GAAcuB,IAK3CkB,GAAgBzC,GAActiC,MAmB9BglC,GAAqBzC,GACzBL,GAAK,CACH+C,MAAOjlC,KACPklC,YAAallC,KACbmlC,eAAgBnlC,KAChBolC,uBAAwBlxB,GAAM0tB,OAsB5ByD,GAAoBnD,GAAK,CAC7BkB,OAAQ3lB,KACR6nB,SAAUloB,GAASpd,MACnBulC,SAAUvlC,KACVwlC,eAAgBnoB,GAASI,QAsBrBgoB,GAAgClD,GACpCruB,GACEguB,GAAK,CACHjW,QAAS2V,GACTwB,OAAQ3lB,KACR6nB,SAAUloB,GAASpd,MACnBulC,SAAUvlC,KACVwlC,eAAgBnoB,GAASI,UAQzBioB,GAA0BnD,GAC9BruB,GACEguB,GAAK,CACH/T,OAAQyT,GACR5P,QAASkQ,GAAK,CACZ7D,WAAYvhB,KACZyhB,MAAOqD,GACP9E,SAAU98B,KACV8B,KAAMggC,GACNqC,UAAWnkC,WAMb2lC,GAA0BzD,GAAK,CACnClE,QAASvgB,KACTmoB,OAAQ1nB,KACR6e,MAAO/8B,OAMH6lC,GAAgCtD,GACpCruB,GACEguB,GAAK,CACH/T,OAAQyT,GACR5P,QAASkQ,GAAK,CACZ7D,WAAYvhB,KACZyhB,MAAOqD,GACP9E,SAAU98B,KACV8B,KAAM6jC,GACNxB,UAAWnkC,WAiBb8lC,GAA8BvD,GAClCruB,GACEguB,GAAK,CACHpF,SAAU98B,KACVisB,QAAS2V,OAQTmE,GAAoB7D,GAAK,CAC7B7D,WAAYvhB,KACZyhB,MAAOqD,GACP9E,SAAU98B,KACV8B,KAAMggC,GACNqC,UAAWnkC,OAMPgmC,GAAyB9D,GAAK,CAClC/T,OAAQyT,GACR5P,QAAS+T,KAGLE,GAAyBvqB,GAC7B5d,GAAM,CAAC8C,GAAS6pB,EAAAA,IAASkb,KACzB7nC,GAAM,CAAC+jC,GAAsB8D,MAC7BvnC,SAAAA,GACE,OAAI9C,MAAMC,QAAQ6C,GACT3H,GAAO2H,EAAO0jC,IAEd1jC,CAPwB,IAe/B8nC,GAA0BhE,GAAK,CACnC7D,WAAYvhB,KACZyhB,MAAOqD,GACP9E,SAAU98B,KACV8B,KAAMmkC,GACN9B,UAAWnkC,OAGPmmC,GAA+BjE,GAAK,CACxC/T,OAAQyT,GACR5P,QAASkU,KAMLE,GAAwBlE,GAAK,CACjC9iB,MAAOthB,GAAM,CACXkf,GAAQ,UACRA,GAAQ,YACRA,GAAQ,cACRA,GAAQ,kBAEVqpB,OAAQrmC,KACRsmC,SAAUtmC,OAONumC,GAA6CjE,GACjDpuB,GACEguB,GAAK,CACH3c,UAAW9H,KACXqiB,KAAM9/B,KACNqsB,IAAKyX,GACL0C,KAAMppB,GAASK,MACfgpB,UAAWppB,GAASD,GAASpd,WAQ7B0mC,GAAmCpE,GACvCpuB,GACEguB,GAAK,CACH3c,UAAW9H,KACXqiB,KAAM9/B,KACNqsB,IAAKyX,GACL0C,KAAMppB,GAASK,MACfgpB,UAAWppB,GAASD,GAASpd,WAQ7B2mC,GAA4BzE,GAAK,CACrC0E,aAAc5mC,KACd6T,OAAQ2uB,GAA6BuD,MAMjCc,GAA2B3E,GAAK,CACpC/T,OAAQyT,GACR5P,QAAS+T,KAMLe,GAAmC5E,GAAK,CAC5C0E,aAAc5mC,KACd6T,OAAQ2uB,GAA6BqE,MAMjCE,GAAiB7E,GAAK,CAC1B8E,OAAQhnC,KACR8/B,KAAM9/B,KACNinC,KAAMjnC,OAMFknC,GAAyBhF,GAAK,CAClC0E,aAAc5mC,KACd6T,OAAQkzB,KAiEJI,GAAmBrpC,GAAM,CAC7BokC,GAAK,CACH3mB,KAAMzd,GAAM,CACVkf,GAAQ,sBACRA,GAAQ,aACRA,GAAQ,0BACRA,GAAQ,UAEV8iB,KAAM9/B,KACNonC,UAAWpnC,OAEbkiC,GAAK,CACH3mB,KAAMyB,GAAQ,eACdgqB,OAAQhnC,KACR8/B,KAAM9/B,KACNonC,UAAWpnC,OAEbkiC,GAAK,CACH3mB,KAAMyB,GAAQ,UACd8iB,KAAM9/B,KACNonC,UAAWpnC,KACXqnC,MAAOnF,GAAK,CACVoF,sBAAuBtnC,KACvBunC,0BAA2BvnC,KAC3BwnC,sBAAuBxnC,KACvBynC,wBAAyBznC,SAG7BkiC,GAAK,CACH3mB,KAAMyB,GAAQ,QACd8iB,KAAM9/B,KACNonC,UAAWpnC,KACXqsB,IAAK5O,SAOHiqB,GAA+BxF,GAAK,CACxC0E,aAAc5mC,KACd6T,OAAQszB,KAMJQ,GAA8BzF,GAAK,CACvC0E,aAAc5mC,KACd6T,OAAQ2uB,GACN1kC,GAAM,CAACimC,GAAuBC,QAO5B4D,GAAyB1F,GAAK,CAClC0E,aAAc5mC,KACd6T,OAAQ7T,OAGJ6nC,GAAoB3F,GAAK,CAC7B/T,OAAQ1Q,KACRqqB,OAAQ1qB,GAASK,MACjBsqB,IAAK3qB,GAASK,MACduqB,IAAK5qB,GAASK,MACdilB,QAAStlB,GAASK,QAGdwqB,GAAwB/F,GAAK,CACjCgG,WAAYzqB,KACZ0qB,WAAY1qB,KACZ2qB,eAAgBpoC,KAChBqoC,iBAAkBvrB,KAClBwrB,aAAcp0B,GAAMwI,GAAM,CAAC1c,KAAUA,KAAUA,QAC/CuoC,WAAYvoC,KACZwoC,SAAUxoC,KACVyoC,SAAUrrB,GAASpd,QAMf0oC,GAAkBpG,GACtBJ,GAAK,CACHyG,QAASz0B,GAAM+zB,IACfW,WAAY10B,GAAM+zB,OAIhBY,GAAqB/qC,GAAM,CAC/Bkf,GAAQ,aACRA,GAAQ,aACRA,GAAQ,eAGJ8rB,GAA0B5G,GAAK,CACnCpC,KAAM9/B,KACN+oC,cAAe3rB,GAASpd,MACxBqsB,IAAKyX,GACLkF,mBAAoB3rB,GAASwrB,MAMzBI,GAAgC1G,GACpCruB,GAAMkJ,GAAS0rB,MAMXI,GAA6C5G,GAActiC,MAE3DmpC,GAA2BjH,GAAK,CACpCnR,WAAY6Q,GACZjR,gBAAiBzc,GAAMlU,MACvB6wB,gBAAiB3c,GAAMlU,QAGnBopC,GAA6BlH,GAAK,CACtC3L,WAAYriB,GAAMuJ,MAClBjb,QAAS0/B,GAAK,CACZrQ,YAAa3d,GAAMuJ,MACnByH,OAAQgd,GAAK,CACXhS,sBAAuBlwB,KACvBmwB,0BAA2BnwB,KAC3BowB,4BAA6BpwB,OAE/B0tB,aAAcxZ,GACZguB,GAAK,CACHjQ,SAAU/d,GAAMlU,MAChB8B,KAAM2b,KACNuQ,eAAgBhuB,QAGpB8xB,gBAAiBrU,KACjBsW,oBAAqB1W,GAASnJ,GAAMi1B,SAIlCE,GAA0BnH,GAAK,CACnC0D,OAAQ1nB,KACR8f,QAASvgB,KACToO,UAAW+V,KAGP0H,GAAuBpH,GAAK,CAChCjQ,SAAU/d,GAAM0tB,IAChB9/B,KAAM2b,KACNoO,UAAW+V,KAqBP2H,GAAyB7tB,GAlBL5d,GAAM,CAC9BwrC,GACAD,KAG+BvrC,GAAM,CACrCokC,GAAK,CACH0D,OAAQ1nB,KACR8f,QAASvgB,KACToO,UAAWpO,OAEbykB,GAAK,CACHjQ,SAAU/d,GAAMuJ,MAChB3b,KAAM2b,KACNoO,UAAWpO,UAObrf,SAAAA,GACE,OACS3H,GAAO2H,EADZ,aAAcA,EACKkrC,GAEAD,GAPU,IAe/BG,GAAmCtH,GAAK,CAC5C3L,WAAYriB,GAAMuJ,MAClBjb,QAAS0/B,GAAK,CACZrQ,YAAa3d,GACXguB,GAAK,CACH/T,OAAQyT,GACRnJ,OAAQ3b,KACRsQ,SAAUtQ,KACV2sB,OAAQpsB,GACNvf,GAAM,CAACkf,GAAQ,eAAgBA,GAAQ,qBAI7C0Q,aAAcxZ,GAAMq1B,IACpBzX,gBAAiBrU,KACjBsW,oBAAqB1W,GAASD,GAASlJ,GAAMi1B,UAI3CO,GAAqBxH,GAAK,CAC9ByH,aAAc3pC,KACd4pC,KAAMnsB,KACN8gB,MAAOlhB,GAASI,MAChBosB,cAAexE,KAGXyE,GAAwB5H,GAAK,CACjC9U,SAAUlZ,GAAM0tB,IAChBvU,SAAUnZ,GAAM0tB,MAMZmI,GAAiC7H,GAAK,CAC1C7V,IAAKyX,GACLkG,IAAKhqC,KACLiqC,kBAAmB5sB,GACjBD,GACElJ,GACEguB,GAAK,CACH5U,MAAOttB,KACP0tB,aAAcxZ,GACZguB,GAAK,CACHjQ,SAAU/d,GAAMlU,MAChB8B,KAAM2b,KACNuQ,eAAgBhuB,aAO5BkqC,YAAah2B,GAAMlU,MACnBmqC,aAAcj2B,GAAMlU,MACpBoqC,YAAa/sB,GAASD,GAASlJ,GAAMuJ,QACrC4sB,iBAAkBhtB,GAASD,GAASlJ,GAAMw1B,MAC1CY,kBAAmBjtB,GAASD,GAASlJ,GAAMw1B,MAC3Ca,gBAAiBltB,GAASysB,IAC1BU,qBAAsBntB,GAASrd,QAM3ByqC,GAAuCvI,GAAK,CAChD7V,IAAKyX,GACLkG,IAAKhqC,KACLiqC,kBAAmB5sB,GACjBD,GACElJ,GACEguB,GAAK,CACH5U,MAAOttB,KACP0tB,aAAcxZ,GAAMq1B,SAK5BW,YAAah2B,GAAMlU,MACnBmqC,aAAcj2B,GAAMlU,MACpBoqC,YAAa/sB,GAASD,GAASlJ,GAAMuJ,QACrC4sB,iBAAkBhtB,GAASD,GAASlJ,GAAMw1B,MAC1CY,kBAAmBjtB,GAASD,GAASlJ,GAAMw1B,MAC3Ca,gBAAiBltB,GAASysB,IAC1BU,qBAAsBntB,GAASrd,QAG3B0qC,GAA2B5sC,GAAM,CAACkf,GAAQ,GAAIA,GAAQ,YAKtD2tB,GAAoBrI,GACxBllB,GACE8kB,GAAK,CACHrL,UAAWpZ,KACXmtB,kBAAmBntB,KACnBotB,WAAY7qC,KACZ0+B,aAAcxqB,GACZguB,GAAK,CACH5O,YAAa8V,GACblb,KAAM9Q,GAAS2sB,IACfrH,QAASrlB,GAASqtB,OAGtBI,QAASztB,GACPnJ,GACEguB,GAAK,CACH/T,OAAQ1Q,KACRqf,SAAU98B,KACVqjC,YAAajmB,GAASpd,MACtB+qC,WAAY3tB,GAASK,UAI3BgpB,UAAWrpB,GAASpd,MACpB0jC,YAAatmB,GAASpd,UAUtBgrC,GAA6B1I,GACjCllB,GACE8kB,GAAK,CACHrL,UAAWpZ,KACXmtB,kBAAmBntB,KACnBotB,WAAY7qC,KACZ0+B,aAAcxqB,GACZguB,GAAK,CACH5O,YAAa8V,GACblb,KAAM9Q,GAAS2sB,OAGnBe,QAASztB,GACPnJ,GACEguB,GAAK,CACH/T,OAAQ1Q,KACRqf,SAAU98B,KACVqjC,YAAajmB,GAASpd,MACtB+qC,WAAY3tB,GAASK,UAI3BgpB,UAAWrpB,GAASpd,UAQpBirC,GAA8B3I,GAClCllB,GACE8kB,GAAK,CACHrL,UAAWpZ,KACXmtB,kBAAmBntB,KACnBotB,WAAY7qC,KACZu2B,WAAYriB,GAAMuJ,MAClBgpB,UAAWrpB,GAASpd,UAQpBkrC,GAA0B5I,GAC9BllB,GACE8kB,GAAK,CACHpC,KAAM9/B,KACNkuB,KAAM6b,GACNtD,UAAWppB,GAASD,GAASpd,OAC7BszB,YAAa8V,GACb1G,QAASrlB,GAASqtB,QAQlBS,GAAgC7I,GACpCllB,GACE8kB,GAAK,CACHpC,KAAM9/B,KACNszB,YAAakW,GACbtb,KAAM9Q,GAASqtB,IACfhE,UAAWppB,GAASD,GAASpd,OAC7B0iC,QAASrlB,GAASqtB,QAUlBU,GAAwC7I,GAC5CL,GAAK,CACHrL,UAAWpZ,KACX6d,cAAe4G,GAAK,CAClBmJ,qBAAsBrrC,UAQtBsrC,GAA8B/I,GAClCL,GAAK,CACHrL,UAAWpZ,KACXgZ,qBAAsBz2B,QAcpBurC,GAAuCjJ,GAC3CpuB,GAXuBguB,GAAK,CAC5BpC,KAAM9/B,KACNwrC,gBAAiBxrC,KACjByrC,SAAUzrC,KACV0rC,iBAAkB1rC,SAad2rC,GAA4BpJ,GAChCnlB,GACE8kB,GAAK,CACH5G,cAAe4G,GAAK,CAClBmJ,qBAAsBrrC,WASxB4rC,GAA0BtJ,GAAc7kB,MAKxCouB,GAA2BvJ,GAAc7kB,MAkPzCquB,GAAa5J,GAAK,CACtB7V,IAAKyX,GACLvD,KAAMrsB,GAAMuJ,MACZ8H,UAAW9H,OAePsuB,GAAyB7J,GAAK,CAClCruB,OAAQ2uB,GAA6BsJ,IACrClF,aAAc5mC,OAiHVgsC,GAAsB,CAC1B,gBAAiB,MAAjB,OAAiB,WAAM3oC,qBAAN,GAAyC,YAM/C4oC,GAAAA,WA0EXv1C,SAAAA,EACEw1C,EACAlK,GAEA,IAAImK,EACAC,EACAxL,EACAyL,EACAC,EA5xCkBC,GAuxCtB,oBA5EeC,iBA4Ef,OA3EeC,uCA2Ef,OA1Ee7N,kBA0Ef,OAzEe8N,oBAyEf,OAxEeC,gBAwEf,OAvEeC,iBAuEf,OAtEeC,sBAsEf,OArEeC,mBAqEf,OApEeC,wBAAkC,EAoEjD,KAnEeC,uBAEN,KAiET,KAhEeC,yBAEN,KA8DT,KAvDUC,wBAAkC,EAuD5C,KArDeC,0BAAoC,EAqDnD,KApDeC,mBAA6B,EAoD5C,KAnDeC,eAKb,CACFC,gBAAiB,KACjBC,UAAW,EACXC,sBAAuB,GACvBC,oBAAqB,IA0CrB,KAvCuBC,0BAAkD,EAuCzE,KAtCuBC,oDAIrB,CAAC,EAkCH,KAjCuBC,6CAIrB,CAAC,EA6BH,KA5BuBC,qBAErB,CAAC,EA0BH,KAZuBC,gCACvB,IAAI3xB,IAiBA6lB,GAAoD,kBAAvBA,EAC/B7/B,KAAKqqC,YAAcxK,EACVA,IACT7/B,KAAKqqC,YAAcxK,EAAmB7H,WACtCh4B,KAAKsqC,kCACHzK,EAAmB+L,iCACrB5B,EAAanK,EAAmBmK,WAChCC,EAAcpK,EAAmBoK,YACjCxL,EAAQoB,EAAmBpB,MAC3ByL,EAAkBrK,EAAmBqK,gBACrCC,EAA0BtK,EAAmBsK,yBAG/CnqC,KAAKy8B,aAj1ET,SAA2BoP,GACzB,IAAqC,IAAjC,WAAWC,KAAKD,GAClB,MAAM,IAAIv4C,UAAU,qDAEtB,OAAOu4C,CACR,CA40EuBE,CAAkBhC,GACtC/pC,KAAKuqC,eAAiBP,GDxoFnB,SAA0BD,GAC/B,IAAMiC,EAAUjC,EAASkC,MAAMzM,IAC/B,GAAe,MAAXwM,EACF,MAAM14C,UAAU,oCAAD,OAAsCy2C,EAAtC,MAEjB,cAKIiC,EALJ,GAEEE,GAFF,WAGEC,EAHF,KAIEj0B,EAJF,KAMMk0B,EAAWrC,EAASsC,WAAW,UAAY,OAAS,MACpDC,EACa,MAAjBH,EAAwB,KAAOh6B,SAASg6B,EAAclvC,MAAM,GAAI,IAC5DsvC,EAOS,MAAbD,EAAoB,GAApBA,IAAAA,OAA6BA,EAAY,GAC3C,MAAO,GAAP,OAAUF,EAAV,aAAuBF,GAAvB,OAAiCK,GAAjC,OAAiDr0B,EAClD,CCinFuCs0B,CAAiBzC,GAErD/pC,KAAKwqC,WAx4CT,SACEiC,EACAxC,EACAyC,EACAxC,EACAC,GAEA,IAMIwC,EANElO,EAAQiO,GAA4BE,GAQtC1C,IACFyC,EAAmB,yCAAG,WAAOE,EAAMC,GAAb,4FACY,IAAItU,SAClC,SAACC,EAASsU,GACR,IACE7C,EAAgB2C,EAAMC,GAAM,SAACE,EAAcC,GAAf,OAC1BxU,EAAQ,CAACuU,EAAcC,GADG,GAK7B,CAFC,MAAOzyB,GACPuyB,EAAOvyB,EACR,CAR2B,IADZ,cACd0yB,EADc,gBAYPzO,EAAK,WAALA,GAAAA,EAAAA,EAAAA,GAASyO,IAZF,mFAAH,yDAgBrB,IAAMC,EAAgB,IAAIC,KAAJ,0CAAc,WAAOC,EAASC,GAAhB,oFAE5Bh0B,EAAU,CACdi0B,OAAQ,OACRC,KAAMH,EACNI,WAJyDn0C,EAKzDo0C,QAASr5C,OAAOI,OACd,CACE,eAAgB,oBAElBw1C,GAAe,CAAC,EAChBJ,KAX8B,SAgB5B8D,EAA4B,EAE5BC,EAAW,IAlBiB,WAoB1BjB,EApB0B,iCAqBhBA,EAAoBF,EAAKnzB,GArBT,OAqB5BnX,EArB4B,gDAuBhBs8B,EAAMgO,EAAKnzB,GAvBK,QAuB5BnX,EAvB4B,kBA0BX,MAAfA,EAAIk2B,OA1BsB,yDA6BE,IAA5B8R,EA7B0B,wDAiCI,KADlCwD,GAA6B,GAhCC,4DAoC9B5Y,QAAQ8Y,IAAR9Y,yBAAAA,OAC2B5yB,EAAIk2B,OAD/BtD,KAAAA,OACyC5yB,EAAI2rC,WAD7C/Y,sBAAAA,OAC4E6Y,EAD5E7Y,gBApC8B,UAuCxBuD,GAAMsV,GAvCkB,QAwC9BA,GAAY,EAxCkB,gDA2CbzrC,EAAI4rC,OA3CS,QA2C1BA,EA3C0B,OA4C5B5rC,EAAI6rC,GACNV,EAAS,KAAMS,GAEfT,EAAS,IAAIv4C,MAAJ,UAAaoN,EAAIk2B,OAAjB,YAA2Bl2B,EAAI2rC,WAA/B,aAA8CC,KA/CzB,kDAkD5B7jB,EAAAA,cAAen1B,OAAOu4C,EAAS,EAAD,IAlDF,sGAAd,wDAsDnB,CAAC,GAEJ,OAAOH,CACR,CA+yCqBc,CAChBlE,EACAE,EACAxL,EACAyL,EACAC,GAEFnqC,KAAKyqC,aApzCiBL,EAozCcpqC,KAAKwqC,WAnzCpC,SAAC+C,EAAQ9d,GACd,OAAO,IAAI+I,SAAQ,SAACC,EAASsU,GAC3B3C,EAAOiD,QAAQE,EAAQ9d,GAAM,SAACvF,EAAUsW,GAClCtW,EACF6iB,EAAO7iB,GAGTuO,EAAQ+H,EALV,GADK,GADT,GAozCExgC,KAAK0qC,iBAvyCT,SAA+BN,GAC7B,OAAQ8D,SAAAA,GACN,OAAO,IAAI1V,SAAQ,SAACC,EAASsU,GAEH,IAApBmB,EAASt6C,QAAc6kC,EAAQ,IAEnC,IAAM0V,EAAQD,EAASvpC,KAAK+1B,SAAAA,GAC1B,OAAO0P,EAAOiD,QAAQ3S,EAAO0T,WAAY1T,EAAOjL,KADpC,IAId2a,EAAOiD,QAAQc,GAAO,SAACjkB,EAAUsW,GAC3BtW,EACF6iB,EAAO7iB,GAGTuO,EAAQ+H,EALV,GARK,GADT,CAkBD,CAoxC2B6N,CAAsBruC,KAAKwqC,YAEnDxqC,KAAK2qC,cAAgB,IAAI2D,GAAAA,EAAmBtuC,KAAKuqC,eAAgB,CAC/DgE,aAAa,EACbC,eAAgBC,MAElBzuC,KAAK2qC,cAAc+D,GAAG,OAAQ1uC,KAAK2uC,UAAU/zC,KAAKoF,OAClDA,KAAK2qC,cAAc+D,GAAG,QAAS1uC,KAAK4uC,WAAWh0C,KAAKoF,OACpDA,KAAK2qC,cAAc+D,GAAG,QAAS1uC,KAAK6uC,WAAWj0C,KAAKoF,OACpDA,KAAK2qC,cAAc+D,GACjB,sBACA1uC,KAAK8uC,yBAAyBl0C,KAAKoF,OAErCA,KAAK2qC,cAAc+D,GACjB,sBACA1uC,KAAK+uC,gCAAgCn0C,KAAKoF,OAE5CA,KAAK2qC,cAAc+D,GACjB,mBACA1uC,KAAKgvC,sBAAsBp0C,KAAKoF,OAElCA,KAAK2qC,cAAc+D,GACjB,2BACA1uC,KAAKivC,6BAA6Br0C,KAAKoF,OAEzCA,KAAK2qC,cAAc+D,GACjB,wBACA1uC,KAAKkvC,2BAA2Bt0C,KAAKoF,OAEvCA,KAAK2qC,cAAc+D,GACjB,mBACA1uC,KAAKmvC,sBAAsBv0C,KAAKoF,OAElCA,KAAK2qC,cAAc+D,GACjB,mBACA1uC,KAAKovC,sBAAsBx0C,KAAKoF,MAEnC,wCAKa,WACZ,OAAOA,KAAKqqC,WACb,0BAKc,WACb,OAAOrqC,KAAKy8B,YACb,8EAKyB,WACxBlnB,EACAsqB,GAFwB,+FAMtBD,GAA4BC,GADvB7H,EALiB,EAKjBA,WAAYjB,EALK,EAKLA,OAEbtH,EAAOzvB,KAAKqvC,WAChB,CAAC95B,EAAU8T,YACX2O,OACA1+B,EACAy9B,GAXsB,SAaA/2B,KAAKyqC,YAAY,aAAchb,GAb/B,UAalB6f,EAbkB,SAepB,UADEntC,EAAM7N,GAAOg7C,EAAWlP,GAAwBviC,SAd9B,sBAgBhB,IAAIwgC,GACRl8B,EAAIqY,MADA,oCAEyBjF,EAAU8T,aAlBnB,gCAqBjBlnB,EAAIuP,QArBa,0KA2BV,WACd6D,EACAsqB,GAFc,sFAID7/B,KAAKuvC,qBAAqBh6B,EAAWsqB,GAC/C2P,MAAKrnC,SAAAA,GAAC,OAAIA,EAAElM,KAAN,IACNwzC,OAAMj2C,SAAAA,GACL,MAAM,IAAIzE,MACR,oCAAsCwgB,EAAU8T,WAAa,KAAO7vB,EAJ7D,IAJC,oNAgBE,WAACmkC,GAAD,8FACQ39B,KAAKyqC,YAAY,eAAgB,CAAC9M,IAD1C,UACV2R,EADU,SAGZ,UADEntC,EAAM7N,GAAOg7C,EAAWnP,GAAcllB,GAASpd,UAFrC,sBAIR,IAAIwgC,GACRl8B,EAAIqY,MADA,4CAEiCmjB,IANzB,gCASTx7B,EAAIuP,QATK,kLAgBQ,2GACA1R,KAAKyqC,YAAY,oBAAqB,IADtC,UAClB6E,EADkB,SAGpB,UADEntC,EAAM7N,GAAOg7C,EAAWnP,GAActiC,SAFpB,sBAIhB,IAAIwgC,GACRl8B,EAAIqY,MACJ,qCANoB,gCASjBrY,EAAIuP,QATa,mLAeE,2GACF1R,KAAKyqC,YAAY,yBAA0B,IADzC,UACpB6E,EADoB,SAGtB,UADEntC,EAAM7N,GAAOg7C,EAAW1M,MAFJ,sBAIlB,IAAIvE,GACRl8B,EAAIqY,MACJ,uCANsB,gCASnBrY,EAAIuP,QATe,sKAeb,WACbqlB,GADa,uFAGT2Y,EAA6B,CAAC,EAEhCA,EADoB,kBAAX3Y,EACG,CAACiB,WAAYjB,GAChBA,GACG,kBACPA,GADI,IAEPiB,WAAajB,GAAUA,EAAOiB,YAAeh4B,KAAKg4B,aAGxC,CACVA,WAAYh4B,KAAKg4B,YAbR,SAiBWh4B,KAAKyqC,YAAY,YAAa,CAACiF,IAjB1C,UAiBPJ,EAjBO,SAmBT,UADEntC,EAAM7N,GAAOg7C,EAAWzM,MAlBjB,sBAoBL,IAAIxE,GAAmBl8B,EAAIqY,MAAO,wBApB7B,gCAsBNrY,EAAIuP,QAtBE,4KA4BK,WAClBi+B,EACA3X,GAFkB,uFAIZvI,EAAOzvB,KAAKqvC,WAAW,CAACM,EAAiBtmB,YAAa2O,GAJ1C,SAKMh4B,KAAKyqC,YAAY,iBAAkBhb,GALzC,UAKZ6f,EALY,SAOd,UADEntC,EAAM7N,GAAOg7C,EAAWlP,GAAwB8C,OANpC,sBAQV,IAAI7E,GAAmBl8B,EAAIqY,MAAO,8BARxB,gCAUXrY,EAAIuP,QAVO,sLAgBQ,WAC1Bk+B,EACA5X,GAF0B,uFAIpBvI,EAAOzvB,KAAKqvC,WAAW,CAACO,EAAavmB,YAAa2O,GAJ9B,SAKFh4B,KAAKyqC,YAAY,yBAA0Bhb,GALzC,UAKpB6f,EALoB,SAOtB,UADEntC,EAAM7N,GAAOg7C,EAAWlP,GAAwB8C,OAN5B,sBAQlB,IAAI7E,GACRl8B,EAAIqY,MACJ,uCAVsB,gCAanBrY,EAAIuP,QAbe,uLAqBC,WAC3Bm+B,EACApiB,EACAoS,GAH2B,iGAUzBD,GAA4BC,GADvB7H,EAToB,EASpBA,WAAYjB,EATQ,EASRA,OAEf+Y,EAAe,CAACD,EAAaxmB,YAC7B,SAAUoE,EACZqiB,EAAMl3C,KAAK,CAAC6uC,KAAMha,EAAOga,KAAKpe,aAE9BymB,EAAMl3C,KAAK,CAAC8wB,UAAW+D,EAAO/D,UAAUL,aAGpCoG,EAAOzvB,KAAKqvC,WAAWS,EAAO9X,EAAY,SAAUjB,GAlB/B,SAmBH/2B,KAAKyqC,YAAY,0BAA2Bhb,GAnBzC,UAmBrB6f,EAnBqB,SAqBvB,UADEntC,EAAM7N,GAAOg7C,EAAW/L,MApBH,uBAsBnB,IAAIlF,GACRl8B,EAAIqY,MADA,wDAE6Cq1B,EAAaxmB,aAxBvC,iCA2BpBlnB,EAAIuP,QA3BgB,gMAmCM,WACjCm+B,EACApiB,EACAuK,GAHiC,yFAS7B8X,EAAe,CAACD,EAAaxmB,YAC7B,SAAUoE,EACZqiB,EAAMl3C,KAAK,CAAC6uC,KAAMha,EAAOga,KAAKpe,aAE9BymB,EAAMl3C,KAAK,CAAC8wB,UAAW+D,EAAO/D,UAAUL,aAGpCoG,EAAOzvB,KAAKqvC,WAAWS,EAAO9X,EAAY,cAhBf,SAiBTh4B,KAAKyqC,YAAY,0BAA2Bhb,GAjBnC,UAiB3B6f,EAjB2B,SAmB7B,UADEntC,EAAM7N,GAAOg7C,EAAW5L,MAlBG,sBAoBzB,IAAIrF,GACRl8B,EAAIqY,MADA,wDAE6Cq1B,EAAaxmB,aAtBjC,gCAyB1BlnB,EAAIuP,QAzBsB,qLA+BX,WACtBqlB,GADsB,yFAGhBgZ,GAHgB,QAAC,UAIlBhZ,GAJiB,IAKpBiB,WAAajB,GAAUA,EAAOiB,YAAeh4B,KAAKg4B,aAE9CvI,EAAOsgB,EAAItiB,QAAUsiB,EAAI/X,WAAa,CAAC+X,GAAO,GAP9B,SAQE/vC,KAAKyqC,YAAY,qBAAsBhb,GARzC,UAQhB6f,EARgB,SAUlB,UADEntC,EAAM7N,GAAOg7C,EAAW3L,MATR,sBAWd,IAAItF,GAAmBl8B,EAAIqY,MAAO,kCAXpB,gCAafrY,EAAIuP,QAbW,qLAoBK,WAC3Bs+B,EACAhY,GAF2B,uFAIrBvI,EAAOzvB,KAAKqvC,WAAW,CAACW,EAAY3mB,YAAa2O,GAJ5B,SAKHh4B,KAAKyqC,YAAY,0BAA2Bhb,GALzC,UAKrB6f,EALqB,SAOvB,UADEntC,EAAM7N,GAAOg7C,EAAWhM,MANH,sBAQnB,IAAIjF,GACRl8B,EAAIqY,MACJ,wCAVuB,gCAapBrY,EAAIuP,QAbgB,wLAmBC,WAC5B6D,EACAsqB,GAF4B,+FAK1BD,GAA4BC,GADvB7H,EAJqB,EAIrBA,WAAYjB,EAJS,EAITA,OAEbtH,EAAOzvB,KAAKqvC,WAChB,CAAC95B,EAAU8T,YACX2O,EACA,SACAjB,GAV0B,SAYJ/2B,KAAKyqC,YAAY,iBAAkBhb,GAZ/B,UAYtB6f,EAZsB,SAiBxB,UAJEntC,EAAM7N,GACVg7C,EACAlP,GAAwBnlB,GAAS2oB,QAfP,sBAkBpB,IAAIvF,GACRl8B,EAAIqY,MADA,2CAEgCjF,EAAU8T,aApBtB,gCAuBrBlnB,EAAIuP,QAvBiB,oLA6BJ,WACxB6D,EACAsqB,GAFwB,+FAOtBD,GAA4BC,GADvB7H,EANiB,EAMjBA,WAAYjB,EANK,EAMLA,OAEbtH,EAAOzvB,KAAKqvC,WAChB,CAAC95B,EAAU8T,YACX2O,EACA,aACAjB,GAZsB,SAcA/2B,KAAKyqC,YAAY,iBAAkBhb,GAdnC,UAclB6f,EAdkB,SAmBpB,UAJEntC,EAAM7N,GACVg7C,EACAlP,GAAwBnlB,GAAS8oB,QAjBX,sBAoBhB,IAAI1F,GACRl8B,EAAIqY,MADA,2CAEgCjF,EAAU8T,aAtB1B,gCAyBjBlnB,EAAIuP,QAzBa,8KA+BN,WAClB6D,EACAsqB,GAFkB,qGAKE7/B,KAAKiwC,yBACrB16B,EACAsqB,GAPc,cAKV19B,EALU,yBASTA,EAAIlG,OATK,sCAWV,IAAIlH,MACR,oCAAsCwgB,EAAU8T,WAAa,KAA7D,MAZc,0MAoBmB,WACrC6mB,EACArQ,GAFqC,iGAKnCD,GAA4BC,GADvB7H,EAJ8B,EAI9BA,WAAYjB,EAJkB,EAIlBA,OAEbtb,EAAOy0B,EAAWvrC,KAAIiQ,SAAAA,GAAG,OAAIA,EAAIyU,UAAR,IACzBoG,EAAOzvB,KAAKqvC,WAAW,CAAC5zB,GAAOuc,EAAY,SAAUjB,GAPtB,SAQb/2B,KAAKyqC,YAAY,sBAAuBhb,GAR3B,UAQ/B6f,EAR+B,SAajC,UAJEntC,EAAM7N,GACVg7C,EACAlP,GAAwBruB,GAAMkJ,GAAS2oB,SAXJ,sBAc7B,IAAIvF,GACRl8B,EAAIqY,MADA,0CAE+BiB,IAhBF,gCAmB9BtZ,EAAIuP,QAnB0B,wLAyBV,WAC3Bw+B,EACArQ,GAF2B,4FAIT7/B,KAAKmwC,kCACrBD,EACArQ,GANyB,cAIrB19B,EAJqB,yBAQpBA,EAAIlG,OARgB,kLAcL,WACtBsZ,EACAsqB,EACAhC,GAHsB,+FAMpB+B,GAA4BC,GADvB7H,EALe,EAKfA,WAAYjB,EALG,EAKHA,OAEbtH,EAAOzvB,KAAKqvC,WAChB,CAAC95B,EAAU8T,YACX2O,OACA1+B,GAHW,kBAKNy9B,GALM,IAMT8G,MAAgB,MAATA,EAAgBA,EAAQ9G,OAAAA,QAAAA,IAAAA,OAAAA,EAAAA,EAAQ8G,SAbrB,SAiBE79B,KAAKyqC,YAAY,qBAAsBhb,GAjBzC,UAiBhB6f,EAjBgB,SAmBlB,UADEntC,EAAM7N,GAAOg7C,EAAWnP,GAAc8D,OAlBtB,sBAoBd,IAAI5F,GACRl8B,EAAIqY,MADA,yCAE8BjF,EAAU8T,aAtB1B,gCAyBflnB,EAAIuP,QAzBW,oLAiCA,WACtBgY,EACA0mB,GAFsB,qGAKpBxQ,GAA4BwQ,GADvBpY,EAJe,EAIfA,WAAYjB,EAJG,EAIHA,OAEZsZ,GANe,EAMuBtZ,GAAU,CAAC,GAAjDsZ,SAAaC,GANE,aAOhB7gB,EAAOzvB,KAAKqvC,WAChB,CAAC3lB,EAAUL,YACX2O,EACAqY,GAAY,SACZC,GAXoB,SAaEtwC,KAAKyqC,YAAY,qBAAsBhb,GAbzC,UAahB6f,EAbgB,SAelB,UADEntC,EAAM7N,GAAOg7C,EAAWnP,GAAcpuB,GAAM8xB,QAd5B,sBAgBd,IAAIxF,GACRl8B,EAAIqY,MADA,kDAEuCkP,EAAUL,aAlBnC,gCAqBflnB,EAAIuP,QArBW,yLA6BM,WAC5BgY,EACA0mB,GAF4B,+FAU1BxQ,GAA4BwQ,GADvBpY,EATqB,EASrBA,WAAYjB,EATS,EASTA,OAEbtH,EAAOzvB,KAAKqvC,WAChB,CAAC3lB,EAAUL,YACX2O,EACA,aACAjB,GAf0B,SAiBJ/2B,KAAKyqC,YAAY,qBAAsBhb,GAjBnC,UAiBtB6f,EAjBsB,SAsBxB,UAJEntC,EAAM7N,GACVg7C,EACAnP,GAAcpuB,GAAMiyB,QApBM,sBAuBpB,IAAI3F,GACRl8B,EAAIqY,MADA,kDAEuCkP,EAAUL,aAzB7B,gCA4BrBlnB,EAAIuP,QA5BiB,kLA4CN,WACtB6+B,EAGAvY,GAJsB,qGASpBwY,EADqB,iBAAZD,EACMA,EAGbA,EACoBntB,UAbF,SAmBpBqtB,EAAmBvnB,KAAAA,OAAYsnB,GAnBX,qDAqBd,IAAIz7C,MAAM,qCAAuCy7C,GArBnC,cAwBtBryC,GAAmC,KAA5BsyC,EAAiB78C,OAAe,gCAEjC88C,EAAyB1Y,GAAch4B,KAAKg4B,WAG9Cjf,GAAO,EAEL43B,EAAsB,IAAInY,SAG7B,SAACC,EAASsU,GACX,IACE6D,EAAiB,EAAKC,YACpBL,GACA,SAAC9+B,EAAyBuH,GACxB23B,OAAiBt3C,EACjB,IAAMknC,EAAW,CACfvnB,QAAAA,EACAhd,MAAOyV,GAETqH,GAAO,EACP0f,EAAQ,CAACqY,OAAQ5jB,GAAkB6jB,UAAWvQ,SAAAA,GATjC,GAWfkQ,EAIH,CAFC,MAAOxmB,GACP6iB,EAAO7iB,EACR,CApByB,IAuBtB8mB,EAAgB,IAAIxY,SAGxBC,SAAAA,GACA,GAAwB,kBAAb8X,EAAuB,CAChC,IAAIU,EAAY,EAAK3G,mCAAqC,IAC1D,OAAQoG,GACN,IAAK,YACL,IAAK,SACL,IAAK,SACL,IAAK,YACL,IAAK,eACHO,EAAY,EAAK3G,mCAAqC,IAS1D4G,EAAYxY,YACV,kBAAMD,EAAQ,CAACqY,OAAQ5jB,GAAkBikB,UAAWF,UAAAA,GAApD,GACAA,EAnBJ,KAqBO,CACL,IAAIla,EACFwZ,EACIa,EAAgB,yCAAG,kHAEK,EAAKC,eAAerZ,GAFzB,cAEfuJ,EAFe,yBAGdA,GAHc,0DAKb,GALa,yDAAH,sDAQtB,uBAAC,yGACgC6P,IADhC,UACKE,EADL,QAEKv4B,EAFL,sDAGQu4B,GAAsBva,EAAOzC,sBAHrC,iCAISgE,GAAM,KAJf,WAKOvf,EALP,oEAM8Bq4B,IAN9B,WAMGE,EANH,QAOOv4B,EAPP,0EASC0f,EAAQ,CAACqY,OAAQ5jB,GAAkBqkB,uBATpC,2CAAD,EAWD,CA/CmB,IAtDA,oBA0GE/Y,QAAQgZ,KAAK,CAACb,EAAqBK,IA1GrC,QA0GdS,EA1Gc,YA2GZA,EAAQX,OA3GI,cA4Gb5jB,GAAkBqkB,qBA5GL,UA8GbrkB,GAAkB6jB,UA9GL,UAiHb7jB,GAAkBikB,UAjHL,0BA6GV,IAAI3mB,GAA2CgmB,GA7GrC,eA+GhB9+B,EAAS+/B,EAAQjR,SA/GD,mCAkHV,IAAI9V,GACR8lB,EACAiB,EAAQR,UAAY,KApHN,yBAwHpBS,aAAaR,GACTN,GACF5wC,KAAK2xC,wBAAwBf,GA1HX,8CA6Hfl/B,GA7He,oMAmIH,2GACK1R,KAAKyqC,YAAY,kBAAmB,IADzC,UACb6E,EADa,SAGf,UADEntC,EAAM7N,GAAOg7C,EAAWnP,GAAcpuB,GAAM2zB,QAF/B,sBAIX,IAAIrH,GAAmBl8B,EAAIqY,MAAO,+BAJvB,gCAMZrY,EAAIuP,QANQ,4KAYA,WAACsmB,GAAD,uFACbvI,EAAOzvB,KAAKqvC,WAAW,GAAIrX,GADd,SAEKh4B,KAAKyqC,YAAY,kBAAmBhb,GAFzC,UAEb6f,EAFa,SAIf,UADEntC,EAAM7N,GAAOg7C,EAAW/I,MAHX,sBAKX,IAAIlI,GAAmBl8B,EAAIqY,MAAO,+BALvB,gCAOZrY,EAAIuP,QAPQ,qKAaR,WACXmuB,GADW,+FAITD,GAA4BC,GADvB7H,EAHI,EAGJA,WAAYjB,EAHR,EAGQA,OAEbtH,EAAOzvB,KAAKqvC,WAChB,GACArX,OACA1+B,EACAy9B,GATS,SAWa/2B,KAAKyqC,YAAY,UAAWhb,GAXzC,UAWL6f,EAXK,SAaP,UADEntC,EAAM7N,GAAOg7C,EAAWnP,GAActiC,SAZjC,sBAcH,IAAIwgC,GAAmBl8B,EAAIqY,MAAO,sBAd/B,gCAgBJrY,EAAIuP,QAhBA,2KAsBM,WACjBmuB,GADiB,+FAIfD,GAA4BC,GADvB7H,EAHU,EAGVA,WAAYjB,EAHF,EAGEA,OAEbtH,EAAOzvB,KAAKqvC,WAChB,GACArX,OACA1+B,EACAy9B,GATe,SAWO/2B,KAAKyqC,YAAY,gBAAiBhb,GAXzC,UAWX6f,EAXW,SAab,UADEntC,EAAM7N,GAAOg7C,EAAWnP,GAAc7kB,SAZ3B,sBAcT,IAAI+iB,GAAmBl8B,EAAIqY,MAAO,6BAdzB,gCAgBVrY,EAAIuP,QAhBM,4KAyBC,WAClBkgC,EACAC,GAFkB,uFAIZpiB,EAAO,CAACmiB,EAAWC,GAJP,SAKM7xC,KAAKyqC,YAAY,iBAAkBhb,GALzC,UAKZ6f,EALY,SAOd,UADEntC,EAAM7N,GAAOg7C,EAAWnP,GAAcpuB,GAAM0tB,QANhC,sBAQV,IAAIpB,GAAmBl8B,EAAIqY,MAAO,8BARxB,gCAUXrY,EAAIuP,QAVO,kLAgBI,WACtB0R,EACA2T,GAFsB,kGAIiB/2B,KAAK8xC,qBAC1C,CAAC1uB,GACD2T,GANoB,uBAIf9d,EAJe,EAIfA,QAIP9a,GAAyB,KAJFzJ,EAJD,EAINuH,OAIFrI,QACRqI,EAAQvH,EAAO,GATC,kBAUf,CAACukB,QAAAA,EAAShd,MAAAA,IAVK,oLAgBE,WACxBm4B,EACA2C,GAFwB,uFAIlB2D,EAAgB,CAACtG,GACnB2C,GACF2D,EAAO9hC,KAAKm+B,GANU,SAQA/2B,KAAKyqC,YAAY,uBAAwB/P,GARzC,UAQlB4U,EARkB,SAUpB,UADEntC,EAAM7N,GAAOg7C,EAAWxI,MATN,sBAWhB,IAAIzI,GAAmBl8B,EAAIqY,MAAO,kCAXlB,gCAajBrY,EAAIuP,QAba,mLAmBD,WACvBmuB,GADuB,+FAIrBD,GAA4BC,GADvB7H,EAHgB,EAGhBA,WAAYjB,EAHI,EAGJA,OAEbtH,EAAOzvB,KAAKqvC,WAChB,GACArX,OACA1+B,EACAy9B,GATqB,SAWC/2B,KAAKyqC,YAAY,sBAAuBhb,GAXzC,UAWjB6f,EAXiB,SAanB,UADEntC,EAAM7N,GAAOg7C,EAAWnP,GAActiC,SAZrB,sBAcf,IAAIwgC,GACRl8B,EAAIqY,MACJ,mCAhBmB,gCAmBhBrY,EAAIuP,QAnBY,4KA2BL,WAACsmB,GAAD,4FACGh4B,KAAK+xC,UAAU,CAClC/Z,WAAAA,EACAga,mCAAmC,IAHnB,cACZtgC,EADY,yBAKXA,EAAOzV,MAAM6mC,OALF,kLAWM,WACxB9K,GADwB,uFAGlBvI,EAAOzvB,KAAKqvC,WAAW,GAAIrX,GAHT,SAIAh4B,KAAKyqC,YAAY,uBAAwBhb,GAJzC,UAIlB6f,EAJkB,SAMpB,UADEntC,EAAM7N,GAAOg7C,EAAW9M,MALN,sBAOhB,IAAInE,GAAmBl8B,EAAIqY,MAAO,2BAPlB,gCASjBrY,EAAIuP,QATa,gLAeF,WACtB2c,EACAwP,EACAgC,GAHsB,+FAMpBD,GAA4BC,GADvB7H,EALe,EAKfA,WAAYjB,EALG,EAKHA,OAEbtH,EAAOzvB,KAAKqvC,WAChB,CAAChhB,EAAU1pB,KAAIqnB,SAAAA,GAAM,OAAIA,EAAO3C,UAAX,KACrB2O,OACA1+B,GAHW,kBAKNy9B,GALM,IAMT8G,MAAgB,MAATA,EAAgBA,EAAQ9G,OAAAA,QAAAA,IAAAA,OAAAA,EAAAA,EAAQ8G,SAbrB,SAgBE79B,KAAKyqC,YAAY,qBAAsBhb,GAhBzC,UAgBhB6f,EAhBgB,SAkBlB,UADEntC,EAAM7N,GAAOg7C,EAAWvO,MAjBR,sBAmBd,IAAI1C,GAAmBl8B,EAAIqY,MAAO,kCAnBpB,gCAqBfrY,EAAIuP,QArBW,8KA2BN,WAChBmuB,GADgB,+FAIdD,GAA4BC,GADvB7H,EAHS,EAGTA,WAAYjB,EAHH,EAGGA,OAEbtH,EAAOzvB,KAAKqvC,WAChB,GACArX,OACA1+B,EACAy9B,GATc,SAWQ/2B,KAAKyqC,YAAY,eAAgBhb,GAXzC,UAWV6f,EAXU,SAaZ,UADEntC,EAAM7N,GAAOg7C,EAAW7M,MAZd,sBAcR,IAAIpE,GAAmBl8B,EAAIqY,MAAO,4BAd1B,gCAgBTrY,EAAIuP,QAhBK,8KAsBI,6GACI1R,KAAKyqC,YAAY,mBAAoB,IADzC,UACd6E,EADc,SAGhB,UADEntC,EAAM7N,GAAOg7C,EAAW5M,MAFV,sBAIZ,IAAIrE,GAAmBl8B,EAAIqY,MAAO,gCAJtB,cAMdy3B,EAAgB9vC,EAAIuP,OANN,kBAOb,IAAI0rB,GACT6U,EAAc5U,cACd4U,EAAc3U,yBACd2U,EAAc1U,OACd0U,EAAczU,iBACdyU,EAAcxU,kBAZI,8KAoBC,2GACGz9B,KAAKyqC,YAAY,oBAAqB,IADzC,UACf6E,EADe,SAGjB,UADEntC,EAAM7N,GAAOg7C,EAAW3M,MAFT,sBAIb,IAAItE,GAAmBl8B,EAAIqY,MAAO,iCAJrB,gCAMdrY,EAAIuP,QANU,8LAagB,WACrCof,EACAkH,GAFqC,uFAI/BvI,EAAOzvB,KAAKqvC,WAAW,CAACve,GAAakH,GAJN,SAKbh4B,KAAKyqC,YAC3B,oCACAhb,GAPmC,UAK/B6f,EAL+B,SAUjC,UADEntC,EAAM7N,GAAOg7C,EAAWvI,MATO,uBAWnChS,QAAQC,KAAK,sDAXsB,kBAY5B,GAZ4B,gCAc9B7yB,EAAIuP,QAd0B,4LAuBL,WAChCsmB,GADgC,uFAK1BvI,EAAOzvB,KAAKqvC,WAAW,GAAIrX,GALD,SAMRh4B,KAAKyqC,YAAY,qBAAsBhb,GAN/B,UAM1B6f,EAN0B,SAQ5B,UADEntC,EAAM7N,GAAOg7C,EAAWrG,MAPE,sBASxB,IAAI5K,GAAmBl8B,EAAIqY,MAAO,kCATV,gCAWzBrY,EAAIuP,QAXqB,yLAkBD,WAC/BmgC,GAD+B,8FAGP7xC,KAAKyqC,YAC3B,8BACAoH,EAAQ,CAACA,GAAS,IALW,UAGzBvC,EAHyB,SAQ3B,UADEntC,EAAM7N,GAAOg7C,EAAWlG,MAPC,sBASvB,IAAI/K,GACRl8B,EAAIqY,MACJ,4CAX2B,gCAexBrY,EAAIuP,QAfoB,0LAuBC,WAChCgjB,EACAsD,GAFgC,6FAI1BvI,EAAOzvB,KAAKqvC,WAAW,CAAC3a,GAAYsD,GAJV,SAKRh4B,KAAKyqC,YAC3B,+BACAhb,GAP8B,UAK1B6f,EAL0B,SAW5B,UADEntC,EAAM7N,GAAOg7C,EAAW9F,MAVE,sBAYxB,IAAInL,GAAmBl8B,EAAIqY,MAAO,gCAZV,gBAcPrY,EAAIuP,OAAtBuH,EAdyB,EAczBA,QAAShd,EAdgB,EAchBA,MAdgB,kBAezB,CACLgd,QAAAA,EACAhd,MAAiB,OAAVA,EAAiBA,EAAMk9B,cAAgB,OAjBhB,gLAwBZ,WACpB94B,EACA23B,GAFoB,yFAIdka,EAAc7xC,EAAQmoB,YAAYprB,SAAS,UAC3CqyB,EAAOzvB,KAAKqvC,WAAW,CAAC6C,GAAcla,GALxB,SAMIh4B,KAAKyqC,YAAY,mBAAoBhb,GANzC,UAMd6f,EANc,SAShB,UADEntC,EAAM7N,GAAOg7C,EAAWlP,GAAwBnlB,GAASpd,UAR3C,sBAUZ,IAAIwgC,GAAmBl8B,EAAIqY,MAAO,sBAVtB,UAYD,OAAfrY,EAAIuP,OAZY,uBAaZ,IAAI3c,MAAM,qBAbE,iCAeboN,EAAIuP,QAfS,mLAwBE,WACtBsmB,GADsB,qGAIFh4B,KAAKmyC,6BAA6Bna,GAJhC,cAId71B,EAJc,yBAKbA,EAAIlG,OALS,sCAOd,IAAIlH,MAAM,mCAAqC,EAArC,IAPI,yLAeA,WACtB8qC,GADsB,qGAIF7/B,KAAKoyC,6BAA6BvS,GAJhC,cAId19B,EAJc,yBAKbA,EAAIlG,OALS,sCAOd,IAAIlH,MAAM,mCAAqC,EAArC,IAPI,mMAeU,WAChC8qC,GADgC,+FAI9BD,GAA4BC,GADvB7H,EAHyB,EAGzBA,WAAYjB,EAHa,EAGbA,OAEbtH,EAAOzvB,KAAKqvC,WAChB,GACArX,OACA1+B,EACAy9B,GAT8B,SAWR/2B,KAAKyqC,YAAY,qBAAsBhb,GAX/B,UAW1B6f,EAX0B,SAa5B,UADEntC,EAAM7N,GAAOg7C,EAAWnG,MAZE,sBAcxB,IAAI9K,GAAmBl8B,EAAIqY,MAAO,kCAdV,gCAgBzBrY,EAAIuP,QAhBqB,wKAsBlB,2GACU1R,KAAKyqC,YAAY,aAAc,IADzC,UACR6E,EADQ,SAGV,UADEntC,EAAM7N,GAAOg7C,EAAWnP,GAAc2B,OAF9B,sBAIN,IAAIzD,GAAmBl8B,EAAIqY,MAAO,yBAJ5B,gCAMPrY,EAAIuP,QANG,2KAYI,2GACM1R,KAAKyqC,YAAY,iBAAkB,IADzC,UACZ6E,EADY,SAGd,UADEntC,EAAM7N,GAAOg7C,EAAWnP,GAAc7kB,SAF1B,sBAIV,IAAI+iB,GAAmBl8B,EAAIqY,MAAO,8BAJxB,gCAMXrY,EAAIuP,QANO,qKAiCN,WACZisB,EACA0U,GAFY,iGAIiBzS,GAA4ByS,GAAlDra,EAJK,EAILA,WAAYjB,EAJP,EAIOA,OACbtH,EAAOzvB,KAAKsyC,2BAChB,CAAC3U,GACD3F,OACA1+B,EACAy9B,GATU,SAWY/2B,KAAKyqC,YAAY,WAAYhb,GAXzC,UAWN6f,EAXM,SAcR,UAFEntC,EAAM7N,GAAOg7C,EAAW9G,MAZlB,sBAeJ,IAAInK,GAAmBl8B,EAAIqY,MAAO,iCAf9B,UAkBN9I,EAASvP,EAAIuP,OAlBP,0CAmBQA,GAnBR,0CAAC,UAsBRA,GAtBO,IAuBV6qB,aAAc7qB,EAAO6qB,aAAa53B,KAAI,gBAAEwsB,EAAF,EAAEA,YAAapF,EAAf,EAAeA,KAAMwU,EAArB,EAAqBA,QAArB,MAAmC,CACvExU,KAAAA,EACAoF,aAAa,kBACRA,GADM,IAET9wB,QAASigC,GAA6BC,EAASpP,EAAY9wB,WAE7DkgC,QAAAA,EANoC,OAvB5B,+KAqCM,WAClBV,GADkB,+FAIhBD,GAA4BC,GADvB7H,EAHW,EAGXA,WAAYjB,EAHD,EAGCA,OAEbtH,EAAOzvB,KAAKqvC,WAChB,GACArX,OACA1+B,EACAy9B,GATgB,SAWM/2B,KAAKyqC,YAAY,iBAAkBhb,GAXzC,UAWZ6f,EAXY,SAad,UADEntC,EAAM7N,GAAOg7C,EAAWnP,GAActiC,SAZ1B,sBAcV,IAAIwgC,GACRl8B,EAAIqY,MACJ,0CAhBc,gCAoBXrY,EAAIuP,QApBO,gLA0BI,WACtB0+B,GADsB,8FAMY,kBAAvBA,EACTpY,EAAaoY,EACJA,IACU1hC,EAAc0hC,EAA1BpY,WAAkB9f,GADI,OACIk4B,EADJ,IAE7BpY,EAAatpB,EACb6jC,EAAQr6B,GAGJuX,EAAOzvB,KAAKqvC,WAAW,GAAIrX,EAAY,SAAUua,GAdjC,SAeEvyC,KAAKyqC,YAAY,qBAAsBhb,GAfzC,UAehB6f,EAfgB,SAiBlB,UADEntC,EAAM7N,GAAOg7C,EAAWnN,MAhBR,sBAkBd,IAAI9D,GACRl8B,EAAIqY,MACJ,8CApBkB,gCAwBfrY,EAAIuP,QAxBW,4KAoDJ,WAClB0R,EACAivB,GAFkB,iGAIWzS,GAA4ByS,GAAlDra,EAJW,EAIXA,WAAYjB,EAJD,EAICA,OACbtH,EAAOzvB,KAAKsyC,2BAChB,CAAClvB,GACD4U,OACA1+B,EACAy9B,GATgB,SAWM/2B,KAAKyqC,YAAY,iBAAkBhb,GAXzC,UAWZ6f,EAXY,SAad,UADEntC,EAAM7N,GAAOg7C,EAAWvG,MAZZ,sBAcV,IAAI1K,GAAmBl8B,EAAIqY,MAAO,6BAdxB,UAiBZ9I,EAASvP,EAAIuP,OAjBD,0CAkBEA,GAlBF,0CAAC,UAqBdA,GArBa,IAsBhByf,aAAa,kBACRzf,EAAOyf,aADD,IAET9wB,QAASigC,GACP5uB,EAAO6uB,QACP7uB,EAAOyf,YAAY9wB,cA1BP,qLAmCM,WACxB+iB,EACAyc,GAFwB,+FAKtBD,GAA4BC,GADvB7H,EAJiB,EAIjBA,WAAYjB,EAJK,EAILA,OAEbtH,EAAOzvB,KAAKsyC,2BAChB,CAAClvB,GACD4U,EACA,aACAjB,GAVsB,SAYA/2B,KAAKyqC,YAAY,iBAAkBhb,GAZnC,UAYlB6f,EAZkB,SAcpB,UADEntC,EAAM7N,GAAOg7C,EAAWtG,MAbN,sBAehB,IAAI3K,GAAmBl8B,EAAIqY,MAAO,6BAflB,gCAiBjBrY,EAAIuP,QAjBa,qLAuBC,WACzB0iB,EACAyL,GAFyB,sGAKvBD,GAA4BC,GADvB7H,EAJkB,EAIlBA,WAAYjB,EAJM,EAINA,OAEboX,EAAQ/Z,EAAWzvB,KAAIye,SAAAA,GAO3B,MAAO,CACLgrB,WAAY,iBACZ3e,KARW,EAAK6iB,2BAChB,CAAClvB,GACD4U,EACA,aACAjB,GALU,IANW,SAmBD/2B,KAAK0qC,iBAAiByD,GAnBrB,cAmBnBmB,EAnBmB,OAoBnBntC,EAAMmtC,EAAU3qC,KAAK2qC,SAAAA,GACzB,IAAMntC,EAAM7N,GAAOg7C,EAAWtG,IAC9B,GAAI,UAAW7mC,EACb,MAAM,IAAIk8B,GAAmBl8B,EAAIqY,MAAO,8BAE1C,OAAOrY,EAAIuP,MALD,IApBa,kBA4BlBvP,GA5BkB,+KA6DN,WACnBiyB,EACAyL,GAFmB,sGAKjBD,GAA4BC,GADvB7H,EAJY,EAIZA,WAAYjB,EAJA,EAIAA,OAEboX,EAAQ/Z,EAAWzvB,KAAIye,SAAAA,GAO3B,MAAO,CACLgrB,WAAY,iBACZ3e,KARW,EAAK6iB,2BAChB,CAAClvB,GACD4U,OACA1+B,EACAy9B,GALU,IANK,SAmBK/2B,KAAK0qC,iBAAiByD,GAnB3B,cAmBbmB,EAnBa,OAoBbntC,EAAMmtC,EAAU3qC,KAAK2qC,SAAAA,GACzB,IAAMntC,EAAM7N,GAAOg7C,EAAWvG,IAC9B,GAAI,UAAW5mC,EACb,MAAM,IAAIk8B,GAAmBl8B,EAAIqY,MAAO,8BAE1C,IAAM9I,EAASvP,EAAIuP,OACnB,OAAKA,GAEE,kBACFA,GADL,IAEEyf,aAAa,kBACRzf,EAAOyf,aADD,IAET9wB,QAASigC,GACP5uB,EAAO6uB,QACP7uB,EAAOyf,YAAY9wB,aARLqR,CANV,IApBO,kBAwCZvP,GAxCY,iLAiDE,WACrBw7B,EACA3F,GAFqB,2FAIfvI,EAAOzvB,KAAKsyC,2BAA2B,CAAC3U,GAAO3F,GAJhC,SAKGh4B,KAAKyqC,YAAY,oBAAqBhb,GALzC,UAKf6f,EALe,SAQjB,UAFEntC,EAAM7N,GAAOg7C,EAAWzG,MANT,sBASb,IAAIxK,GAAmBl8B,EAAIqY,MAAO,iCATrB,UAYf9I,EAASvP,EAAIuP,OAZE,uBAcb,IAAI3c,MAAM,mBAAqB4oC,EAAO,cAdzB,eAiBf6U,GAjBe,QAAC,UAkBjB9gC,GAlBgB,IAmBnB6qB,aAAc7qB,EAAO6qB,aAAa53B,KAAI,YAAyB,IAAvBwsB,EAAuB,EAAvBA,YAAapF,EAAU,EAAVA,KAC7C1rB,EAAU,IAAImvB,GAAQ2B,EAAY9wB,SACxC,MAAO,CACL0rB,KAAAA,EACAoF,aAAa,kBACRA,GADM,IAET9wB,QAAAA,IANQ,MAnBK,2BAAC,UAgCjBmyC,GAhCgB,IAiCnBjW,aAAciW,EAAMjW,aAAa53B,KAAI,YAAyB,IAAvBwsB,EAAuB,EAAvBA,YACrC,MAAO,CACLpF,KAF0D,EAAVA,KAGhDoF,YAAagD,GAAYkD,SACvBlG,EAAY9wB,QACZ8wB,EAAYiD,YALJ,OAjCK,0KAgDR,WACbwd,EACAa,EACAza,GAHa,uFAKPvI,EAAOzvB,KAAKsyC,gCACJh5C,IAAZm5C,EAAwB,CAACb,EAAWa,GAAW,CAACb,GAChD5Z,GAPW,SASWh4B,KAAKyqC,YAAY,YAAahb,GATzC,UASP6f,EATO,SAWT,UADEntC,EAAM7N,GAAOg7C,EAAWnP,GAAcpuB,GAAMlU,UAVrC,sBAYL,IAAIwgC,GAAmBl8B,EAAIqY,MAAO,wBAZ7B,gCAcNrY,EAAIuP,QAdE,oLAoBS,WACtBisB,EACA3F,GAFsB,yFAIhBvI,EAAOzvB,KAAKsyC,2BAChB,CAAC3U,GACD3F,OACA1+B,EACA,CACEo5C,mBAAoB,aACpB/J,SAAS,IAVS,SAaE3oC,KAAKyqC,YAAY,WAAYhb,GAb/B,UAahB6f,EAbgB,SAelB,UADEntC,EAAM7N,GAAOg7C,EAAWxG,MAdR,sBAgBd,IAAIzK,GAAmBl8B,EAAIqY,MAAO,uBAhBpB,UAkBhB9I,EAASvP,EAAIuP,OAlBG,uBAoBd,IAAI3c,MAAM,SAAW4oC,EAAO,cApBd,iCAsBfjsB,GAtBe,4LA8BS,WAC/BisB,EACA3F,GAF+B,yFAIzBvI,EAAOzvB,KAAKsyC,2BAChB,CAAC3U,GACD3F,OACA1+B,EACA,CACEo5C,mBAAoB,aACpB/J,SAAS,IAVkB,SAaP3oC,KAAKyqC,YAAY,oBAAqBhb,GAb/B,UAazB6f,EAbyB,SAe3B,UADEntC,EAAM7N,GAAOg7C,EAAWxG,MAdC,sBAgBvB,IAAIzK,GAAmBl8B,EAAIqY,MAAO,iCAhBX,UAkBzB9I,EAASvP,EAAIuP,OAlBY,uBAoBvB,IAAI3c,MAAM,mBAAqB4oC,EAAO,cApBf,iCAsBxBjsB,GAtBwB,wLA8BJ,WAC3B0R,EACA4U,GAF2B,6FAIrBvI,EAAOzvB,KAAKsyC,2BAA2B,CAAClvB,GAAY4U,GAJ/B,SAKHh4B,KAAKyqC,YAAY,0BAA2Bhb,GALzC,UAKrB6f,EALqB,SAOvB,UADEntC,EAAM7N,GAAOg7C,EAAWvG,MANH,sBAQnB,IAAI1K,GAAmBl8B,EAAIqY,MAAO,6BARf,UAWrB9I,EAASvP,EAAIuP,OAXQ,0CAYPA,GAZO,eAcrBrR,EAAU,IAAImvB,GAAQ9d,EAAOyf,YAAY9wB,SACzC+zB,EAAa1iB,EAAOyf,YAAYiD,WAfX,2BAAC,UAiBvB1iB,GAjBsB,IAkBzByf,YAAagD,GAAYkD,SAASh3B,EAAS+zB,MAlBlB,8LA2BM,WACjChR,EACA4U,GAFiC,uFAI3BvI,EAAOzvB,KAAKsyC,2BAChB,CAAClvB,GACD4U,EACA,cAP+B,SASTh4B,KAAKyqC,YAAY,0BAA2Bhb,GATnC,UAS3B6f,EAT2B,SAW7B,UADEntC,EAAM7N,GAAOg7C,EAAWtG,MAVG,sBAYzB,IAAI3K,GACRl8B,EAAIqY,MACJ,uCAd6B,gCAiB1BrY,EAAIuP,QAjBsB,8LAyBC,WAClC0iB,EACA4D,GAFkC,8FAI5BmW,EAAQ/Z,EAAWzvB,KAAIye,SAAAA,GAM3B,MAAO,CACLgrB,WAAY,0BACZ3e,KAPW,EAAK6iB,2BAChB,CAAClvB,GACD4U,EACA,cAJU,IAJoB,SAgBVh4B,KAAK0qC,iBAAiByD,GAhBZ,cAgB5BmB,EAhB4B,OAiB5BntC,EAAMmtC,EAAU3qC,KAAK2qC,SAAAA,GACzB,IAAMntC,EAAM7N,GAAOg7C,EAAWtG,IAC9B,GAAI,UAAW7mC,EACb,MAAM,IAAIk8B,GACRl8B,EAAIqY,MACJ,wCAGJ,OAAOrY,EAAIuP,MARD,IAjBsB,kBA4B3BvP,GA5B2B,gMAyCE,WACpC2nB,EACA8nB,EACAa,GAHoC,6FAKhCn5B,EAAe,CAAC,EALgB,SAOJtZ,KAAK2yC,yBAPD,OAOhCC,EAPgC,iBAQ3B,UAAWt5B,EARgB,wBASlCs4B,GACiB,GAAKA,EAAYgB,GAVA,6EAeZ5yC,KAAK6yC,4BACvBjB,EACA,aAjB8B,SAe1BY,EAf0B,QAmBtBpe,WAAWxgC,OAAS,IAC5B0lB,EAAQw5B,MACNN,EAAMpe,WAAWoe,EAAMpe,WAAWxgC,OAAS,GAAGwJ,YArBlB,uDAwB5B8sB,EAAAA,cAAen1B,OAASm1B,EAAAA,GAAI7pB,QAAQnC,SAAS,YAxBjB,kHAgCH8B,KAAK+yC,QAAQ,aAhCV,QAgChCC,EAhCgC,kBAiC3B,WAAY15B,EAjCe,wBAkClCm5B,EACcO,GAnCoB,gFAwCZhzC,KAAK6yC,4BAA4BJ,GAxCrB,SAwC1BD,EAxC0B,QAyCtBpe,WAAWxgC,OAAS,IAC5B0lB,EAAQ25B,OACNT,EAAMpe,WAAWoe,EAAMpe,WAAWxgC,OAAS,GAAGwJ,YA3ClB,wDA8C5B8sB,EAAAA,cAAen1B,OAASm1B,EAAAA,GAAI7pB,QAAQnC,SAAS,YA9CjB,oHAsDC8B,KAAKkzC,kCACxCppB,EACAxQ,GAxDkC,eAsD9B65B,EAtD8B,yBA0D7BA,EAAuBxuC,KAAIkoC,SAAAA,GAAI,OAAIA,EAAKzpB,SAAT,KA1DF,qNAqEC,WACrC0G,EACAxQ,EACA0e,GAHqC,uFAK/BvI,EAAOzvB,KAAKsyC,2BAChB,CAACxoB,EAAQT,YACT2O,OACA1+B,EACAggB,GATmC,SAWbtZ,KAAKyqC,YAC3B,oCACAhb,GAbmC,UAW/B6f,EAX+B,SAgBjC,UADEntC,EAAM7N,GAAOg7C,EAAWlL,MAfO,sBAiB7B,IAAI/F,GACRl8B,EAAIqY,MACJ,kDAnBiC,gCAsB9BrY,EAAIuP,QAtB0B,yLAiCV,WAC3BoY,EACAxQ,EACA0e,GAH2B,uFAKrBvI,EAAOzvB,KAAKsyC,2BAChB,CAACxoB,EAAQT,YACT2O,OACA1+B,EACAggB,GATyB,SAWHtZ,KAAKyqC,YAAY,0BAA2Bhb,GAXzC,UAWrB6f,EAXqB,SAavB,UADEntC,EAAM7N,GAAOg7C,EAAW/K,MAZH,sBAcnB,IAAIlG,GACRl8B,EAAIqY,MACJ,wCAhBuB,gCAmBpBrY,EAAIuP,QAnBgB,uLAsBF,WACzBkd,EACAmI,GAFyB,kGAImB/2B,KAAKiwC,yBAC/CrhB,EACAmI,GANuB,uBAIlB9d,EAJkB,EAIlBA,QAAgBm6B,EAJE,EAITn3C,MAKZA,EAAQ,KACQ,OAAhBm3C,IACFn3C,EAAQ,IAAIyiC,GAA0B,CACpC9pB,IAAKga,EACL3R,MAAOyhB,GAA0BhW,YAAY0qB,EAAYzzC,SAbpC,kBAiBlB,CACLsZ,QAAAA,EACAhd,MAAAA,IAnBuB,kLA0BH,WACtBm9B,EACApB,GAFsB,kGAIsBh4B,KAAKiwC,yBAC/C7W,EACApB,GANoB,uBAIf/e,EAJe,EAIfA,QAAgBm6B,EAJD,EAINn3C,MAKZA,EAAQ,KACQ,OAAhBm3C,IACFn3C,EAAQg9B,GAAaoa,gBAAgBD,EAAYzzC,OAX7B,kBAcf,CACLsZ,QAAAA,EACAhd,MAAAA,IAhBoB,wKAuBV,WACZm9B,EACApB,GAFY,sFAICh4B,KAAKszC,mBAAmBla,EAAcpB,GAChDwX,MAAKrnC,SAAAA,GAAC,OAAIA,EAAElM,KAAN,IACNwzC,OAAMj2C,SAAAA,GACL,MAAM,IAAIzE,MACR,mCACEqkC,EAAa/P,WACb,KACA7vB,EAPK,IAJD,sNA8BM,WAClB6I,EACAs4B,GAFkB,8FAIM36B,KAAKyqC,YAAY,iBAAkB,CACzDpoC,EAAGgnB,WACHsR,IANgB,UAIZ2U,EAJY,SASd,UADEntC,EAAM7N,GAAOg7C,EAAW7F,MARZ,sBAUV,IAAIpL,GACRl8B,EAAIqY,MADA,qBAEUnY,EAAGgnB,WAFb,YAVU,gCAeXlnB,EAAIuP,QAfO,+LAqBiB,WACnC6hC,GADmC,iFAG9BA,EAH8B,4BAK1BvzC,KAAKirC,kBALqB,gCAMzB3S,GAAM,KANmB,gCAQ3Bkb,EAAiBC,KAAKC,MAAQ1zC,KAAKkrC,eAAeE,UAClDuI,EAAUH,GA95IoB,IA+5IQ,OAAxCxzC,KAAKkrC,eAAeC,iBAA6BwI,EAVpB,0CAWxB3zC,KAAKkrC,eAAeC,iBAXI,yBAetBnrC,KAAK4zC,oBAfiB,yNAqBd,iGACrB5zC,KAAKirC,mBAAoB,EADJ,SAGb4I,EAAYJ,KAAKC,MACjBI,EAAwB9zC,KAAKkrC,eAAeC,gBAC5C4I,EAAkBD,EACpBA,EAAsBpf,UACtB,KACK/7B,EAAI,EARM,YAQHA,EAAI,IARD,iCASaqH,KAAKg0C,mBAAmB,aATrC,UASX7I,EATW,OAWb4I,IAAoB5I,EAAgBzW,UAXvB,wBAYf10B,KAAKkrC,eAAiB,CACpBC,gBAAAA,EACAC,UAAWqI,KAAKC,MAChBrI,sBAAuB,GACvBC,oBAAqB,IAhBR,kBAkBRH,GAlBQ,yBAsBX7S,GAAM2b,KAtBK,QAQKt7C,IARL,6BAyBb,IAAI5D,MAAJ,iDACsC0+C,KAAKC,MAAQG,EADnD,OAzBa,yBA6BnB7zC,KAAKirC,mBAAoB,EA7BN,iNAoCQ,WAC7BlU,GAD6B,+FAGW6I,GAA4B7I,GAA7DiB,EAHsB,EAGtBA,WAAoB0X,EAHE,EAGV3Y,OACbtH,EAAOzvB,KAAKqvC,WAAW,GAAIrX,EAAY,SAAU0X,GAJ1B,SAKL1vC,KAAKyqC,YAAY,4BAA6Bhb,GALzC,UAKvB6f,EALuB,SAOzB,UADEntC,EAAM7N,GAAOg7C,EAAWlP,GAAwBviC,SANzB,sBAQrB,IAAIwgC,GACRl8B,EAAIqY,MADA,0CARqB,gCAatBrY,EAAIuP,QAbkB,iLAyCN,WACvBwiC,EACAC,EACAC,GAHuB,mIAKnB,YAAaF,GALM,oBAOf/c,EADc+c,EACgB1rB,YAC9B6rB,EACJ/rB,EAAAA,GAAAA,KAAY6O,GAAiB/5B,SAAS,WACpCjE,MAAMC,QAAQ+6C,SAAwC76C,IAApB86C,EAVjB,sBAWb,IAAIr/C,MAAM,qBAXG,cAcfgiC,EAAcod,GAAmB,CAAC,GACjC9D,SAAW,SACZ,eAAgBtZ,IACpBA,EAAOiB,WAAah4B,KAAKg4B,YAGrBvI,EAAO,CAAC4kB,EAAoBtd,GApBb,UAqBG/2B,KAAKyqC,YAAY,sBAAuBhb,GArB3C,WAqBf6f,EArBe,SAuBjB,UADEntC,EAAM7N,GAAOg7C,EAAWvN,MAtBT,uBAwBb,IAAIhtC,MAAM,mCAAqCoN,EAAIqY,MAAMna,SAxB5C,iCA0Bd8B,EAAIuP,QA1BU,WA8BnBwiC,aAAgC/f,IAC9BmgB,EAA0BJ,GAC9B/iB,EAAc,IAAIgD,IACNE,SAAWigB,EAAWjgB,SAClClD,EAAY5F,aAAe2oB,EAAqB3oB,aAChD4F,EAAYoD,UAAY+f,EAAW/f,UACnCpD,EAAYiD,WAAakgB,EAAWlgB,aAEpCjD,EAAcgD,GAAYkD,SAAS6c,IAEvB1f,SAAWrD,EAAYsD,WAAQn7B,OAGrBA,IAApB66C,GAAkCh7C,MAAMC,QAAQ+6C,GA3C7B,uBA4Cf,IAAIp/C,MAAM,qBA5CK,WA+CjB6/B,EAAUuf,GACZhjB,EAAYoD,YAAaK,EAhDN,kBAiDrBzD,EAAAA,GAAYnb,KAAZmb,MAAAA,GAAAA,EAAAA,EAAAA,GAAoByD,IAjDC,wBAmDjB2e,EAAevzC,KAAKgrC,yBAnDH,yBAqDWhrC,KAAKu0C,gCACjChB,GAtDiB,WAqDbpI,EArDa,OAwDnBha,EAAYmD,qBAAuB6W,EAAgB7W,qBACnDnD,EAAYxB,gBAAkBwb,EAAgBzW,UAEzCE,EA3Dc,yDA6DnBzD,EAAAA,GAAYnb,KAAZmb,MAAAA,GAAAA,EAAAA,EAAAA,GAAoByD,IACfzD,EAAY/N,UA9DE,uBA+DX,IAAIruB,MAAM,cA/DC,WAkEbquB,EAAY+N,EAAY/N,UAAUhmB,SAAS,UAE9C4C,KAAKkrC,eAAeI,oBAAoBptC,SAASklB,IACjDpjB,KAAKkrC,eAAeG,sBAAsBntC,SAASklB,GArEnC,wBAyEjBpjB,KAAKkrC,eAAeI,oBAAoB1yC,KAAKwqB,GAzE5B,6BAgFjBmwB,GAAe,EAhFE,uCAqFjBlzC,EAAU8wB,EAAY2E,WACtB1E,EAAW/wB,EAAQmoB,YACnB2O,EAAkBhG,EAAY6F,WAAW5F,GACzCijB,EAAqBld,EAAgB/5B,SAAS,UAC9C25B,EAAc,CAClBsZ,SAAU,SACVrY,WAAYh4B,KAAKg4B,YAGfoc,IACI/lB,GACJl1B,MAAMC,QAAQg7C,GACVA,EACA/zC,EAAQiwB,iBACZ3rB,KAAIiQ,SAAAA,GAAG,OAAIA,EAAIyU,UAAR,IAET0N,EAAM,SAAe,CACnBsZ,SAAU,SACVhiB,UAAAA,IAIAuG,IACFmC,EAAOyd,WAAY,GAGf/kB,EAAO,CAAC4kB,EAAoBtd,GA/GX,UAgHC/2B,KAAKyqC,YAAY,sBAAuBhb,GAhHzC,WAgHjB6f,EAhHiB,SAkHnB,UADEntC,EAAM7N,GAAOg7C,EAAWvN,MAjHP,sBAoHjB,SAAU5/B,EAAIqY,QAChB4jB,EAAOj8B,EAAIqY,MAAM7a,KAAKy+B,OACVjlC,MAAMC,QAAQglC,KAElBqW,GADAC,EAAc,UACWtW,EAAKhmB,KAAKs8B,GACzC3f,QAAQva,MAAMrY,EAAIqY,MAAMna,QAASo0C,IAG/B,IAAItW,GACR,mCAAqCh8B,EAAIqY,MAAMna,QAC/C+9B,GA9HmB,iCAiIhBj8B,EAAIuP,QAjIY,kLA6JJ,WACnByf,EACAwjB,EACAr7B,GAHmB,2FAKf,YAAa6X,GALE,oBAMbwjB,IAAoBx7C,MAAMC,QAAQu7C,GANrB,sBAOT,IAAI5/C,MAAM,qBAPD,cAUXoiC,EAAkBhG,EAAY3I,YAVnB,SAWJxoB,KAAK40C,mBAAmBzd,EAAiB7d,GAXrC,uDAcMhgB,IAArBq7C,GAAmCx7C,MAAMC,QAAQu7C,GAdlC,sBAeX,IAAI5/C,MAAM,qBAfC,UAkBb6/B,EAAU+f,GACZxjB,EAAYoD,UAnBG,iBAoBjBpD,EAAYnb,KAAZmb,MAAAA,GAAW,OAASyD,IApBH,wBAsBb2e,EAAevzC,KAAKgrC,yBAtBP,yBAwBehrC,KAAKu0C,gCACjChB,GAzBa,WAwBTpI,EAxBS,OA2Bfha,EAAYmD,qBAAuB6W,EAAgB7W,qBACnDnD,EAAYxB,gBAAkBwb,EAAgBzW,UAC9CvD,EAAYnb,KAAZmb,MAAAA,GAAW,OAASyD,IACfzD,EAAY/N,UA9BF,uBA+BP,IAAIruB,MAAM,cA/BH,WAkCTquB,EAAY+N,EAAY/N,UAAUhmB,SAAS,UAC5C4C,KAAKkrC,eAAeG,sBAAsBntC,SAASklB,GAnCzC,wBAsCbpjB,KAAKkrC,eAAeG,sBAAsBzyC,KAAKwqB,GAtClC,6BA6CbmwB,GAAe,EA7CF,uCAkDbpc,EAAkBhG,EAAY3I,YAlDjB,UAmDNxoB,KAAK40C,mBAAmBzd,EAAiB7d,GAnDnC,8NA0DG,WACtBu7B,EACAv7B,GAFsB,qFAIhB+6B,EAAqBhsB,GAASwsB,GAAgBz3C,SAAS,UAJvC,SAKD4C,KAAK80C,uBACxBT,EACA/6B,GAPoB,cAKhB5H,EALgB,yBASfA,GATe,sLAgBI,WAC1B2iC,EACA/6B,GAF0B,+FAIpByd,EAAc,CAACsZ,SAAU,UACzBvY,EAAgBxe,GAAWA,EAAQwe,cACnCC,EACHze,GAAWA,EAAQye,qBAAwB/3B,KAAKg4B,WAE/C1e,GAAiC,MAAtBA,EAAQ2e,aACrBlB,EAAOkB,WAAa3e,EAAQ2e,YAE1B3e,GAAqC,MAA1BA,EAAQ4e,iBACrBnB,EAAOmB,eAAiB5e,EAAQ4e,gBAE9BJ,IACFf,EAAOe,cAAgBA,GAErBC,IACFhB,EAAOgB,oBAAsBA,GAGzBtI,EAAO,CAAC4kB,EAAoBtd,GAtBR,UAuBF/2B,KAAKyqC,YAAY,kBAAmBhb,GAvBlC,WAuBpB6f,EAvBoB,SAyBtB,UADEntC,EAAM7N,GAAOg7C,EAAW5F,MAxBJ,sBA2BpB,SAAUvnC,EAAIqY,QAChB4jB,EAAOj8B,EAAIqY,MAAM7a,KAAKy+B,MAElB,IAAID,GACR,+BAAiCh8B,EAAIqY,MAAMna,QAC3C+9B,GAhCsB,iCAmCnBj8B,EAAIuP,QAnCe,iIAyC5Bi9B,WAAY,WACV3uC,KAAK4qC,wBAAyB,EAC9B5qC,KAAK6qC,uBAAyBkK,aAAY,WAExC,EAAKpK,cAAcqK,OAAO,QAAQvF,OAAM,WAAxC,GAFuC,GAGtC,KACHzvC,KAAKi1C,sBACN,2BAKDrG,SAAW1kB,GACTlqB,KAAK4qC,wBAAyB,EAC9B7V,QAAQva,MAAM,YAAa0P,EAAI7pB,QAChC,2BAKDwuC,SAAWtQ,GAAc,WACvBv+B,KAAK4qC,wBAAyB,EAC9B5qC,KAAK+qC,0BACD/qC,KAAK8qC,2BACP4G,aAAa1xC,KAAK8qC,0BAClB9qC,KAAK8qC,yBAA2B,MAE9B9qC,KAAK6qC,yBACPqK,cAAcl1C,KAAK6qC,wBACnB7qC,KAAK6qC,uBAAyB,MAGnB,MAATtM,GAOJv+B,KAAKyrC,6CAA+C,CAAC,EACrDp3C,OAAOwlB,QACL7Z,KAAK0rC,sBACLzpC,SAAQ,YAA0B,mBAAxB5D,EAAwB,KAAlBomC,EAAkB,KAClC,EAAKiH,qBAAqBrtC,IAA1B,kBACKomC,GADL,IAEExnB,MAAO,WALX,KANEjd,KAAKi1C,sBAcR,8EAKyB,qGAC8B,IAAlD5gD,OAAOonB,KAAKzb,KAAK0rC,sBAAsB93C,OADnB,uBAElBoM,KAAK4qC,yBACP5qC,KAAK4qC,wBAAyB,EAC9B5qC,KAAK8qC,yBAA2BpS,YAAW,WACzC,EAAKoS,yBAA2B,KAChC,IACE,EAAKH,cAAcwK,OAQpB,CAPC,MAAOjrB,GAEHA,aAAen1B,OACjBggC,QAAQ8Y,IAAR9Y,yCAAAA,OAC2C7K,EAAI7pB,SAGlD,CAXuC,GAYvC,MAhBiB,6BAqBc,OAAlCL,KAAK8qC,2BACP4G,aAAa1xC,KAAK8qC,0BAClB9qC,KAAK8qC,yBAA2B,KAChC9qC,KAAK4qC,wBAAyB,GAG3B5qC,KAAK4qC,uBA3Bc,uBA4BtB5qC,KAAK2qC,cAAcyK,UA5BG,iCAgClBC,EAA4Br1C,KAAK+qC,wBACjCuK,EAAiC,WACrC,OAAOD,IAA8B,EAAKtK,uBAD5C,EAjCwB,UAqClBvS,QAAQkE,IAKZroC,OAAOonB,KAAKzb,KAAK0rC,sBAAsB/mC,IAAvCtQ,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MAA2C,WAAMgK,GAAN,oFAEpB/E,KADfmrC,EAAe,EAAKiH,qBAAqBrtC,IADN,sDAMjComC,EAAaxnB,MANoB,OAOlC,YAPkC,MAQlC,iBARkC,OAsElC,eAtEkC,2BASD,IAAhCwnB,EAAa8Q,UAAUzoB,KATU,+BAuB5B,EAAK4e,qBAAqBrtC,GACN,iBAAvBomC,EAAaxnB,cACR,EAAKwuB,6CACVhH,EAAa+Q,sBA1BkB,UA6B7B,EAAKP,uBA7BwB,4DAgC/B,uBAAC,oGACExlB,EAAgBgV,EAAhBhV,KAAM8d,EAAU9I,EAAV8I,OADR,SAGH,EAAK7B,qBAAqBrtC,IAA1B,kBACKomC,GADL,IAEExnB,MAAO,gBALN,SAQM,EAAK0tB,cAAcxvC,KAAKoyC,EAAQ9d,GARtC,cAOG+lB,EAPH,OASH,EAAK9J,qBAAqBrtC,IAA1B,kBACKomC,GADL,IAEE+Q,qBAAAA,EACAv4B,MAAO,eAET,EAAKwuB,6CACH+J,GACE/Q,EAAa8Q,UAhBd,UAiBG,EAAKN,uBAjBR,6DAmBCz7C,EAAAA,cAAazE,OACfggC,QAAQva,MAARua,GAAAA,OACKwY,EADLxY,uBAEEtF,EACAj2B,EAAAA,GAAE6G,SAGDi1C,IA1BF,0DA8BH,EAAK5J,qBAAqBrtC,IAA1B,kBACKomC,GADL,IAEExnB,MAAO,YAhCN,UAkCG,EAAKg4B,uBAlCR,yDAAD,GAhC+B,uDAuED,IAAhCxQ,EAAa8Q,UAAUzoB,KAvEU,mCA2E7B,uBAAC,8FACE0oB,EAA2C/Q,EAA3C+Q,qBAAsBC,EAAqBhR,EAArBgR,mBAE3B,EAAK9J,gCAAgCvb,IAAIolB,GAHtC,gBAcH,EAAK7J,gCAAgCp7B,OACnCilC,GAfC,8BAkBH,EAAK9J,qBAAqBrtC,IAA1B,kBACKomC,GADL,IAEExnB,MAAO,kBApBN,kBAuBK,EAAK0tB,cAAcxvC,KAAKs6C,EAAmB,CAC/CD,IAxBD,4DA2BGh8C,EAAAA,cAAazE,OACfggC,QAAQva,MAARua,GAAAA,OAAiB0gB,EAAjB1gB,WAA6Cv7B,EAAAA,GAAE6G,SAE5Ci1C,IA9BJ,0DAkCD,EAAK5J,qBAAqBrtC,IAA1B,kBACKomC,GADL,IAEExnB,MAAO,eApCR,UAsCK,EAAKg4B,uBAtCV,iDA0CL,EAAKvJ,qBAAqBrtC,IAA1B,kBACKomC,GADL,IAEExnB,MAAO,iBA5CJ,UA8CC,EAAKg4B,uBA9CN,yDAAD,GA3E6B,4CAA3C5gD,OAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,CAAAA,KA1CsB,8IAkLlBqhD,SAGNF,EACAG,GAEA,IAAMJ,EACJv1C,KAAKyrC,6CAA6C+J,QAClCl8C,IAAdi8C,GAGJA,EAAUtzC,SAAQ2zC,SAAAA,GAChB,IACEA,EAAE,WAAFA,GAAAA,EAAAA,EAAAA,GAKKD,GAIN,CAFC,MAAOn8C,GACPu7B,QAAQva,MAAMhhB,EACf,CAXH,GAaD,yCAKDs1C,SAAyB+G,GACvB,MAA+BvhD,GAC7BuhD,EACArR,IAFK9yB,EAAP,EAAOA,OAAQ+yB,EAAf,EAAeA,aAIfzkC,KAAK01C,0BAAiDjR,EAAc,CAClE/yB,EAAOzV,MACPyV,EAAOuH,SAEV,kCAKO68B,SACNC,EAyBAtmB,GACsB,WAChBumB,EAAuBh2C,KAAKurC,4BAC5BltC,EAAO43C,GACX,CAACF,EAAmBxI,OAAQ9d,IAC5B,GAEIymB,EAAuBl2C,KAAK0rC,qBAAqBrtC,GA0BvD,YAzB6B/E,IAAzB48C,EACFl2C,KAAK0rC,qBAAqBrtC,IAA1B,kBACK03C,GADL,IAEEtmB,KAAAA,EACA8lB,UAAW,IAAIv7B,IAAI,CAAC+7B,EAAmBzI,WACvCrwB,MAAO,YAGTi5B,EAAqBX,UAAU5xC,IAAIoyC,EAAmBzI,UAExDttC,KAAKwrC,oDACHwK,IADF,uBAEI,uGACK,EAAKxK,oDACVwK,GAGF73C,QACmB7E,KAFbmrC,EAAe,EAAKiH,qBAAqBrtC,IACzC,iFAEwE23C,IAE9EvR,EAAa8Q,UAAUhlC,OAAOwlC,EAAmBzI,UAT/C,SAUI,EAAK2H,uBAVT,2CAYJj1C,KAAKi1C,uBACEe,CACR,gCAUDG,SACE5gC,EACA+3B,EACAtV,GAEA,IAAMvI,EAAOzvB,KAAKqvC,WAChB,CAAC95B,EAAU8T,YACX2O,GAAch4B,KAAKqqC,aAAe,YAClC,UAEF,OAAOrqC,KAAK81C,kBACV,CACExI,SAAAA,EACAC,OAAQ,mBACRkI,kBAAmB,sBAErBhmB,EAEH,qFAOgC,WAC/BumB,GAD+B,sFAGzBh2C,KAAKo2C,+BACTJ,EACA,kBAL6B,oJAYjCjH,SAAgC8G,GAC9B,MAA+BvhD,GAC7BuhD,EACAlR,IAFKjzB,EAAP,EAAOA,OAAQ+yB,EAAf,EAAeA,aAIfzkC,KAAK01C,0BAAwDjR,EAAc,CACzE,CACE4R,UAAW3kC,EAAOzV,MAAM+vB,OACxBonB,YAAa1hC,EAAOzV,MAAM4zB,SAE5Bne,EAAOuH,SAEV,uCAYDq9B,SACE5sB,EACA4jB,EACAtV,EACAue,GAEA,IAAM9mB,EAAOzvB,KAAKqvC,WAChB,CAAC3lB,EAAUL,YACX2O,GAAch4B,KAAKqqC,aAAe,YAClC,SACAkM,EAAU,CAACA,QAASA,QAAWj9C,GAEjC,OAAO0G,KAAK81C,kBACV,CACExI,SAAAA,EACAC,OAAQ,mBACRkI,kBAAmB,sBAErBhmB,EAEH,4FAOuC,WACtCumB,GADsC,sFAGhCh2C,KAAKo2C,+BACTJ,EACA,0BALoC,2HAYxCQ,SACE/oB,EACA6f,EACAtV,GAEA,IAAMvI,EAAOzvB,KAAKqvC,WAChB,CAAmB,kBAAX5hB,EAAsB,CAACgpB,SAAU,CAAChpB,EAAOrwB,aAAeqwB,GAChEuK,GAAch4B,KAAKqqC,aAAe,aAEpC,OAAOrqC,KAAK81C,kBACV,CACExI,SAAAA,EACAC,OAAQ,gBACRkI,kBAAmB,mBAErBhmB,EAEH,8EAOyB,WACxBumB,GADwB,sFAGlBh2C,KAAKo2C,+BAA+BJ,EAAsB,QAHxC,0IAS1B5G,SAAsByG,GACpB,MAA+BvhD,GAAOuhD,EAAcjM,IAA7Cl4B,EAAP,EAAOA,OAAQ+yB,EAAf,EAAeA,aACfzkC,KAAK01C,0BAAwCjR,EAAc,CACzD/yB,EAAOzV,MACPyV,EAAOuH,SAEV,sCAKD+1B,SAAsB6G,GACpB,MAA+BvhD,GAAOuhD,EAAc9Q,IAA7CrzB,EAAP,EAAOA,OAAQ+yB,EAAf,EAAeA,aACfzkC,KAAK01C,0BAA8CjR,EAAc,CAAC/yB,GACnE,6BAQDglC,SAAapJ,GACX,OAAOttC,KAAK81C,kBACV,CACExI,SAAAA,EACAC,OAAQ,gBACRkI,kBAAmB,mBAErB,GAEH,kFAO6B,WAC5BO,GAD4B,sFAGtBh2C,KAAKo2C,+BACTJ,EACA,eAL0B,iJAY9B/G,SAA6B4G,GAC3B,MAA+BvhD,GAC7BuhD,EACAtQ,IAFK7zB,EAAP,EAAOA,OAAQ+yB,EAAf,EAAeA,aAIfzkC,KAAK01C,0BAA8CjR,EAAc,CAAC/yB,GACnE,6BASDilC,SAAarJ,GACX,OAAOttC,KAAK81C,kBACV,CACExI,SAAAA,EACAC,OAAQ,wBACRkI,kBAAmB,2BAErB,GAEH,kFAO6B,WAC5BO,GAD4B,sFAGtBh2C,KAAKo2C,+BACTJ,EACA,eAL0B,4LAac,WAC1CA,EACAY,GAF0C,iFAIpCC,EACJ72C,KAAKwrC,oDACHwK,IANsC,gCASlCa,IATkC,6BAWxC9hB,QAAQC,KACN,iFACOghB,EADP,kBACsCY,EADtC,aAEE,uBAdoC,iIAmB5CvH,SACE5f,EACAqnB,EACAzG,EACAkC,GAEA,IAAMva,EAAa8e,GAAY92C,KAAKqqC,YACpC,GAAIrS,GAAcqY,GAAYkC,EAAO,CACnC,IAAIj5B,EAAe,CAAC,EAChB+2B,IACF/2B,EAAQ+2B,SAAWA,GAEjBrY,IACF1e,EAAQ0e,WAAaA,GAEnBua,IACFj5B,EAAUjlB,OAAOI,OAAO6kB,EAASi5B,IAEnC9iB,EAAK72B,KAAK0gB,EACX,CACD,OAAOmW,CACR,2CAKD6iB,SACE7iB,EACAqnB,EACAzG,EACAkC,GAEA,IAAMva,EAAa8e,GAAY92C,KAAKqqC,YACpC,GAAIrS,IAAe,CAAC,YAAa,aAAa95B,SAAS85B,GACrD,MAAM,IAAIjjC,MACR,8CACEiL,KAAKqqC,YACL,+CAGN,OAAOrqC,KAAKqvC,WAAW5f,EAAMqnB,EAAUzG,EAAUkC,EAClD,2CAKDrD,SAA2B2G,GACzB,MAA+BvhD,GAC7BuhD,EACArQ,IAFK9zB,EAAP,EAAOA,OAAQ+yB,EAAf,EAAeA,aAIM,sBAAjB/yB,EAAOzV,OAcT+D,KAAK2rC,gCAAgChoC,IAAI8gC,GAE3CzkC,KAAK01C,0BACHjR,EACiB,sBAAjB/yB,EAAOzV,MACH,CAAC,CAACmd,KAAM,YAAa1H,EAAOuH,SAC5B,CAAC,CAACG,KAAM,SAAU1H,OAAQA,EAAOzV,OAAQyV,EAAOuH,SAEvD,4BAUD43B,SACEztB,EACAkqB,EACAtV,GACsB,WAChBvI,EAAOzvB,KAAKqvC,WAChB,CAACjsB,GACD4U,GAAch4B,KAAKqqC,aAAe,aAE9B2L,EAAuBh2C,KAAK81C,kBAChC,CACExI,SAAU,SAACuI,EAAc58B,GACvB,GAA0B,WAAtB48B,EAAaz8B,KAAmB,CAClCk0B,EAASuI,EAAankC,OAAQuH,GAG9B,IACE,EAAK04B,wBAAwBqE,EAI9B,CAFC,MAAOe,GAER,CACF,CAZL,EAcExJ,OAAQ,qBACRkI,kBAAmB,wBAErBhmB,GAEF,OAAOumB,CACR,uCAYDgB,SACE5zB,EACAkqB,EACAh0B,GACsB,WACtB,qBACKA,GADL,IAEE0e,WACG1e,GAAWA,EAAQ0e,YAAeh4B,KAAKqqC,aAAe,cAHpDrS,EAAP,EAAOA,WAAeua,GAAtB,aAKM9iB,EAAOzvB,KAAKqvC,WAChB,CAACjsB,GACD4U,OACA1+B,EACAi5C,GAEIyD,EAAuBh2C,KAAK81C,kBAChC,CACExI,SAAU,SAACuI,EAAc58B,GACvBq0B,EAASuI,EAAc58B,GAGvB,IACE,EAAK04B,wBAAwBqE,EAI9B,CAFC,MAAOe,GAER,CAVL,EAYExJ,OAAQ,qBACRkI,kBAAmB,wBAErBhmB,GAEF,OAAOumB,CACR,iFAO4B,WAC3BA,GAD2B,sFAGrBh2C,KAAKo2C,+BACTJ,EACA,oBALyB,0IAY7B7G,SAAsB0G,GACpB,MAA+BvhD,GAAOuhD,EAAcpQ,IAA7C/zB,EAAP,EAAOA,OAAQ+yB,EAAf,EAAeA,aACfzkC,KAAK01C,0BAA8CjR,EAAc,CAAC/yB,GACnE,6BAQDulC,SAAa3J,GACX,OAAOttC,KAAK81C,kBACV,CACExI,SAAAA,EACAC,OAAQ,gBACRkI,kBAAmB,mBAErB,GAEH,kFAO6B,WAC5BO,GAD4B,sFAGtBh2C,KAAKo2C,+BACTJ,EACA,eAL0B,2GAnkGnBlM,GC3hFAoN,GAAAA,WASX3iD,SAAAA,EAAY4iD,IAA0B,oBAR9BC,cAQ8B,EACpCp3C,KAAKo3C,SAAL,OAAgBD,QAAAA,IAAAA,EAAAA,EAAWlvB,IAC5B,uCAyDY,WACX,OAAO,IAAIa,GAAU9oB,KAAKo3C,SAAS7hC,UACpC,wBAKY,WACX,OAAO,IAAIliB,WAAW2M,KAAKo3C,SAASjvB,UACrC,2BA7Dc,WACb,OAAO,IAAI+uB,EAAQjvB,KACpB,8BAcmB,SAClBE,EACA7O,GAEA,GAA6B,KAAzB6O,EAAU9oB,WACZ,MAAM,IAAItK,MAAM,uBAElB,IAAMwgB,EAAY4S,EAAUlrB,MAAM,GAAI,IACtC,IAAKqc,IAAYA,EAAQ+9B,eAGvB,IAFA,IAAMnvB,EAAgBC,EAAUlrB,MAAM,EAAG,IACnCq6C,EAAoBvhC,GAAamS,GAC9BqvB,EAAK,EAAGA,EAAK,GAAIA,IACxB,GAAIhiC,EAAUgiC,KAAQD,EAAkBC,GACtC,MAAM,IAAIxiD,MAAM,iCAItB,OAAO,IAAImiD,EAAQ,CAAC3hC,UAAAA,EAAW4S,UAAAA,GAChC,yBAOc,SAAC1C,GACd,IAAMlQ,EAAYQ,GAAa0P,GACzB0C,EAAY,IAAI90B,WAAW,IAGjC,OAFA80B,EAAUnnB,IAAIykB,GACd0C,EAAUnnB,IAAIuU,EAAW,IAClB,IAAI2hC,EAAQ,CAAC3hC,UAAAA,EAAW4S,UAAAA,GAChC,OA/DU+uB,GCwEAM,GAAmCnjD,OAAOiT,OAAO,CAC5DmwC,kBAAmB,CACjBtsB,MAAO,EACP51B,OAAQ02B,GAAAA,GAEN,CACAA,GAAAA,GAAiB,eACjByrB,GAAiB,cACjBzrB,GAAAA,GAAgB,eAGpB0rB,kBAAmB,CACjBxsB,MAAO,EACP51B,OAAQ02B,GAAAA,GAEN,CAACA,GAAAA,GAAiB,kBAEtB2rB,kBAAmB,CACjBzsB,MAAO,EACP51B,OAAQ02B,GAAAA,GAEN,CACAA,GAAAA,GAAiB,eACjByrB,KACAzrB,GAAAA,GACEp4B,KACAo4B,GAAAA,GAAoBA,GAAAA,MAAqB,GACzC,gBAIN4rB,sBAAuB,CACrB1sB,MAAO,EACP51B,OAAQ02B,GAAAA,GAEN,CAACA,GAAAA,GAAiB,kBAEtB6rB,iBAAkB,CAChB3sB,MAAO,EACP51B,OAAQ02B,GAAAA,GAEN,CAACA,GAAAA,GAAiB,oBAuIX8rB,GAAAA,WAIXxjD,SAAAA,KAAc,cAAE,sDAMQ,SAACmmC,GACvB,MAAuC5R,GAAUqB,uBAC/C,CAACuQ,EAAO6E,UAAUlX,YAAYqR,EAAAA,GAAAA,IAAWl4B,OAAOk5B,EAAOsd,YAAa,IACpEh4C,KAAK0pB,WAFP,eAAOuuB,EAAP,KAA2BC,EAA3B,KAMMv4C,EAAOg5B,GADA6e,GAAiCC,kBAChB,CAC5BO,WAAYx2C,OAAOk5B,EAAOsd,YAC1BE,SAAUA,IAGNz8B,EAAO,CACX,CACEuQ,OAAQisB,EACRvqB,UAAU,EACVC,YAAY,GAEd,CACE3B,OAAQ0O,EAAO6E,UACf7R,UAAU,EACVC,YAAY,GAEd,CACE3B,OAAQ0O,EAAOtN,MACfM,UAAU,EACVC,YAAY,GAEd,CACE3B,OAAQyO,GAAc/Q,UACtBgE,UAAU,EACVC,YAAY,IAIhB,MAAO,CACL,IAAIuG,GAAuB,CACzBxK,UAAW1pB,KAAK0pB,UAChBjO,KAAMA,EACN9b,KAAMA,IAERs4C,EAEH,kCAEuB,SAACvd,GACvB,IACM/6B,EAAOg5B,GADA6e,GAAiCG,mBAGxCl8B,EAAO,CACX,CACEuQ,OAAQ0O,EAAOvM,YACfT,UAAU,EACVC,YAAY,GAEd,CACE3B,OAAQ0O,EAAO6E,UACf7R,UAAU,EACVC,YAAY,IAIhB,OAAO,IAAIuG,GAAuB,CAChCxK,UAAW1pB,KAAK0pB,UAChBjO,KAAMA,EACN9b,KAAMA,GAET,kCAEuB,SAAC+6B,GACvB,IACM/6B,EAAOg5B,GADA6e,GAAiCI,kBAChB,CAC5BvpB,UAAWqM,EAAOrM,UAAU1pB,KAAIwzC,SAAAA,GAAI,OAAIA,EAAKz4C,SAAT,MAGhC+b,EAAO,CACX,CACEuQ,OAAQ0O,EAAOvM,YACfT,UAAU,EACVC,YAAY,GAEd,CACE3B,OAAQ0O,EAAO6E,UACf7R,UAAU,EACVC,YAAY,IAmBhB,OAfI+M,EAAOtN,OACT3R,EAAK7iB,KACH,CACEozB,OAAQ0O,EAAOtN,MACfM,UAAU,EACVC,YAAY,GAEd,CACE3B,OAAQyO,GAAc/Q,UACtBgE,UAAU,EACVC,YAAY,IAKX,IAAIuG,GAAuB,CAChCxK,UAAW1pB,KAAK0pB,UAChBjO,KAAMA,EACN9b,KAAMA,GAET,sCAE2B,SAAC+6B,GAC3B,IACM/6B,EAAOg5B,GADA6e,GAAiCK,uBAGxCp8B,EAAO,CACX,CACEuQ,OAAQ0O,EAAOvM,YACfT,UAAU,EACVC,YAAY,GAEd,CACE3B,OAAQ0O,EAAO6E,UACf7R,UAAU,EACVC,YAAY,IAIhB,OAAO,IAAIuG,GAAuB,CAChCxK,UAAW1pB,KAAK0pB,UAChBjO,KAAMA,EACN9b,KAAMA,GAET,iCAEsB,SAAC+6B,GACtB,IACM/6B,EAAOg5B,GADA6e,GAAiCM,kBAGxCr8B,EAAO,CACX,CACEuQ,OAAQ0O,EAAOvM,YACfT,UAAU,EACVC,YAAY,GAEd,CACE3B,OAAQ0O,EAAO6E,UACf7R,UAAU,EACVC,YAAY,GAEd,CACE3B,OAAQ0O,EAAO0d,UACf1qB,UAAU,EACVC,YAAY,IAIhB,OAAO,IAAIuG,GAAuB,CAChCxK,UAAW1pB,KAAK0pB,UAChBjO,KAAMA,EACN9b,KAAMA,GAET,OA3KUo4C,GAAAA,GAMJruB,UAAuB,IAAIZ,GAChC,mDC1FSuvB,GAAqChkD,OAAOiT,OAItD,CACDgxC,aAAc,CACZntB,MAAO,EACP51B,OAAQ02B,GAAAA,GAEN,CACAA,GAAAA,GAAgB,eAChBA,GAAAA,GAAiB,SACjBA,GAAAA,GAAiB,oBAGrBssB,iBAAkB,CAChBptB,MAAO,EACP51B,OAAQ02B,GAAAA,GAEN,CAACA,GAAAA,GAAgB,eAAgBA,GAAAA,GAAiB,YAEtDusB,oBAAqB,CACnBrtB,MAAO,EACP51B,OAAQ02B,GAAAA,GAEN,CAACA,GAAAA,GAAgB,eAAgBA,GAAAA,GAAiB,YAEtDwsB,oBAAqB,CACnBttB,MAAO,EACP51B,OAAQ02B,GAAAA,GAEN,CAACA,GAAAA,GAAgB,eAAgBxpB,GAAI,sBAO9Bi2C,GAAAA,WAIXnkD,SAAAA,KAAc,cAAE,iDAYG,SAACmmC,GAClB,IACM/6B,EAAOg5B,GADA0f,GAAmCC,aAClB5d,GAC9B,OAAO,IAAIxG,GAAuB,CAChCzY,KAAM,GACNiO,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEH,iCAEsB,SACrB+6B,GAEA,IACM/6B,EAAOg5B,GADA0f,GAAmCE,iBAClB7d,GAC9B,OAAO,IAAIxG,GAAuB,CAChCzY,KAAM,GACNiO,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEH,oCAEyB,SACxB+6B,GAEA,IACM/6B,EAAOg5B,GADA0f,GAAmCG,oBAClB9d,GAC9B,OAAO,IAAIxG,GAAuB,CAChCzY,KAAM,GACNiO,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEH,oCAEyB,SACxB+6B,GAEA,IACM/6B,EAAOg5B,GADA0f,GAAmCI,oBAClB,CAC5BE,cAAen3C,OAAOk5B,EAAOie,iBAE/B,OAAO,IAAIzkB,GAAuB,CAChCzY,KAAM,GACNiO,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEH,OA9DU+4C,GAAAA,GASJhvB,UAAuB,IAAIZ,GAChC,+CC1NJ,IAuBM8vB,GAA6B3sB,GAAAA,GAYjC,CACAA,GAAAA,GAAgB,iBAChBA,GAAAA,GAAgB,WAChBA,GAAAA,GAAiB,mBACjBA,GAAAA,GAAiB,6BACjBA,GAAAA,GAAiB,mBACjBA,GAAAA,GAAiB,6BACjBA,GAAAA,GAAiB,qBACjBA,GAAAA,GAAiB,mBACjBA,GAAAA,GAAiB,6BAGN4sB,GAAAA,WAIXtkD,SAAAA,KAAc,cAAE,mEAcqB,SACnCmmC,GAEA,IAAOnlB,EAAmDmlB,EAAnDnlB,UAAWlV,EAAwCq6B,EAAxCr6B,QAAS+iB,EAA+BsX,EAA/BtX,UAAW01B,EAAoBpe,EAApBoe,iBAEtC36C,GArEqB,KAsEnBoX,EAAU3hB,OADN,6BArEe,GAqEf,+BAEyD2hB,EAAU3hB,OAFnE,WAKNuK,GAzEoB,KA0ElBilB,EAAUxvB,OADN,4BAzEc,GAyEd,+BAEuDwvB,EAAUxvB,OAFjE,WAKN,IAAMmlD,EAAkBH,GAA2B9kD,KAC7CklD,EAAkBD,EAAkBxjC,EAAU3hB,OAC9CqlD,EAAoBD,EAAkB51B,EAAUxvB,OAGhD4nC,EAAkBlT,EAAAA,GAAAA,MAAa2wB,EAAoB54C,EAAQzM,QAE3Du3B,EACgB,MAApB2tB,EACI,MACAA,EAqBN,OAnBAF,GAA2BjjD,OACzB,CACEujD,cAXkB,EAYlBC,QAAS,EACTH,gBAAAA,EACAI,0BAA2BjuB,EAC3B4tB,gBAAAA,EACAM,0BAA2BluB,EAC3B8tB,kBAAAA,EACAK,gBAAiBj5C,EAAQzM,OACzB2lD,wBAAyBpuB,GAE3BqQ,GAGFA,EAAgBn6B,KAAKkU,EAAWwjC,GAChCvd,EAAgBn6B,KAAK+hB,EAAW41B,GAChCxd,EAAgBn6B,KAAKhB,EAAS44C,GAEvB,IAAI/kB,GAAuB,CAChCzY,KAAM,GACNiO,UAAWmvB,EAAenvB,UAC1B/pB,KAAM67B,GAET,gDAMqC,SACpCd,GAEA,IAAO1pB,EAAyC0pB,EAAzC1pB,WAAY3Q,EAA6Bq6B,EAA7Br6B,QAASy4C,EAAoBpe,EAApBoe,iBAE5B36C,GA/HsB,KAgIpB6S,EAAWpd,OADP,8BA/HgB,GA+HhB,+BAE2Dod,EAAWpd,OAFtE,WAKN,IACE,IAAMujD,EAAUD,GAAQsC,cAAcxoC,GAChCuE,EAAY4hC,EAAQ5hC,UAAU7V,UAC9B0jB,EAAYpN,GAAK3V,EAAS82C,EAAQhvB,WAExC,OAAOnoB,KAAKy5C,+BAA+B,CACzClkC,UAAAA,EACAlV,QAAAA,EACA+iB,UAAAA,EACA01B,iBAAAA,GAIH,CAFC,MAAOt+B,GACP,MAAM,IAAIzlB,MAAJ,sCAAyCylB,GAChD,CACF,OAnGUq+B,GAAAA,GASJnvB,UAAuB,IAAIZ,GAChC,+CC5DJ4wB,GAAAA,eAAiC,SAAC9kC,GAA2C,IAC3E,IAAMhT,EAAImd,GAAKzqB,OAAOsjB,GAAQhD,GAD6C,mBAAvB+kC,EAAuB,iCAAvBA,EAAuB,kBAG3E,OADAA,EAAK13C,SAAQyT,SAAAA,GAAG,OAAI9T,EAAEtB,OAAOoV,EAAb,IACT9T,EAAErB,QAHX,EAMO,IAAMq5C,GAAY,SACvBz2B,EACA02B,GAFuB,OtCm1BzB,SAAkB12B,EAAS02B,GAAoB,IAEvCvkC,EAF4BgJ,EAAW,uDAAJ,CAAC,EACxC,EAAuB+H,GAAYlD,EAAS02B,EAASv7B,EAAKgI,cAAlDb,EAAR,EAAQA,KAAM9S,EAAd,EAAcA,EAAGnL,EAAjB,EAAiBA,EAEXsyC,EAAO,IAAIx0B,GAEjB,IADAw0B,EAAKC,WAAWt0B,KACPnQ,EAAMuQ,GAASi0B,EAAKE,eAAgBrnC,EAAGnL,KAC5CsyC,EAAKC,aACT,OAAOtzB,GAAYnR,EAAKgJ,EAC3B,CsCx1BIo7B,CAAmBv2B,EAAS02B,EAAS,CAACjzB,KAAK,EAAOC,WAAW,GAHzC,EAIQ6yB,GAAAA,kBAC1B,IAAMO,GtCkwBN,SAAsBjpC,GAAkC,IAAtBiQ,EAAsB,wDAC3D,OAAOpW,GAAMqvC,eAAelpC,GAAY/C,WAAWgT,EACtD,EuCvuBKk5B,GAA+BluB,GAAAA,GAcnC,CACAA,GAAAA,GAAgB,iBAChBA,GAAAA,GAAiB,mBACjBA,GAAAA,GAAgB,6BAChBA,GAAAA,GAAiB,oBACjBA,GAAAA,GAAgB,8BAChBA,GAAAA,GAAiB,qBACjBA,GAAAA,GAAiB,mBACjBA,GAAAA,GAAgB,2BAChBA,GAAAA,GAAkB,GAAI,cACtBA,GAAAA,GAAkB,GAAI,aACtBA,GAAAA,GAAgB,gBAGLmuB,GAAAA,WAIX7lD,SAAAA,KAAc,cAAE,0DAaY,SAC1BghB,GAEApX,GAlFqB,KAmFnBoX,EAAU3hB,OADN,6BAlFe,GAkFf,+BAEyD2hB,EAAU3hB,OAFnE,WAKN,IACE,OAAO00B,EAAAA,GAAAA,KAAYnK,GAAWkK,GAAS9S,KAAatY,OAzF3B,GA8F1B,CAFC,MAAOud,GACP,MAAM,IAAIzlB,MAAJ,+CAAkDylB,GACzD,CACF,+CAMoC,SACnCkgB,GAEA,IAAOnlB,EACLmlB,EADKnlB,UAAWlV,EAChBq6B,EADgBr6B,QAAS+iB,EACzBsX,EADyBtX,UAAWi3B,EACpC3f,EADoC2f,WAAYvB,EAChDpe,EADgDoe,iBAElD,OAAOsB,EAAiBE,gCAAgC,CACtDC,WAAYH,EAAiBI,sBAAsBjlC,GACnDlV,QAAAA,EACA+iB,UAAAA,EACAi3B,WAAAA,EACAvB,iBAAAA,GAEH,gDAMqC,SACpCpe,GAEA,IAQI6f,EAPUE,EAKV/f,EALF6f,WACAl6C,EAIEq6B,EAJFr6B,QACA+iB,EAGEsX,EAHFtX,UACAi3B,EAEE3f,EAFF2f,WAJF,EAMI3f,EADFoe,iBAAAA,OALF,MAKqB,EALrB,EAmBA36C,GA7I2B,MAqIvBo8C,EAFsB,kBAAfE,EACLA,EAAWpO,WAAW,MACX/jB,EAAAA,GAAAA,KAAYmyB,EAAWC,OAAO,GAAI,OAElCpyB,EAAAA,GAAAA,KAAYmyB,EAAY,OAG1BA,GAIF7mD,OADP,0BA7IqB,GA6IrB,+BAE4D2mD,EAAW3mD,OAFvE,WAKN,IAEMolD,EAFY,GAEkBuB,EAAW3mD,OACzCqlD,EAAoBD,EAAkB51B,EAAUxvB,OAAS,EAGzD4nC,EAAkBlT,EAAAA,GAAAA,MACtB6xB,GAA6BrmD,KAAOuM,EAAQzM,QAsB9C,OAnBAumD,GAA6BxkD,OAC3B,CACEujD,cARkB,EASlBF,gBAAAA,EACAI,0BAA2BN,EAC3B6B,iBAfc,GAgBdC,2BAA4B9B,EAC5BG,kBAAAA,EACAK,gBAAiBj5C,EAAQzM,OACzB2lD,wBAAyBT,EACzB11B,UAAWiF,GAASjF,GACpBm3B,WAAYlyB,GAASkyB,GACrBF,WAAAA,GAEF7e,GAGFA,EAAgBn6B,KAAKgnB,GAAShoB,GAAU85C,GAA6BrmD,MAE9D,IAAIogC,GAAuB,CAChCzY,KAAM,GACNiO,UAAW0wB,EAAiB1wB,UAC5B/pB,KAAM67B,GAET,gDAMqC,SACpCd,GAEA,IAAmBmgB,EAAmCngB,EAA/C1pB,WAAkB3Q,EAA6Bq6B,EAA7Br6B,QAASy4C,EAAoBpe,EAApBoe,iBAElC36C,GAhMsB,KAiMpB08C,EAAKjnD,OADD,8BAhMgB,GAgMhB,+BAE2DinD,EAAKjnD,OAFhE,WAKN,IACE,IAAMod,EAAaqX,GAASwyB,GACtBtlC,EAAY0kC,GAChBjpC,GACA,GACA/T,MAAM,GACF69C,EAAcxyB,EAAAA,GAAAA,KAAYnK,GAAWkK,GAAShoB,KACpD,EAAgCu5C,GAAUkB,EAAa9pC,GAAvD,eAAOoS,EAAP,KAAkBi3B,EAAlB,KAEA,OAAOr6C,KAAKy5C,+BAA+B,CACzClkC,UAAAA,EACAlV,QAAAA,EACA+iB,UAAAA,EACAi3B,WAAAA,EACAvB,iBAAAA,GAIH,CAFC,MAAOt+B,GACP,MAAM,IAAIzlB,MAAJ,sCAAyCylB,GAChD,CACF,OAxJU4/B,GAAAA,GASJ1wB,UAAuB,IAAIZ,GAChC,mDC7DSiyB,GAAkB,IAAIjyB,GACjC,+CA+BWkyB,IAAAA,EAAAA,EAAAA,IAWXzmD,SAAAA,EAAY0mD,EAAuBpd,EAAeqd,IAAsB,oBATxED,mBASwE,OAPxEpd,WAOwE,OALxEqd,eAKwE,EACtEl7C,KAAKi7C,cAAgBA,EACrBj7C,KAAK69B,MAAQA,EACb79B,KAAKk7C,UAAYA,CAClB,IAfUF,GAoBJ3wB,QAAkB,IAAI2wB,GAAO,EAAG,EAAGlyB,GAAUuB,aAqazC8wB,GAA4B9mD,OAAOiT,OAI7C,CACD8zC,WAAY,CACVjwB,MAAO,EACP51B,OAAQ02B,GAAAA,GAA6D,CACnEA,GAAAA,GAAiB,e/B1ZG,WAAqC,IAApCl4B,EAAoC,uDAAjB,aAC5C,OAAOk4B,GAAAA,GAKL,CAAC1W,GAAU,UAAWA,GAAU,eAAgBxhB,EAN7C,C+B2ZDF,G/B/YgB,WAAiC,IAAhCE,EAAgC,uDAAb,SACxC,OAAOk4B,GAAAA,GAOL,CACEA,GAAAA,GAAkB,iBAClBA,GAAAA,GAAkB,SAClB1W,GAAU,cAEZxhB,EAbG,C+BgZDF,MAGJwnD,UAAW,CACTlwB,MAAO,EACP51B,OAAQ02B,GAAAA,GAA4D,CAClEA,GAAAA,GAAiB,eACjBp4B,GAAiB,iBACjBo4B,GAAAA,GAAiB,6BAGrBqvB,SAAU,CACRnwB,MAAO,EACP51B,OAAQ02B,GAAAA,GAA2D,CACjEA,GAAAA,GAAiB,kBAGrBsvB,MAAO,CACLpwB,MAAO,EACP51B,OAAQ02B,GAAAA,GAAwD,CAC9DA,GAAAA,GAAiB,eACjBA,GAAAA,GAAkB,eAGtBuvB,SAAU,CACRrwB,MAAO,EACP51B,OAAQ02B,GAAAA,GAA2D,CACjEA,GAAAA,GAAiB,eACjBA,GAAAA,GAAkB,eAGtBwvB,WAAY,CACVtwB,MAAO,EACP51B,OAAQ02B,GAAAA,GAA6D,CACnEA,GAAAA,GAAiB,kBAGrByvB,MAAO,CACLvwB,MAAO,EACP51B,OAAQ02B,GAAAA,GAAwD,CAC9DA,GAAAA,GAAiB,kBAGrB0vB,kBAAmB,CACjBxwB,MAAO,EACP51B,OAAQ02B,GAAAA,GACN,CACEA,GAAAA,GAAiB,eACjBp4B,GAAiB,iBACjBo4B,GAAAA,GAAiB,0BACjBp4B,GAAkB,iBAClBA,GAAiB,uBA6BZ+nD,IAZ2BvnD,OAAOiT,OAAO,CACpDu0C,OAAQ,CACN1wB,MAAO,GAET2wB,WAAY,CACV3wB,MAAO,KAOEywB,WAIXrnD,SAAAA,KAAc,cAAE,+CAqBC,SAACmmC,GAChB,IAAOqhB,EAAgDrhB,EAAhDqhB,YAAaxgB,EAAmCb,EAAnCa,WACdygB,EADiDthB,EAAvBshB,QACMhB,GAAO3wB,QAEvC1qB,EAAOg5B,GADAwiB,GAA0BC,WACT,CAC5B7f,WAAY,CACV0gB,OAAQ5zB,GAASkT,EAAW0gB,OAAO5zB,YACnC6zB,WAAY7zB,GAASkT,EAAW2gB,WAAW7zB,aAE7C2zB,OAAQ,CACNf,cAAee,EAAOf,cACtBpd,MAAOme,EAAOne,MACdqd,UAAW7yB,GAAS2zB,EAAOd,UAAU7yB,eAGnCmT,EAAkB,CACtB/f,KAAM,CACJ,CAACuQ,OAAQ+vB,EAAaruB,UAAU,EAAOC,YAAY,GACnD,CAAC3B,OAAQ0L,GAAoBhK,UAAU,EAAOC,YAAY,IAE5DjE,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEF,OAAO,IAAIu0B,GAAuBsH,EACnC,sCAM2B,SAC1Bd,GAEA,IAAMvJ,EAAc,IAAIgD,GACxBhD,EAAYxtB,IACV82B,GAAcS,sBAAsB,CAClCL,WAAYH,EAAOG,WACnBC,iBAAkBJ,EAAOqhB,YACzBhhB,WAAYL,EAAOK,WACnBtV,KAAMiV,EAAOjV,KACbkV,SAAUD,EAAOC,SACjBC,MAAO56B,KAAK46B,MACZlR,UAAW1pB,KAAK0pB,aAIpB,IAAOqyB,EAAmCrhB,EAAnCqhB,YAAaxgB,EAAsBb,EAAtBa,WAAYygB,EAAUthB,EAAVshB,OAChC,OAAO7qB,EAAYxtB,IAAI3D,KAAKm8C,WAAW,CAACJ,YAAAA,EAAaxgB,WAAAA,EAAYygB,OAAAA,IAClE,8BAKmB,SAACthB,GACnB,IAAMvJ,EAAc,IAAIgD,GACxBhD,EAAYxtB,IACV82B,GAAcW,cAAc,CAC1BP,WAAYH,EAAOG,WACnBC,iBAAkBJ,EAAOqhB,YACzBphB,SAAUD,EAAOC,SACjBC,MAAO56B,KAAK46B,MACZlR,UAAW1pB,KAAK0pB,aAIpB,IAAOqyB,EAAmCrhB,EAAnCqhB,YAAaxgB,EAAsBb,EAAtBa,WAAYygB,EAAUthB,EAAVshB,OAChC,OAAO7qB,EAAYxtB,IAAI3D,KAAKm8C,WAAW,CAACJ,YAAAA,EAAaxgB,WAAAA,EAAYygB,OAAAA,IAClE,yBAOc,SAACthB,GACd,IAAOqhB,EAA6CrhB,EAA7CqhB,YAAa7iB,EAAgCwB,EAAhCxB,iBAAkB6M,EAAcrL,EAAdqL,WAGhCpmC,EAAOg5B,GADAwiB,GAA0BG,UAGvC,OAAO,IAAInnB,IAAcxwB,IAAI,CAC3B8X,KAAM,CACJ,CAACuQ,OAAQ+vB,EAAaruB,UAAU,EAAOC,YAAY,GACnD,CAAC3B,OAAQ+Z,EAAYrY,UAAU,EAAOC,YAAY,GAClD,CAAC3B,OAAQwL,GAAqB9J,UAAU,EAAOC,YAAY,GAC3D,CACE3B,OAAQ2L,GACRjK,UAAU,EACVC,YAAY,GAEd,CAAC3B,OAAQ+uB,GAAiBrtB,UAAU,EAAOC,YAAY,GACvD,CAAC3B,OAAQkN,EAAkBxL,UAAU,EAAMC,YAAY,IAEzDjE,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEH,0BAMe,SAAC+6B,GACf,IACEqhB,EAKErhB,EALFqhB,YACA7iB,EAIEwB,EAJFxB,iBACAuC,EAGEf,EAHFe,oBACA2gB,EAEE1hB,EAFF0hB,uBACAC,EACE3hB,EADF2hB,gBAII18C,EAAOg5B,GADAwiB,GAA0BE,UACT,CAC5BiB,cAAej0B,GAASoT,EAAoBpT,YAC5C+zB,uBAAwBA,EAAuBjxB,QAG3C1P,EAAO,CACX,CAACuQ,OAAQ+vB,EAAaruB,UAAU,EAAOC,YAAY,GACnD,CAAC3B,OAAQwL,GAAqB9J,UAAU,EAAOC,YAAY,GAC3D,CAAC3B,OAAQkN,EAAkBxL,UAAU,EAAMC,YAAY,IAKzD,OAHI0uB,GACF5gC,EAAK7iB,KAAK,CAACozB,OAAQqwB,EAAiB3uB,UAAU,EAAOC,YAAY,KAE5D,IAAIwG,IAAcxwB,IAAI,CAC3B8X,KAAAA,EACAiO,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEH,kCAMuB,SAAC+6B,GACvB,IACEqhB,EAOErhB,EAPFqhB,YACAQ,EAME7hB,EANF6hB,cACAC,EAKE9hB,EALF8hB,cACAC,EAIE/hB,EAJF+hB,eACAhhB,EAGEf,EAHFe,oBACA2gB,EAEE1hB,EAFF0hB,uBACAC,EACE3hB,EADF2hB,gBAII18C,EAAOg5B,GADAwiB,GAA0BQ,kBACT,CAC5BW,cAAej0B,GAASoT,EAAoBpT,YAC5C+zB,uBAAwBA,EAAuBjxB,MAC/CqxB,cAAeA,EACfC,eAAgBp0B,GAASo0B,EAAep0B,cAGpC5M,EAAO,CACX,CAACuQ,OAAQ+vB,EAAaruB,UAAU,EAAOC,YAAY,GACnD,CAAC3B,OAAQuwB,EAAe7uB,UAAU,EAAMC,YAAY,GACpD,CAAC3B,OAAQwL,GAAqB9J,UAAU,EAAOC,YAAY,IAK7D,OAHI0uB,GACF5gC,EAAK7iB,KAAK,CAACozB,OAAQqwB,EAAiB3uB,UAAU,EAAOC,YAAY,KAE5D,IAAIwG,IAAcxwB,IAAI,CAC3B8X,KAAAA,EACAiO,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEH,iCAKsB,SAAC+6B,GACtB,IAAOqhB,EAA6DrhB,EAA7DqhB,YAAa7iB,EAAgDwB,EAAhDxB,iBAAkBwjB,EAA8BhiB,EAA9BgiB,iBAAkB/hB,EAAYD,EAAZC,SAElDh7B,EAAOg5B,GADAwiB,GAA0BI,MACT,CAAC5gB,SAAAA,IAC/B,OAAO,IAAIzG,GAAuB,CAChCzY,KAAM,CACJ,CAACuQ,OAAQ+vB,EAAaruB,UAAU,EAAOC,YAAY,GACnD,CAAC3B,OAAQ0wB,EAAkBhvB,UAAU,EAAOC,YAAY,GACxD,CAAC3B,OAAQkN,EAAkBxL,UAAU,EAAMC,YAAY,IAEzDjE,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEH,sBAKW,SAAC+6B,GACX,IAAMvJ,EAAc,IAAIgD,GAUxB,OATAhD,EAAYxtB,IACV82B,GAAcW,cAAc,CAC1BP,WAAYH,EAAOxB,iBACnB4B,iBAAkBJ,EAAOgiB,iBACzB/hB,SAAU,EACVC,MAAO56B,KAAK46B,MACZlR,UAAW1pB,KAAK0pB,aAGbyH,EAAYxtB,IAAI3D,KAAK28C,iBAAiBjiB,GAC9C,8BAMmB,SAACA,GACnB,IACEqhB,EAMErhB,EANFqhB,YACA7iB,EAKEwB,EALFxB,iBACAwjB,EAIEhiB,EAJFgiB,iBACA3hB,EAGEL,EAHFK,WACAtV,EAEEiV,EAFFjV,KACAkV,EACED,EADFC,SAEIxJ,EAAc,IAAIgD,GAUxB,OATAhD,EAAYxtB,IACV82B,GAAc0B,SAAS,CACrBlB,cAAeyhB,EACf3hB,WAAAA,EACAtV,KAAAA,EACAmV,MAAO56B,KAAK46B,MACZlR,UAAW1pB,KAAK0pB,aAGbyH,EAAYxtB,IACjB3D,KAAK28C,iBAAiB,CACpBZ,YAAAA,EACA7iB,iBAAAA,EACAwjB,iBAAAA,EACA/hB,SAAAA,IAGL,sBAKW,SAACD,GACX,IAAOqhB,EAAoDrhB,EAApDqhB,YAAaa,EAAuCliB,EAAvCkiB,kBAAmB1jB,EAAoBwB,EAApBxB,iBAEjCv5B,EAAOg5B,GADAwiB,GAA0BO,OAGvC,OAAO,IAAIvnB,IAAcxwB,IAAI,CAC3B8X,KAAM,CACJ,CAACuQ,OAAQ+vB,EAAaruB,UAAU,EAAOC,YAAY,GACnD,CAAC3B,OAAQ4wB,EAAmBlvB,UAAU,EAAOC,YAAY,GACzD,CAAC3B,OAAQwL,GAAqB9J,UAAU,EAAOC,YAAY,GAC3D,CACE3B,OAAQ2L,GACRjK,UAAU,EACVC,YAAY,GAEd,CAAC3B,OAAQkN,EAAkBxL,UAAU,EAAMC,YAAY,IAEzDjE,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEH,yBAKc,SAAC+6B,GACd,IAAOqhB,EACLrhB,EADKqhB,YAAa7iB,EAClBwB,EADkBxB,iBAAkB8B,EACpCN,EADoCM,SAAUL,EAC9CD,EAD8CC,SAAU0hB,EACxD3hB,EADwD2hB,gBAGpD18C,EAAOg5B,GADAwiB,GAA0BK,SACT,CAAC7gB,SAAAA,IAEzBlf,EAAO,CACX,CAACuQ,OAAQ+vB,EAAaruB,UAAU,EAAOC,YAAY,GACnD,CAAC3B,OAAQgP,EAAUtN,UAAU,EAAOC,YAAY,GAChD,CAAC3B,OAAQwL,GAAqB9J,UAAU,EAAOC,YAAY,GAC3D,CACE3B,OAAQ2L,GACRjK,UAAU,EACVC,YAAY,GAEd,CAAC3B,OAAQkN,EAAkBxL,UAAU,EAAMC,YAAY,IAKzD,OAHI0uB,GACF5gC,EAAK7iB,KAAK,CAACozB,OAAQqwB,EAAiB3uB,UAAU,EAAOC,YAAY,KAE5D,IAAIwG,IAAcxwB,IAAI,CAC3B8X,KAAAA,EACAiO,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEH,2BAKgB,SAAC+6B,GAChB,IAAOqhB,EAAiCrhB,EAAjCqhB,YAAa7iB,EAAoBwB,EAApBxB,iBAEdv5B,EAAOg5B,GADAwiB,GAA0BM,YAGvC,OAAO,IAAItnB,IAAcxwB,IAAI,CAC3B8X,KAAM,CACJ,CAACuQ,OAAQ+vB,EAAaruB,UAAU,EAAOC,YAAY,GACnD,CAAC3B,OAAQwL,GAAqB9J,UAAU,EAAOC,YAAY,GAC3D,CAAC3B,OAAQkN,EAAkBxL,UAAU,EAAMC,YAAY,IAEzDjE,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEH,OA/UUi8C,IAAAA,GASJlyB,UAAuB,IAAIZ,GAChC,+CAVS8yB,GAoBJhhB,MAAgB,QC5TnBiiB,GAA2BxoD,OAAOiT,OAIrC,CACDw1C,kBAAmB,CACjB3xB,MAAO,EACP51B,OAAQ02B,GAAAA,GAAmE,CACzEA,GAAAA,GAAiB,ehC5KC,WAAmC,IAAlCl4B,EAAkC,uDAAf,WAC1C,OAAOk4B,GAAAA,GAQL,CACE1W,GAAU,cACVA,GAAU,mBACVA,GAAU,wBACV0W,GAAAA,GAAgB,eAElBl4B,EAfG,CgC6KDF,MAGJwnD,UAAW,CACTlwB,MAAO,EACP51B,OAAQ02B,GAAAA,GAA2D,CACjEA,GAAAA,GAAiB,eACjBp4B,GAAiB,iBACjBo4B,GAAAA,GAAiB,4BAGrBuvB,SAAU,CACRrwB,MAAO,EACP51B,OAAQ02B,GAAAA,GAA0D,CAChEA,GAAAA,GAAiB,eACjBA,GAAAA,GAAkB,eAGtB0vB,kBAAmB,CACjBxwB,MAAO,GACP51B,OAAQ02B,GAAAA,GAAmE,CACzEA,GAAAA,GAAiB,ehC5KkB,WAEpC,IADHl4B,EACG,uDADgB,4BAEnB,OAAOk4B,GAAAA,GACL,CACEA,GAAAA,GAAiB,yBACjB1W,GAAU,yCACV2W,GAAW,kCACX3W,GAAU,kBAEZxhB,EAVG,CgC6KDF,QA4BOkpD,IAZ0B1oD,OAAOiT,OAAO,CACnD01C,MAAO,CACL7xB,MAAO,GAET2wB,WAAY,CACV3wB,MAAO,KAOE4xB,WAIXxoD,SAAAA,KAAc,cAAE,sDAqBQ,SACtBmmC,GAEA,IAAOqL,EAAoCrL,EAApCqL,WAAYC,EAAwBtL,EAAxBsL,WAAYiX,EAAYviB,EAAZuiB,SAEzBt9C,EAAOg5B,GADAkkB,GAAyBC,kBACR,CAC5BG,SAAU,CACRjX,WAAY3d,GAAS40B,EAASjX,WAAW3d,YACzC60B,gBAAiB70B,GAAS40B,EAASC,gBAAgB70B,YACnD80B,qBAAsB90B,GACpB40B,EAASE,qBAAqB90B,YAEhC+d,WAAY6W,EAAS7W,cAGnB5K,EAAkB,CACtB/f,KAAM,CACJ,CAACuQ,OAAQ+Z,EAAYrY,UAAU,EAAOC,YAAY,GAClD,CAAC3B,OAAQ0L,GAAoBhK,UAAU,EAAOC,YAAY,GAC1D,CAAC3B,OAAQwL,GAAqB9J,UAAU,EAAOC,YAAY,GAC3D,CAAC3B,OAAQga,EAAYtY,UAAU,EAAMC,YAAY,IAEnDjE,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEF,OAAO,IAAIu0B,GAAuBsH,EACnC,8BAKmB,SAACd,GACnB,IAAMvJ,EAAc,IAAIgD,GAWxB,OAVAhD,EAAYxtB,IACV82B,GAAcW,cAAc,CAC1BP,WAAYH,EAAOG,WACnBC,iBAAkBJ,EAAOqL,WACzBpL,SAAUD,EAAOC,SACjBC,MAAO56B,KAAK46B,MACZlR,UAAW1pB,KAAK0pB,aAIbyH,EAAYxtB,IACjB3D,KAAKo9C,kBAAkB,CACrBrX,WAAYrL,EAAOqL,WACnBC,WAAYtL,EAAOuiB,SAASjX,WAC5BiX,SAAUviB,EAAOuiB,WAGtB,0BAKe,SAACviB,GACf,IACEqL,EAIErL,EAJFqL,WACA7M,EAGEwB,EAHFxB,iBACAuC,EAEEf,EAFFe,oBACA4hB,EACE3iB,EADF2iB,sBAII19C,EAAOg5B,GADAkkB,GAAyBxB,UACR,CAC5BiB,cAAej0B,GAASoT,EAAoBpT,YAC5Cg1B,sBAAuBA,EAAsBlyB,QAGzC1P,EAAO,CACX,CAACuQ,OAAQ+Z,EAAYrY,UAAU,EAAOC,YAAY,GAClD,CAAC3B,OAAQwL,GAAqB9J,UAAU,EAAOC,YAAY,GAC3D,CAAC3B,OAAQkN,EAAkBxL,UAAU,EAAMC,YAAY,IAGzD,OAAO,IAAIwG,IAAcxwB,IAAI,CAC3B8X,KAAAA,EACAiO,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEH,kCAMuB,SAAC+6B,GACvB,IACE4iB,EAME5iB,EANF4iB,qCACAC,EAKE7iB,EALF6iB,sCACAC,EAIE9iB,EAJF8iB,+BACA/hB,EAGEf,EAHFe,oBACA4hB,EAEE3iB,EAFF2iB,sBACAtX,EACErL,EADFqL,WAIIpmC,EAAOg5B,GADAkkB,GAAyBlB,kBACR,CAC5B8B,0BAA2B,CACzBF,sCAAuCl1B,GACrCk1B,EAAsCl1B,YAExCm1B,+BAAgCA,EAChClB,cAAej0B,GAASoT,EAAoBpT,YAC5Cg1B,sBAAuBA,EAAsBlyB,SAI3C1P,EAAO,CACX,CAACuQ,OAAQ+Z,EAAYrY,UAAU,EAAOC,YAAY,GAClD,CAAC3B,OAAQwL,GAAqB9J,UAAU,EAAOC,YAAY,GAC3D,CACE3B,OAAQsxB,EACR5vB,UAAU,EACVC,YAAY,IAIhB,OAAO,IAAIwG,IAAcxwB,IAAI,CAC3B8X,KAAAA,EACAiO,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEH,yBAKc,SAAC+6B,GACd,IAAOqL,EAA8DrL,EAA9DqL,WAAY2X,EAAkDhjB,EAAlDgjB,2BAA4B/iB,EAAsBD,EAAtBC,SAAUK,EAAYN,EAAZM,SAEnDr7B,EAAOg5B,GADAkkB,GAAyBrB,SACR,CAAC7gB,SAAAA,IAEzBlf,EAAO,CACX,CAACuQ,OAAQ+Z,EAAYrY,UAAU,EAAOC,YAAY,GAClD,CAAC3B,OAAQgP,EAAUtN,UAAU,EAAOC,YAAY,GAChD,CAAC3B,OAAQ0xB,EAA4BhwB,UAAU,EAAMC,YAAY,IAGnE,OAAO,IAAIwG,IAAcxwB,IAAI,CAC3B8X,KAAAA,EACAiO,UAAW1pB,KAAK0pB,UAChB/pB,KAAAA,GAEH,6BAUkB,SACjB+6B,EACAijB,EACAC,GAEA,GAAIljB,EAAOC,SAAWgjB,EAA4BC,EAChD,MAAM,IAAI7oD,MACR,4DAGJ,OAAOgoD,EAAYc,SAASnjB,EAC7B,OA9LUqiB,IAAAA,GASJrzB,UAAuB,IAAIZ,GAChC,+CAVSi0B,GAoBJniB,MAAgB,KCrWS,IAAI9R,GACpC,+CAyBiBiX,GAAK,CACtBnrC,KAAM0mB,KACNwiC,QAAS5iC,GAASI,MAClByiC,QAAS7iC,GAASI,MAClB0iC,gBAAiB9iC,GAASI,QCnCG,IAAIwN,GACjC,+CAoEwBmD,GAAAA,GAAqC,CAC7Dp4B,GAAiB,cACjBA,GAAiB,wBACjBo4B,GAAAA,GAAgB,cAChBA,GAAAA,KACAA,GAAAA,GACEA,GAAAA,GAAoB,CAClBA,GAAAA,GAAkB,QAClBA,GAAAA,GAAiB,uBAEnBA,GAAAA,GAAoBA,GAAAA,MAAqB,GACzC,SAEFA,GAAAA,GAAgB,iBAChBA,GAAAA,GAAkB,YAClBA,GAAAA,KACAA,GAAAA,GACEA,GAAAA,GAAoB,CAClBA,GAAAA,GAAkB,SAClBp4B,GAAiB,qBAEnBo4B,GAAAA,GAAoBA,GAAAA,MAAqB,GACzC,oBAEFA,GAAAA,GACE,CACEA,GAAAA,GACEA,GAAAA,GAAoB,CAClBp4B,GAAiB,oBACjBo4B,GAAAA,GAAkB,+BAClBA,GAAAA,GAAkB,iBAEpB,GACA,OAEFA,GAAAA,GAAkB,OAClBA,GAAAA,GAAgB,YAElB,eAEFA,GAAAA,KACAA,GAAAA,GACEA,GAAAA,GAAoB,CAClBA,GAAAA,GAAkB,SAClBA,GAAAA,GAAkB,WAClBA,GAAAA,GAAkB,iBAEpBA,GAAAA,GAAoBA,GAAAA,MAAqB,GACzC,gBAEFA,GAAAA,GACE,CAACA,GAAAA,GAAkB,QAASA,GAAAA,GAAkB,cAC9C,uDCzHJ,IAAIgyB,EAAUC,EAAAA,OAAAA,OA+GdC,EAAOvgD,QA9GP,SAAewgD,GACb,GAAIA,EAASxqD,QAAU,IAAO,MAAM,IAAIN,UAAU,qBAElD,IADA,IAAI+qD,EAAW,IAAIhrD,WAAW,KACrB2e,EAAI,EAAGA,EAAIqsC,EAASzqD,OAAQoe,IACnCqsC,EAASrsC,GAAK,IAEhB,IAAK,IAAIrZ,EAAI,EAAGA,EAAIylD,EAASxqD,OAAQ+E,IAAK,CACxC,IAAIwP,EAAIi2C,EAASE,OAAO3lD,GACpB4lD,EAAKp2C,EAAE0f,WAAW,GACtB,GAAqB,MAAjBw2B,EAASE,GAAe,MAAM,IAAIjrD,UAAU6U,EAAI,iBACpDk2C,EAASE,GAAM5lD,CAChB,CACD,IAAIiS,EAAOwzC,EAASxqD,OAChB4qD,EAASJ,EAASE,OAAO,GACzBG,EAAStpD,KAAK04C,IAAIjjC,GAAQzV,KAAK04C,IAAI,KACnC6Q,EAAUvpD,KAAK04C,IAAI,KAAO14C,KAAK04C,IAAIjjC,GAyCvC,SAAS+zC,EAAcrX,GACrB,GAAsB,kBAAXA,EAAuB,MAAM,IAAIh0C,UAAU,mBACtD,GAAsB,IAAlBg0C,EAAO1zC,OAAgB,OAAOqqD,EAAQzxB,MAAM,GAKhD,IAJA,IAAIoyB,EAAM,EAENC,EAAS,EACTjrD,EAAS,EACN0zC,EAAOsX,KAASJ,GACrBK,IACAD,IAMF,IAHA,IAAI9xB,GAAUwa,EAAO1zC,OAASgrD,GAAOH,EAAU,IAAO,EAClDK,EAAO,IAAIzrD,WAAWy5B,GAEnBwa,EAAOsX,IAAM,CAElB,IAAIG,EAAQV,EAAS/W,EAAOzf,WAAW+2B,IAEvC,GAAc,MAAVG,EAAiB,OAErB,IADA,IAAIpmD,EAAI,EACCqmD,EAAMlyB,EAAO,GAAc,IAAViyB,GAAepmD,EAAI/E,KAAqB,IAATorD,EAAaA,IAAOrmD,IAC3EomD,GAAUn0C,EAAOk0C,EAAKE,KAAU,EAChCF,EAAKE,GAAQD,EAAQ,MAAS,EAC9BA,EAASA,EAAQ,MAAS,EAE5B,GAAc,IAAVA,EAAe,MAAM,IAAIhqD,MAAM,kBACnCnB,EAAS+E,EACTimD,GACD,CAGD,IADA,IAAIK,EAAMnyB,EAAOl5B,EACVqrD,IAAQnyB,GAAsB,IAAdgyB,EAAKG,IAC1BA,IAEF,IAAIC,EAAMjB,EAAQkB,YAAYN,GAAU/xB,EAAOmyB,IAC/CC,EAAI79C,KAAK,EAAM,EAAGw9C,GAElB,IADA,IAAI7sC,EAAI6sC,EACDI,IAAQnyB,GACboyB,EAAIltC,KAAO8sC,EAAKG,KAElB,OAAOC,CACR,CAMD,MAAO,CACLvpD,OAzFF,SAAiB2xC,GAEf,IADInuC,MAAMC,QAAQkuC,IAAWA,aAAkBj0C,cAAci0C,EAAS2W,EAAQxqD,KAAK6zC,KAC9E2W,EAAQmB,SAAS9X,GAAW,MAAM,IAAIh0C,UAAU,mBACrD,GAAsB,IAAlBg0C,EAAO1zC,OAAgB,MAAO,GAMlC,IAJA,IAAIirD,EAAS,EACTjrD,EAAS,EACTyrD,EAAS,EACTC,EAAOhY,EAAO1zC,OACXyrD,IAAWC,GAA2B,IAAnBhY,EAAO+X,IAC/BA,IACAR,IAMF,IAHA,IAAI/xB,GAASwyB,EAAOD,GAAUX,EAAU,IAAO,EAC3Ca,EAAM,IAAIlsD,WAAWy5B,GAElBuyB,IAAWC,GAAM,CAItB,IAHA,IAAIP,EAAQzX,EAAO+X,GAEf1mD,EAAI,EACC6mD,EAAM1yB,EAAO,GAAc,IAAViyB,GAAepmD,EAAI/E,KAAqB,IAAT4rD,EAAaA,IAAO7mD,IAC3EomD,GAAU,IAAMQ,EAAIC,KAAU,EAC9BD,EAAIC,GAAQT,EAAQn0C,IAAU,EAC9Bm0C,EAASA,EAAQn0C,IAAU,EAE7B,GAAc,IAAVm0C,EAAe,MAAM,IAAIhqD,MAAM,kBACnCnB,EAAS+E,EACT0mD,GACD,CAGD,IADA,IAAII,EAAM3yB,EAAOl5B,EACV6rD,IAAQ3yB,GAAqB,IAAbyyB,EAAIE,IACzBA,IAIF,IADA,IAAI7/C,EAAM4+C,EAAOkB,OAAOb,GACjBY,EAAM3yB,IAAQ2yB,EAAO7/C,GAAOw+C,EAASE,OAAOiB,EAAIE,IACvD,OAAO7/C,CACR,EAmDC++C,aAAcA,EACdjpD,OARF,SAAiB4lB,GACf,IAAI5nB,EAASirD,EAAarjC,GAC1B,GAAI5nB,EAAU,OAAOA,EACrB,MAAM,IAAIqB,MAAM,WAAa6V,EAAO,aACrC,EAMF,0BCrHD,SAAWuzC,EAAQvgD,GACjB,aAGA,SAASO,EAAQgZ,EAAKzB,GACpB,IAAKyB,EAAK,MAAM,IAAIpiB,MAAM2gB,GAAO,mBAClC,CAID,SAASiqC,EAAUC,EAAMC,GACvBD,EAAKE,OAASD,EACd,IAAIE,EAAW,WAAc,EAC7BA,EAASvrD,UAAYqrD,EAAUrrD,UAC/BorD,EAAKprD,UAAY,IAAIurD,EACrBH,EAAKprD,UAAUD,YAAcqrD,CAC9B,CAID,SAASz2B,EAAItrB,EAAQ2M,EAAMw1C,GACzB,GAAI72B,EAAG82B,KAAKpiD,GACV,OAAOA,EAGTmC,KAAKkgD,SAAW,EAChBlgD,KAAKmgD,MAAQ,KACbngD,KAAKpM,OAAS,EAGdoM,KAAKogD,IAAM,KAEI,OAAXviD,IACW,OAAT2M,GAA0B,OAATA,IACnBw1C,EAASx1C,EACTA,EAAO,IAGTxK,KAAKqgD,MAAMxiD,GAAU,EAAG2M,GAAQ,GAAIw1C,GAAU,MAEjD,CAUD,IAAI13B,EATkB,kBAAX61B,EACTA,EAAOvgD,QAAUurB,EAEjBvrB,EAAQurB,GAAKA,EAGfA,EAAGA,GAAKA,EACRA,EAAGm3B,SAAW,GAGd,IAEIh4B,EADoB,qBAAX7d,QAAmD,qBAAlBA,OAAO6d,OACxC7d,OAAO6d,OAEP41B,EAAAA,OAAAA,MAGZ,CADC,MAAO1kD,GACR,CA+HD,SAAS+mD,EAAejlC,EAAQ6P,GAC9B,IAAIzc,EAAI4M,EAAOuM,WAAWsD,GAE1B,OAAIzc,GAAK,IAAMA,GAAK,GACXA,EAAI,GAEFA,GAAK,IAAMA,GAAK,GAClBA,EAAI,GAEFA,GAAK,IAAMA,GAAK,IAClBA,EAAI,QAEXvQ,GAAO,EAAO,wBAA0Bmd,EAE3C,CAED,SAASklC,EAAcllC,EAAQmlC,EAAYt1B,GACzC,IAAI3c,EAAI+xC,EAAcjlC,EAAQ6P,GAI9B,OAHIA,EAAQ,GAAKs1B,IACfjyC,GAAK+xC,EAAcjlC,EAAQ6P,EAAQ,IAAM,GAEpC3c,CACR,CA6CD,SAASkyC,EAAW9gD,EAAK/C,EAAO8jD,EAAKC,GAInC,IAHA,IAAIpyC,EAAI,EACJpb,EAAI,EACJ0N,EAAM3L,KAAK4J,IAAIa,EAAIhM,OAAQ+sD,GACtBhoD,EAAIkE,EAAOlE,EAAImI,EAAKnI,IAAK,CAChC,IAAI+V,EAAI9O,EAAIioB,WAAWlvB,GAAK,GAE5B6V,GAAKoyC,EAIHxtD,EADEsb,GAAK,GACHA,EAAI,GAAK,GAGJA,GAAK,GACVA,EAAI,GAAK,GAITA,EAENvQ,EAAOuQ,GAAK,GAAKtb,EAAIwtD,EAAK,qBAC1BpyC,GAAKpb,CACN,CACD,OAAOob,CACR,CA2DD,SAASqyC,EAAMnnD,EAAMrE,GACnBqE,EAAKymD,MAAQ9qD,EAAI8qD,MACjBzmD,EAAK9F,OAASyB,EAAIzB,OAClB8F,EAAKwmD,SAAW7qD,EAAI6qD,SACpBxmD,EAAK0mD,IAAM/qD,EAAI+qD,GAChB,CAqCD,GA9TAj3B,EAAG82B,KAAO,SAAetzC,GACvB,OAAIA,aAAewc,GAIJ,OAARxc,GAA+B,kBAARA,GAC5BA,EAAIpY,YAAY+rD,WAAan3B,EAAGm3B,UAAYnnD,MAAMC,QAAQuT,EAAIwzC,MACjE,EAEDh3B,EAAG1U,IAAM,SAAc4M,EAAMy/B,GAC3B,OAAIz/B,EAAK0/B,IAAID,GAAS,EAAUz/B,EACzBy/B,CACR,EAED33B,EAAGpqB,IAAM,SAAcsiB,EAAMy/B,GAC3B,OAAIz/B,EAAK0/B,IAAID,GAAS,EAAUz/B,EACzBy/B,CACR,EAED33B,EAAG30B,UAAU6rD,MAAQ,SAAexiD,EAAQ2M,EAAMw1C,GAChD,GAAsB,kBAAXniD,EACT,OAAOmC,KAAKghD,YAAYnjD,EAAQ2M,EAAMw1C,GAGxC,GAAsB,kBAAXniD,EACT,OAAOmC,KAAKihD,WAAWpjD,EAAQ2M,EAAMw1C,GAG1B,QAATx1C,IACFA,EAAO,IAETrM,EAAOqM,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAGnD,IAAI3N,EAAQ,EACM,OAFlBgB,EAASA,EAAOT,WAAW8jD,QAAQ,OAAQ,KAEhC,KACTrkD,IACAmD,KAAKkgD,SAAW,GAGdrjD,EAAQgB,EAAOjK,SACJ,KAAT4W,EACFxK,KAAKmhD,UAAUtjD,EAAQhB,EAAOmjD,IAE9BhgD,KAAKohD,WAAWvjD,EAAQ2M,EAAM3N,GACf,OAAXmjD,GACFhgD,KAAKihD,WAAWjhD,KAAKqhD,UAAW72C,EAAMw1C,IAI7C,EAED72B,EAAG30B,UAAUwsD,YAAc,SAAsBnjD,EAAQ2M,EAAMw1C,GACzDniD,EAAS,IACXmC,KAAKkgD,SAAW,EAChBriD,GAAUA,GAERA,EAAS,UACXmC,KAAKmgD,MAAQ,CAAU,SAATtiD,GACdmC,KAAKpM,OAAS,GACLiK,EAAS,kBAClBmC,KAAKmgD,MAAQ,CACF,SAATtiD,EACCA,EAAS,SAAa,UAEzBmC,KAAKpM,OAAS,IAEduK,EAAON,EAAS,kBAChBmC,KAAKmgD,MAAQ,CACF,SAATtiD,EACCA,EAAS,SAAa,SACvB,GAEFmC,KAAKpM,OAAS,GAGD,OAAXosD,GAGJhgD,KAAKihD,WAAWjhD,KAAKqhD,UAAW72C,EAAMw1C,EACvC,EAED72B,EAAG30B,UAAUysD,WAAa,SAAqBpjD,EAAQ2M,EAAMw1C,GAG3D,GADA7hD,EAAgC,kBAAlBN,EAAOjK,QACjBiK,EAAOjK,QAAU,EAGnB,OAFAoM,KAAKmgD,MAAQ,CAAC,GACdngD,KAAKpM,OAAS,EACPoM,KAGTA,KAAKpM,OAASuB,KAAKwmC,KAAK99B,EAAOjK,OAAS,GACxCoM,KAAKmgD,MAAQ,IAAIhnD,MAAM6G,KAAKpM,QAC5B,IAAK,IAAI+E,EAAI,EAAGA,EAAIqH,KAAKpM,OAAQ+E,IAC/BqH,KAAKmgD,MAAMxnD,GAAK,EAGlB,IAAIqZ,EAAGsvC,EACHC,EAAM,EACV,GAAe,OAAXvB,EACF,IAAKrnD,EAAIkF,EAAOjK,OAAS,EAAGoe,EAAI,EAAGrZ,GAAK,EAAGA,GAAK,EAC9C2oD,EAAIzjD,EAAOlF,GAAMkF,EAAOlF,EAAI,IAAM,EAAMkF,EAAOlF,EAAI,IAAM,GACzDqH,KAAKmgD,MAAMnuC,IAAOsvC,GAAKC,EAAO,SAC9BvhD,KAAKmgD,MAAMnuC,EAAI,GAAMsvC,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACPvvC,UAGC,GAAe,OAAXguC,EACT,IAAKrnD,EAAI,EAAGqZ,EAAI,EAAGrZ,EAAIkF,EAAOjK,OAAQ+E,GAAK,EACzC2oD,EAAIzjD,EAAOlF,GAAMkF,EAAOlF,EAAI,IAAM,EAAMkF,EAAOlF,EAAI,IAAM,GACzDqH,KAAKmgD,MAAMnuC,IAAOsvC,GAAKC,EAAO,SAC9BvhD,KAAKmgD,MAAMnuC,EAAI,GAAMsvC,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACPvvC,KAIN,OAAOhS,KAAKwhD,QACb,EA0BDr4B,EAAG30B,UAAU2sD,UAAY,SAAoBtjD,EAAQhB,EAAOmjD,GAE1DhgD,KAAKpM,OAASuB,KAAKwmC,MAAM99B,EAAOjK,OAASiJ,GAAS,GAClDmD,KAAKmgD,MAAQ,IAAIhnD,MAAM6G,KAAKpM,QAC5B,IAAK,IAAI+E,EAAI,EAAGA,EAAIqH,KAAKpM,OAAQ+E,IAC/BqH,KAAKmgD,MAAMxnD,GAAK,EAIlB,IAGI2oD,EAHAC,EAAM,EACNvvC,EAAI,EAGR,GAAe,OAAXguC,EACF,IAAKrnD,EAAIkF,EAAOjK,OAAS,EAAG+E,GAAKkE,EAAOlE,GAAK,EAC3C2oD,EAAId,EAAa3iD,EAAQhB,EAAOlE,IAAM4oD,EACtCvhD,KAAKmgD,MAAMnuC,IAAU,SAAJsvC,EACbC,GAAO,IACTA,GAAO,GACPvvC,GAAK,EACLhS,KAAKmgD,MAAMnuC,IAAMsvC,IAAM,IAEvBC,GAAO,OAKX,IAAK5oD,GADakF,EAAOjK,OAASiJ,GACX,IAAM,EAAIA,EAAQ,EAAIA,EAAOlE,EAAIkF,EAAOjK,OAAQ+E,GAAK,EAC1E2oD,EAAId,EAAa3iD,EAAQhB,EAAOlE,IAAM4oD,EACtCvhD,KAAKmgD,MAAMnuC,IAAU,SAAJsvC,EACbC,GAAO,IACTA,GAAO,GACPvvC,GAAK,EACLhS,KAAKmgD,MAAMnuC,IAAMsvC,IAAM,IAEvBC,GAAO,EAKbvhD,KAAKwhD,QACN,EA6BDr4B,EAAG30B,UAAU4sD,WAAa,SAAqBvjD,EAAQ2M,EAAM3N,GAE3DmD,KAAKmgD,MAAQ,CAAC,GACdngD,KAAKpM,OAAS,EAGd,IAAK,IAAI6tD,EAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAWl3C,EAClEi3C,IAEFA,IACAC,EAAWA,EAAUl3C,EAAQ,EAO7B,IALA,IAAIs4B,EAAQjlC,EAAOjK,OAASiJ,EACxBmM,EAAM85B,EAAQ2e,EACdd,EAAMxrD,KAAK4J,IAAI+jC,EAAOA,EAAQ95B,GAAOnM,EAErCd,EAAO,EACFpD,EAAIkE,EAAOlE,EAAIgoD,EAAKhoD,GAAK8oD,EAChC1lD,EAAO2kD,EAAU7iD,EAAQlF,EAAGA,EAAI8oD,EAASj3C,GAEzCxK,KAAK2hD,MAAMD,GACP1hD,KAAKmgD,MAAM,GAAKpkD,EAAO,SACzBiE,KAAKmgD,MAAM,IAAMpkD,EAEjBiE,KAAK4hD,OAAO7lD,GAIhB,GAAY,IAARiN,EAAW,CACb,IAAIzS,EAAM,EAGV,IAFAwF,EAAO2kD,EAAU7iD,EAAQlF,EAAGkF,EAAOjK,OAAQ4W,GAEtC7R,EAAI,EAAGA,EAAIqQ,EAAKrQ,IACnBpC,GAAOiU,EAGTxK,KAAK2hD,MAAMprD,GACPyJ,KAAKmgD,MAAM,GAAKpkD,EAAO,SACzBiE,KAAKmgD,MAAM,IAAMpkD,EAEjBiE,KAAK4hD,OAAO7lD,EAEf,CAEDiE,KAAKwhD,QACN,EAEDr4B,EAAG30B,UAAUgJ,KAAO,SAAe9D,GACjCA,EAAKymD,MAAQ,IAAIhnD,MAAM6G,KAAKpM,QAC5B,IAAK,IAAI+E,EAAI,EAAGA,EAAIqH,KAAKpM,OAAQ+E,IAC/Be,EAAKymD,MAAMxnD,GAAKqH,KAAKmgD,MAAMxnD,GAE7Be,EAAK9F,OAASoM,KAAKpM,OACnB8F,EAAKwmD,SAAWlgD,KAAKkgD,SACrBxmD,EAAK0mD,IAAMpgD,KAAKogD,GACjB,EASDj3B,EAAG30B,UAAUqtD,MAAQ,SAAgBnoD,GACnCmnD,EAAKnnD,EAAMsG,KACZ,EAEDmpB,EAAG30B,UAAUstD,MAAQ,WACnB,IAAItzC,EAAI,IAAI2a,EAAG,MAEf,OADAnpB,KAAKxC,KAAKgR,GACHA,CACR,EAED2a,EAAG30B,UAAUutD,QAAU,SAAkBj1B,GACvC,KAAO9sB,KAAKpM,OAASk5B,GACnB9sB,KAAKmgD,MAAMngD,KAAKpM,UAAY,EAE9B,OAAOoM,IACR,EAGDmpB,EAAG30B,UAAUgtD,OAAS,WACpB,KAAOxhD,KAAKpM,OAAS,GAAqC,IAAhCoM,KAAKmgD,MAAMngD,KAAKpM,OAAS,IACjDoM,KAAKpM,SAEP,OAAOoM,KAAKgiD,WACb,EAED74B,EAAG30B,UAAUwtD,UAAY,WAKvB,OAHoB,IAAhBhiD,KAAKpM,QAAkC,IAAlBoM,KAAKmgD,MAAM,KAClCngD,KAAKkgD,SAAW,GAEXlgD,IACR,EAIqB,qBAAXuY,QAAgD,oBAAfA,OAAO0pC,IACjD,IACE94B,EAAG30B,UAAU+jB,OAAO0pC,IAAI,+BAAiCC,CAG1D,CAFC,MAAO1oD,GACP2vB,EAAG30B,UAAU0tD,QAAUA,CACxB,MAED/4B,EAAG30B,UAAU0tD,QAAUA,EAGzB,SAASA,IACP,OAAQliD,KAAKogD,IAAM,UAAY,SAAWpgD,KAAK5C,SAAS,IAAM,GAC/D,CAgCD,IAAI+kD,EAAQ,CACV,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGEC,EAAa,CACf,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,EAAa,CACf,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAG9Dl5B,EAAG30B,UAAU4I,SAAW,SAAmBoN,EAAM2uC,GAI/C,IAAIr6C,EACJ,GAHAq6C,EAAoB,EAAVA,GAAe,EAGZ,MAJb3uC,EAAOA,GAAQ,KAIa,QAATA,EAAgB,CACjC1L,EAAM,GAGN,IAFA,IAAIyiD,EAAM,EACNxC,EAAQ,EACHpmD,EAAI,EAAGA,EAAIqH,KAAKpM,OAAQ+E,IAAK,CACpC,IAAI2oD,EAAIthD,KAAKmgD,MAAMxnD,GACfoD,GAA+B,UAArBulD,GAAKC,EAAOxC,IAAmB3hD,SAAS,IACtD2hD,EAASuC,IAAO,GAAKC,EAAQ,UAC7BA,GAAO,IACI,KACTA,GAAO,GACP5oD,KAGAmG,EADY,IAAVigD,GAAepmD,IAAMqH,KAAKpM,OAAS,EAC/BuuD,EAAM,EAAIpmD,EAAKnI,QAAUmI,EAAO+C,EAEhC/C,EAAO+C,CAEhB,CAID,IAHc,IAAVigD,IACFjgD,EAAMigD,EAAM3hD,SAAS,IAAM0B,GAEtBA,EAAIlL,OAASulD,IAAY,GAC9Br6C,EAAM,IAAMA,EAKd,OAHsB,IAAlBkB,KAAKkgD,WACPphD,EAAM,IAAMA,GAEPA,CACR,CAED,GAAI0L,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAElD,IAAI83C,EAAYF,EAAW53C,GAEvB+3C,EAAYF,EAAW73C,GAC3B1L,EAAM,GACN,IAAI4P,EAAI1O,KAAK8hD,QAEb,IADApzC,EAAEwxC,SAAW,GACLxxC,EAAE8zC,UAAU,CAClB,IAAIh0C,EAAIE,EAAE+zC,MAAMF,GAAWnlD,SAASoN,GAMlC1L,GALF4P,EAAIA,EAAEg0C,MAAMH,IAELC,SAGCh0C,EAAI1P,EAFJqjD,EAAMG,EAAY9zC,EAAE5a,QAAU4a,EAAI1P,CAI3C,CAID,IAHIkB,KAAKwiD,WACP1jD,EAAM,IAAMA,GAEPA,EAAIlL,OAASulD,IAAY,GAC9Br6C,EAAM,IAAMA,EAKd,OAHsB,IAAlBkB,KAAKkgD,WACPphD,EAAM,IAAMA,GAEPA,CACR,CAEDX,GAAO,EAAO,kCACf,EAEDgrB,EAAG30B,UAAUmuD,SAAW,WACtB,IAAIC,EAAM5iD,KAAKmgD,MAAM,GASrB,OARoB,IAAhBngD,KAAKpM,OACPgvD,GAAuB,SAAhB5iD,KAAKmgD,MAAM,GACO,IAAhBngD,KAAKpM,QAAkC,IAAlBoM,KAAKmgD,MAAM,GAEzCyC,GAAO,iBAAoC,SAAhB5iD,KAAKmgD,MAAM,GAC7BngD,KAAKpM,OAAS,GACvBuK,GAAO,EAAO,8CAEU,IAAlB6B,KAAKkgD,UAAmB0C,EAAMA,CACvC,EAEDz5B,EAAG30B,UAAU80B,OAAS,WACpB,OAAOtpB,KAAK5C,SAAS,GAAI,EAC1B,EAEGkrB,IACFa,EAAG30B,UAAU6zB,SAAW,SAAmB23B,EAAQpsD,GACjD,OAAOoM,KAAKupB,YAAYjB,EAAQ03B,EAAQpsD,EACzC,GAGHu1B,EAAG30B,UAAU6sD,QAAU,SAAkBrB,EAAQpsD,GAC/C,OAAOoM,KAAKupB,YAAYpwB,MAAO6mD,EAAQpsD,EACxC,EA2gBD,SAASivD,EAAY5jD,EAAM0N,EAAK7N,GAC9BA,EAAIohD,SAAWvzC,EAAIuzC,SAAWjhD,EAAKihD,SACnC,IAAIp/C,EAAO7B,EAAKrL,OAAS+Y,EAAI/Y,OAAU,EACvCkL,EAAIlL,OAASkN,EACbA,EAAOA,EAAM,EAAK,EAGlB,IAAIyG,EAAoB,EAAhBtI,EAAKkhD,MAAM,GACf/sD,EAAmB,EAAfuZ,EAAIwzC,MAAM,GACd3xC,EAAIjH,EAAInU,EAERyB,EAAS,SAAJ2Z,EACLuwC,EAASvwC,EAAI,SAAa,EAC9B1P,EAAIqhD,MAAM,GAAKtrD,EAEf,IAAK,IAAI+gB,EAAI,EAAGA,EAAI9U,EAAK8U,IAAK,CAM5B,IAHA,IAAIktC,EAAS/D,IAAU,GACnBgE,EAAgB,SAARhE,EACRiE,EAAO7tD,KAAK4J,IAAI6W,EAAGjJ,EAAI/Y,OAAS,GAC3Boe,EAAI7c,KAAKsf,IAAI,EAAGmB,EAAI3W,EAAKrL,OAAS,GAAIoe,GAAKgxC,EAAMhxC,IAAK,CAC7D,IAAIrZ,EAAKid,EAAI5D,EAAK,EAIlB8wC,IADAt0C,GAFAjH,EAAoB,EAAhBtI,EAAKkhD,MAAMxnD,KACfvF,EAAmB,EAAfuZ,EAAIwzC,MAAMnuC,IACF+wC,GACG,SAAa,EAC5BA,EAAY,SAAJv0C,CACT,CACD1P,EAAIqhD,MAAMvqC,GAAa,EAARmtC,EACfhE,EAAiB,EAAT+D,CACT,CAOD,OANc,IAAV/D,EACFjgD,EAAIqhD,MAAMvqC,GAAa,EAARmpC,EAEfjgD,EAAIlL,SAGCkL,EAAI0iD,QACZ,CAziBDr4B,EAAG30B,UAAU+0B,YAAc,SAAsB05B,EAAWjD,EAAQpsD,GAClEoM,KAAKwhD,SAEL,IAAIniD,EAAaW,KAAKX,aAClB6jD,EAAYtvD,GAAUuB,KAAKsf,IAAI,EAAGpV,GACtClB,EAAOkB,GAAc6jD,EAAW,yCAChC/kD,EAAO+kD,EAAY,EAAG,+BAEtB,IAAI/gD,EAfS,SAAmB8gD,EAAWn2B,GAC3C,OAAIm2B,EAAU9D,YACL8D,EAAU9D,YAAYryB,GAExB,IAAIm2B,EAAUn2B,EACtB,CAUWqP,CAAS8mB,EAAWC,GAG9B,OADAljD,KAAK,gBADoB,OAAXggD,EAAkB,KAAO,OACR79C,EAAK9C,GAC7B8C,CACR,EAEDgnB,EAAG30B,UAAU2uD,eAAiB,SAAyBhhD,EAAK9C,GAI1D,IAHA,IAAI+jD,EAAW,EACXrE,EAAQ,EAEHpmD,EAAI,EAAGqB,EAAQ,EAAGrB,EAAIqH,KAAKpM,OAAQ+E,IAAK,CAC/C,IAAIoD,EAAQiE,KAAKmgD,MAAMxnD,IAAMqB,EAAS+kD,EAEtC58C,EAAIihD,KAAqB,IAAPrnD,EACdqnD,EAAWjhD,EAAIvO,SACjBuO,EAAIihD,KAAernD,GAAQ,EAAK,KAE9BqnD,EAAWjhD,EAAIvO,SACjBuO,EAAIihD,KAAernD,GAAQ,GAAM,KAGrB,IAAV/B,GACEopD,EAAWjhD,EAAIvO,SACjBuO,EAAIihD,KAAernD,GAAQ,GAAM,KAEnCgjD,EAAQ,EACR/kD,EAAQ,IAER+kD,EAAQhjD,IAAS,GACjB/B,GAAS,EAEZ,CAED,GAAIopD,EAAWjhD,EAAIvO,OAGjB,IAFAuO,EAAIihD,KAAcrE,EAEXqE,EAAWjhD,EAAIvO,QACpBuO,EAAIihD,KAAc,CAGvB,EAEDj6B,EAAG30B,UAAU6uD,eAAiB,SAAyBlhD,EAAK9C,GAI1D,IAHA,IAAI+jD,EAAWjhD,EAAIvO,OAAS,EACxBmrD,EAAQ,EAEHpmD,EAAI,EAAGqB,EAAQ,EAAGrB,EAAIqH,KAAKpM,OAAQ+E,IAAK,CAC/C,IAAIoD,EAAQiE,KAAKmgD,MAAMxnD,IAAMqB,EAAS+kD,EAEtC58C,EAAIihD,KAAqB,IAAPrnD,EACdqnD,GAAY,IACdjhD,EAAIihD,KAAernD,GAAQ,EAAK,KAE9BqnD,GAAY,IACdjhD,EAAIihD,KAAernD,GAAQ,GAAM,KAGrB,IAAV/B,GACEopD,GAAY,IACdjhD,EAAIihD,KAAernD,GAAQ,GAAM,KAEnCgjD,EAAQ,EACR/kD,EAAQ,IAER+kD,EAAQhjD,IAAS,GACjB/B,GAAS,EAEZ,CAED,GAAIopD,GAAY,EAGd,IAFAjhD,EAAIihD,KAAcrE,EAEXqE,GAAY,GACjBjhD,EAAIihD,KAAc,CAGvB,EAEGjuD,KAAKmuD,MACPn6B,EAAG30B,UAAU+uD,WAAa,SAAqBjC,GAC7C,OAAO,GAAKnsD,KAAKmuD,MAAMhC,EACxB,EAEDn4B,EAAG30B,UAAU+uD,WAAa,SAAqBjC,GAC7C,IAAIh5C,EAAIg5C,EACJ9yC,EAAI,EAiBR,OAhBIlG,GAAK,OACPkG,GAAK,GACLlG,KAAO,IAELA,GAAK,KACPkG,GAAK,EACLlG,KAAO,GAELA,GAAK,IACPkG,GAAK,EACLlG,KAAO,GAELA,GAAK,IACPkG,GAAK,EACLlG,KAAO,GAEFkG,EAAIlG,CACZ,EAGH6gB,EAAG30B,UAAUgvD,UAAY,SAAoBlC,GAE3C,GAAU,IAANA,EAAS,OAAO,GAEpB,IAAIh5C,EAAIg5C,EACJ9yC,EAAI,EAoBR,OAnBqB,KAAZ,KAAJlG,KACHkG,GAAK,GACLlG,KAAO,IAEU,KAAV,IAAJA,KACHkG,GAAK,EACLlG,KAAO,GAES,KAAT,GAAJA,KACHkG,GAAK,EACLlG,KAAO,GAES,KAAT,EAAJA,KACHkG,GAAK,EACLlG,KAAO,GAES,KAAT,EAAJA,IACHkG,IAEKA,CACR,EAGD2a,EAAG30B,UAAUivD,UAAY,WACvB,IAAInC,EAAIthD,KAAKmgD,MAAMngD,KAAKpM,OAAS,GAC7B8vD,EAAK1jD,KAAKujD,WAAWjC,GACzB,OAA2B,IAAnBthD,KAAKpM,OAAS,GAAU8vD,CACjC,EAgBDv6B,EAAG30B,UAAUmvD,SAAW,WACtB,GAAI3jD,KAAKwiD,SAAU,OAAO,EAG1B,IADA,IAAIh0C,EAAI,EACC7V,EAAI,EAAGA,EAAIqH,KAAKpM,OAAQ+E,IAAK,CACpC,IAAIvF,EAAI4M,KAAKwjD,UAAUxjD,KAAKmgD,MAAMxnD,IAElC,GADA6V,GAAKpb,EACK,KAANA,EAAU,KACf,CACD,OAAOob,CACR,EAED2a,EAAG30B,UAAU6K,WAAa,WACxB,OAAOlK,KAAKwmC,KAAK37B,KAAKyjD,YAAc,EACrC,EAEDt6B,EAAG30B,UAAUovD,OAAS,SAAiBC,GACrC,OAAsB,IAAlB7jD,KAAKkgD,SACAlgD,KAAK4L,MAAMk4C,MAAMD,GAAOE,MAAM,GAEhC/jD,KAAK8hD,OACb,EAED34B,EAAG30B,UAAUwvD,SAAW,SAAmBH,GACzC,OAAI7jD,KAAKikD,MAAMJ,EAAQ,GACd7jD,KAAKkkD,KAAKL,GAAOE,MAAM,GAAGI,OAE5BnkD,KAAK8hD,OACb,EAED34B,EAAG30B,UAAU4vD,MAAQ,WACnB,OAAyB,IAAlBpkD,KAAKkgD,QACb,EAGD/2B,EAAG30B,UAAU6vD,IAAM,WACjB,OAAOrkD,KAAK8hD,QAAQqC,MACrB,EAEDh7B,EAAG30B,UAAU2vD,KAAO,WAKlB,OAJKnkD,KAAKwiD,WACRxiD,KAAKkgD,UAAY,GAGZlgD,IACR,EAGDmpB,EAAG30B,UAAU8vD,KAAO,SAAe33C,GACjC,KAAO3M,KAAKpM,OAAS+Y,EAAI/Y,QACvBoM,KAAKmgD,MAAMngD,KAAKpM,UAAY,EAG9B,IAAK,IAAI+E,EAAI,EAAGA,EAAIgU,EAAI/Y,OAAQ+E,IAC9BqH,KAAKmgD,MAAMxnD,GAAKqH,KAAKmgD,MAAMxnD,GAAKgU,EAAIwzC,MAAMxnD,GAG5C,OAAOqH,KAAKwhD,QACb,EAEDr4B,EAAG30B,UAAU+vD,IAAM,SAAc53C,GAE/B,OADAxO,EAA0C,KAAlC6B,KAAKkgD,SAAWvzC,EAAIuzC,WACrBlgD,KAAKskD,KAAK33C,EAClB,EAGDwc,EAAG30B,UAAUgwD,GAAK,SAAa73C,GAC7B,OAAI3M,KAAKpM,OAAS+Y,EAAI/Y,OAAeoM,KAAK8hD,QAAQyC,IAAI53C,GAC/CA,EAAIm1C,QAAQyC,IAAIvkD,KACxB,EAEDmpB,EAAG30B,UAAUiwD,IAAM,SAAc93C,GAC/B,OAAI3M,KAAKpM,OAAS+Y,EAAI/Y,OAAeoM,KAAK8hD,QAAQwC,KAAK33C,GAChDA,EAAIm1C,QAAQwC,KAAKtkD,KACzB,EAGDmpB,EAAG30B,UAAUkwD,MAAQ,SAAgB/3C,GAEnC,IAAIvZ,EAEFA,EADE4M,KAAKpM,OAAS+Y,EAAI/Y,OAChB+Y,EAEA3M,KAGN,IAAK,IAAIrH,EAAI,EAAGA,EAAIvF,EAAEQ,OAAQ+E,IAC5BqH,KAAKmgD,MAAMxnD,GAAKqH,KAAKmgD,MAAMxnD,GAAKgU,EAAIwzC,MAAMxnD,GAK5C,OAFAqH,KAAKpM,OAASR,EAAEQ,OAEToM,KAAKwhD,QACb,EAEDr4B,EAAG30B,UAAUmwD,KAAO,SAAeh4C,GAEjC,OADAxO,EAA0C,KAAlC6B,KAAKkgD,SAAWvzC,EAAIuzC,WACrBlgD,KAAK0kD,MAAM/3C,EACnB,EAGDwc,EAAG30B,UAAUowD,IAAM,SAAcj4C,GAC/B,OAAI3M,KAAKpM,OAAS+Y,EAAI/Y,OAAeoM,KAAK8hD,QAAQ6C,KAAKh4C,GAChDA,EAAIm1C,QAAQ6C,KAAK3kD,KACzB,EAEDmpB,EAAG30B,UAAUqwD,KAAO,SAAel4C,GACjC,OAAI3M,KAAKpM,OAAS+Y,EAAI/Y,OAAeoM,KAAK8hD,QAAQ4C,MAAM/3C,GACjDA,EAAIm1C,QAAQ4C,MAAM1kD,KAC1B,EAGDmpB,EAAG30B,UAAUswD,MAAQ,SAAgBn4C,GAEnC,IAAIpF,EACAnU,EACA4M,KAAKpM,OAAS+Y,EAAI/Y,QACpB2T,EAAIvH,KACJ5M,EAAIuZ,IAEJpF,EAAIoF,EACJvZ,EAAI4M,MAGN,IAAK,IAAIrH,EAAI,EAAGA,EAAIvF,EAAEQ,OAAQ+E,IAC5BqH,KAAKmgD,MAAMxnD,GAAK4O,EAAE44C,MAAMxnD,GAAKvF,EAAE+sD,MAAMxnD,GAGvC,GAAIqH,OAASuH,EACX,KAAO5O,EAAI4O,EAAE3T,OAAQ+E,IACnBqH,KAAKmgD,MAAMxnD,GAAK4O,EAAE44C,MAAMxnD,GAM5B,OAFAqH,KAAKpM,OAAS2T,EAAE3T,OAEToM,KAAKwhD,QACb,EAEDr4B,EAAG30B,UAAUuwD,KAAO,SAAep4C,GAEjC,OADAxO,EAA0C,KAAlC6B,KAAKkgD,SAAWvzC,EAAIuzC,WACrBlgD,KAAK8kD,MAAMn4C,EACnB,EAGDwc,EAAG30B,UAAUwwD,IAAM,SAAcr4C,GAC/B,OAAI3M,KAAKpM,OAAS+Y,EAAI/Y,OAAeoM,KAAK8hD,QAAQiD,KAAKp4C,GAChDA,EAAIm1C,QAAQiD,KAAK/kD,KACzB,EAEDmpB,EAAG30B,UAAUywD,KAAO,SAAet4C,GACjC,OAAI3M,KAAKpM,OAAS+Y,EAAI/Y,OAAeoM,KAAK8hD,QAAQgD,MAAMn4C,GACjDA,EAAIm1C,QAAQgD,MAAM9kD,KAC1B,EAGDmpB,EAAG30B,UAAUsvD,MAAQ,SAAgBD,GACnC1lD,EAAwB,kBAAV0lD,GAAsBA,GAAS,GAE7C,IAAIqB,EAAsC,EAAxB/vD,KAAKwmC,KAAKkoB,EAAQ,IAChCsB,EAAWtB,EAAQ,GAGvB7jD,KAAK+hD,QAAQmD,GAETC,EAAW,GACbD,IAIF,IAAK,IAAIvsD,EAAI,EAAGA,EAAIusD,EAAavsD,IAC/BqH,KAAKmgD,MAAMxnD,GAAsB,UAAhBqH,KAAKmgD,MAAMxnD,GAS9B,OALIwsD,EAAW,IACbnlD,KAAKmgD,MAAMxnD,IAAMqH,KAAKmgD,MAAMxnD,GAAM,UAAc,GAAKwsD,GAIhDnlD,KAAKwhD,QACb,EAEDr4B,EAAG30B,UAAU0vD,KAAO,SAAeL,GACjC,OAAO7jD,KAAK8hD,QAAQgC,MAAMD,EAC3B,EAGD16B,EAAG30B,UAAU4wD,KAAO,SAAeC,EAAKluC,GACtChZ,EAAsB,kBAARknD,GAAoBA,GAAO,GAEzC,IAAI9D,EAAO8D,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAUjB,OARArlD,KAAK+hD,QAAQR,EAAM,GAGjBvhD,KAAKmgD,MAAMoB,GADTpqC,EACgBnX,KAAKmgD,MAAMoB,GAAQ,GAAK+D,EAExBtlD,KAAKmgD,MAAMoB,KAAS,GAAK+D,GAGtCtlD,KAAKwhD,QACb,EAGDr4B,EAAG30B,UAAU+wD,KAAO,SAAe54C,GACjC,IAAI6B,EAkBAjH,EAAGnU,EAfP,GAAsB,IAAlB4M,KAAKkgD,UAAmC,IAAjBvzC,EAAIuzC,SAI7B,OAHAlgD,KAAKkgD,SAAW,EAChB1xC,EAAIxO,KAAKwlD,KAAK74C,GACd3M,KAAKkgD,UAAY,EACVlgD,KAAKgiD,YAGP,GAAsB,IAAlBhiD,KAAKkgD,UAAmC,IAAjBvzC,EAAIuzC,SAIpC,OAHAvzC,EAAIuzC,SAAW,EACf1xC,EAAIxO,KAAKwlD,KAAK74C,GACdA,EAAIuzC,SAAW,EACR1xC,EAAEwzC,YAKPhiD,KAAKpM,OAAS+Y,EAAI/Y,QACpB2T,EAAIvH,KACJ5M,EAAIuZ,IAEJpF,EAAIoF,EACJvZ,EAAI4M,MAIN,IADA,IAAI++C,EAAQ,EACHpmD,EAAI,EAAGA,EAAIvF,EAAEQ,OAAQ+E,IAC5B6V,GAAkB,EAAbjH,EAAE44C,MAAMxnD,KAAwB,EAAbvF,EAAE+sD,MAAMxnD,IAAUomD,EAC1C/+C,KAAKmgD,MAAMxnD,GAAS,SAAJ6V,EAChBuwC,EAAQvwC,IAAM,GAEhB,KAAiB,IAAVuwC,GAAepmD,EAAI4O,EAAE3T,OAAQ+E,IAClC6V,GAAkB,EAAbjH,EAAE44C,MAAMxnD,IAAUomD,EACvB/+C,KAAKmgD,MAAMxnD,GAAS,SAAJ6V,EAChBuwC,EAAQvwC,IAAM,GAIhB,GADAxO,KAAKpM,OAAS2T,EAAE3T,OACF,IAAVmrD,EACF/+C,KAAKmgD,MAAMngD,KAAKpM,QAAUmrD,EAC1B/+C,KAAKpM,cAEA,GAAI2T,IAAMvH,KACf,KAAOrH,EAAI4O,EAAE3T,OAAQ+E,IACnBqH,KAAKmgD,MAAMxnD,GAAK4O,EAAE44C,MAAMxnD,GAI5B,OAAOqH,IACR,EAGDmpB,EAAG30B,UAAUmP,IAAM,SAAcgJ,GAC/B,IAAIxK,EACJ,OAAqB,IAAjBwK,EAAIuzC,UAAoC,IAAlBlgD,KAAKkgD,UAC7BvzC,EAAIuzC,SAAW,EACf/9C,EAAMnC,KAAKylD,IAAI94C,GACfA,EAAIuzC,UAAY,EACT/9C,GACmB,IAAjBwK,EAAIuzC,UAAoC,IAAlBlgD,KAAKkgD,UACpClgD,KAAKkgD,SAAW,EAChB/9C,EAAMwK,EAAI84C,IAAIzlD,MACdA,KAAKkgD,SAAW,EACT/9C,GAGLnC,KAAKpM,OAAS+Y,EAAI/Y,OAAeoM,KAAK8hD,QAAQyD,KAAK54C,GAEhDA,EAAIm1C,QAAQyD,KAAKvlD,KACzB,EAGDmpB,EAAG30B,UAAUgxD,KAAO,SAAe74C,GAEjC,GAAqB,IAAjBA,EAAIuzC,SAAgB,CACtBvzC,EAAIuzC,SAAW,EACf,IAAI1xC,EAAIxO,KAAKulD,KAAK54C,GAElB,OADAA,EAAIuzC,SAAW,EACR1xC,EAAEwzC,WAGV,CAAM,GAAsB,IAAlBhiD,KAAKkgD,SAId,OAHAlgD,KAAKkgD,SAAW,EAChBlgD,KAAKulD,KAAK54C,GACV3M,KAAKkgD,SAAW,EACTlgD,KAAKgiD,YAId,IAWIz6C,EAAGnU,EAXH2tD,EAAM/gD,KAAK+gD,IAAIp0C,GAGnB,GAAY,IAARo0C,EAIF,OAHA/gD,KAAKkgD,SAAW,EAChBlgD,KAAKpM,OAAS,EACdoM,KAAKmgD,MAAM,GAAK,EACTngD,KAKL+gD,EAAM,GACRx5C,EAAIvH,KACJ5M,EAAIuZ,IAEJpF,EAAIoF,EACJvZ,EAAI4M,MAIN,IADA,IAAI++C,EAAQ,EACHpmD,EAAI,EAAGA,EAAIvF,EAAEQ,OAAQ+E,IAE5BomD,GADAvwC,GAAkB,EAAbjH,EAAE44C,MAAMxnD,KAAwB,EAAbvF,EAAE+sD,MAAMxnD,IAAUomD,IAC7B,GACb/+C,KAAKmgD,MAAMxnD,GAAS,SAAJ6V,EAElB,KAAiB,IAAVuwC,GAAepmD,EAAI4O,EAAE3T,OAAQ+E,IAElComD,GADAvwC,GAAkB,EAAbjH,EAAE44C,MAAMxnD,IAAUomD,IACV,GACb/+C,KAAKmgD,MAAMxnD,GAAS,SAAJ6V,EAIlB,GAAc,IAAVuwC,GAAepmD,EAAI4O,EAAE3T,QAAU2T,IAAMvH,KACvC,KAAOrH,EAAI4O,EAAE3T,OAAQ+E,IACnBqH,KAAKmgD,MAAMxnD,GAAK4O,EAAE44C,MAAMxnD,GAU5B,OANAqH,KAAKpM,OAASuB,KAAKsf,IAAIzU,KAAKpM,OAAQ+E,GAEhC4O,IAAMvH,OACRA,KAAKkgD,SAAW,GAGXlgD,KAAKwhD,QACb,EAGDr4B,EAAG30B,UAAUixD,IAAM,SAAc94C,GAC/B,OAAO3M,KAAK8hD,QAAQ0D,KAAK74C,EAC1B,EA8CD,IAAI+4C,EAAc,SAAsBzmD,EAAM0N,EAAK7N,GACjD,IAIIjK,EACA8wD,EACAjC,EANAn8C,EAAItI,EAAKkhD,MACT/sD,EAAIuZ,EAAIwzC,MACRyF,EAAI9mD,EAAIqhD,MACRzxC,EAAI,EAIJm3C,EAAY,EAAPt+C,EAAE,GACPu+C,EAAW,KAALD,EACNE,EAAMF,IAAO,GACb7gC,EAAY,EAAPzd,EAAE,GACPy+C,EAAW,KAALhhC,EACNihC,EAAMjhC,IAAO,GACbC,EAAY,EAAP1d,EAAE,GACP2+C,EAAW,KAALjhC,EACNkhC,EAAMlhC,IAAO,GACbmhC,EAAY,EAAP7+C,EAAE,GACP8+C,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPh/C,EAAE,GACPi/C,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPn/C,EAAE,GACPo/C,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPt/C,EAAE,GACPu/C,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPz/C,EAAE,GACP0/C,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP5/C,EAAE,GACP6/C,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP//C,EAAE,GACPggD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPr0D,EAAE,GACPs0D,EAAW,KAALD,EACNE,EAAMF,IAAO,GACb33C,EAAY,EAAP1c,EAAE,GACPw0D,EAAW,KAAL93C,EACN+3C,EAAM/3C,IAAO,GACbC,EAAY,EAAP3c,EAAE,GACP00D,EAAW,KAAL/3C,EACNg4C,EAAMh4C,IAAO,GACbkS,EAAY,EAAP7uB,EAAE,GACP40D,EAAW,KAAL/lC,EACNgmC,EAAMhmC,IAAO,GACb5O,EAAY,EAAPjgB,EAAE,GACP80D,EAAW,KAAL70C,EACN80C,GAAM90C,IAAO,GACbC,GAAY,EAAPlgB,EAAE,GACPg1D,GAAW,KAAL90C,GACN+0C,GAAM/0C,KAAO,GACb4O,GAAY,EAAP9uB,EAAE,GACPk1D,GAAW,KAALpmC,GACNqmC,GAAMrmC,KAAO,GACbsmC,GAAY,EAAPp1D,EAAE,GACPq1D,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPv1D,EAAE,GACPw1D,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbxmC,GAAY,EAAP/uB,EAAE,GACP01D,GAAW,KAAL3mC,GACN4mC,GAAM5mC,KAAO,GAEjBrjB,EAAIohD,SAAWjhD,EAAKihD,SAAWvzC,EAAIuzC,SACnCphD,EAAIlL,OAAS,GAMb,IAAIo1D,IAAQt6C,GAJZ7Z,EAAKM,KAAK8zD,KAAKnD,EAAK4B,IAIE,KAAa,MAFnC/B,GADAA,EAAMxwD,KAAK8zD,KAAKnD,EAAK6B,IACRxyD,KAAK8zD,KAAKlD,EAAK2B,GAAQ,KAEU,IAAO,EACrDh5C,IAFAg1C,EAAKvuD,KAAK8zD,KAAKlD,EAAK4B,KAEPhC,IAAQ,IAAO,IAAMqD,KAAO,IAAO,EAChDA,IAAM,SAENn0D,EAAKM,KAAK8zD,KAAKjD,EAAK0B,GAEpB/B,GADAA,EAAMxwD,KAAK8zD,KAAKjD,EAAK2B,IACRxyD,KAAK8zD,KAAKhD,EAAKyB,GAAQ,EACpChE,EAAKvuD,KAAK8zD,KAAKhD,EAAK0B,GAKpB,IAAIuB,IAAQx6C,GAJZ7Z,EAAMA,EAAKM,KAAK8zD,KAAKnD,EAAK8B,GAAQ,GAIZ,KAAa,MAFnCjC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnD,EAAK+B,GAAQ,GACvB1yD,KAAK8zD,KAAKlD,EAAK6B,GAAQ,KAEU,IAAO,EACrDl5C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKlD,EAAK8B,GAAQ,IAErBlC,IAAQ,IAAO,IAAMuD,KAAO,IAAO,EAChDA,IAAM,SAENr0D,EAAKM,KAAK8zD,KAAK/C,EAAKwB,GAEpB/B,GADAA,EAAMxwD,KAAK8zD,KAAK/C,EAAKyB,IACRxyD,KAAK8zD,KAAK9C,EAAKuB,GAAQ,EACpChE,EAAKvuD,KAAK8zD,KAAK9C,EAAKwB,GACpB9yD,EAAMA,EAAKM,KAAK8zD,KAAKjD,EAAK4B,GAAQ,EAElCjC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKjD,EAAK6B,GAAQ,GACvB1yD,KAAK8zD,KAAKhD,EAAK2B,GAAQ,EACpClE,EAAMA,EAAKvuD,KAAK8zD,KAAKhD,EAAK4B,GAAQ,EAKlC,IAAIsB,IAAQz6C,GAJZ7Z,EAAMA,EAAKM,KAAK8zD,KAAKnD,EAAKgC,GAAQ,GAIZ,KAAa,MAFnCnC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnD,EAAKiC,GAAQ,GACvB5yD,KAAK8zD,KAAKlD,EAAK+B,GAAQ,KAEU,IAAO,EACrDp5C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKlD,EAAKgC,GAAQ,IAErBpC,IAAQ,IAAO,IAAMwD,KAAO,IAAO,EAChDA,IAAM,SAENt0D,EAAKM,KAAK8zD,KAAK5C,EAAKqB,GAEpB/B,GADAA,EAAMxwD,KAAK8zD,KAAK5C,EAAKsB,IACRxyD,KAAK8zD,KAAK3C,EAAKoB,GAAQ,EACpChE,EAAKvuD,KAAK8zD,KAAK3C,EAAKqB,GACpB9yD,EAAMA,EAAKM,KAAK8zD,KAAK/C,EAAK0B,GAAQ,EAElCjC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK/C,EAAK2B,GAAQ,GACvB1yD,KAAK8zD,KAAK9C,EAAKyB,GAAQ,EACpClE,EAAMA,EAAKvuD,KAAK8zD,KAAK9C,EAAK0B,GAAQ,EAClChzD,EAAMA,EAAKM,KAAK8zD,KAAKjD,EAAK8B,GAAQ,EAElCnC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKjD,EAAK+B,GAAQ,GACvB5yD,KAAK8zD,KAAKhD,EAAK6B,GAAQ,EACpCpE,EAAMA,EAAKvuD,KAAK8zD,KAAKhD,EAAK8B,GAAQ,EAKlC,IAAIqB,IAAQ16C,GAJZ7Z,EAAMA,EAAKM,KAAK8zD,KAAKnD,EAAKkC,GAAQ,GAIZ,KAAa,MAFnCrC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnD,EAAKmC,GAAQ,GACvB9yD,KAAK8zD,KAAKlD,EAAKiC,GAAQ,KAEU,IAAO,EACrDt5C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKlD,EAAKkC,GAAQ,IAErBtC,IAAQ,IAAO,IAAMyD,KAAO,IAAO,EAChDA,IAAM,SAENv0D,EAAKM,KAAK8zD,KAAKzC,EAAKkB,GAEpB/B,GADAA,EAAMxwD,KAAK8zD,KAAKzC,EAAKmB,IACRxyD,KAAK8zD,KAAKxC,EAAKiB,GAAQ,EACpChE,EAAKvuD,KAAK8zD,KAAKxC,EAAKkB,GACpB9yD,EAAMA,EAAKM,KAAK8zD,KAAK5C,EAAKuB,GAAQ,EAElCjC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK5C,EAAKwB,GAAQ,GACvB1yD,KAAK8zD,KAAK3C,EAAKsB,GAAQ,EACpClE,EAAMA,EAAKvuD,KAAK8zD,KAAK3C,EAAKuB,GAAQ,EAClChzD,EAAMA,EAAKM,KAAK8zD,KAAK/C,EAAK4B,GAAQ,EAElCnC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK/C,EAAK6B,GAAQ,GACvB5yD,KAAK8zD,KAAK9C,EAAK2B,GAAQ,EACpCpE,EAAMA,EAAKvuD,KAAK8zD,KAAK9C,EAAK4B,GAAQ,EAClClzD,EAAMA,EAAKM,KAAK8zD,KAAKjD,EAAKgC,GAAQ,EAElCrC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKjD,EAAKiC,GAAQ,GACvB9yD,KAAK8zD,KAAKhD,EAAK+B,GAAQ,EACpCtE,EAAMA,EAAKvuD,KAAK8zD,KAAKhD,EAAKgC,GAAQ,EAKlC,IAAIoB,IAAQ36C,GAJZ7Z,EAAMA,EAAKM,KAAK8zD,KAAKnD,EAAKoC,GAAQ,GAIZ,KAAa,MAFnCvC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnD,EAAKqC,IAAQ,GACvBhzD,KAAK8zD,KAAKlD,EAAKmC,GAAQ,KAEU,IAAO,EACrDx5C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKlD,EAAKoC,IAAQ,IAErBxC,IAAQ,IAAO,IAAM0D,KAAO,IAAO,EAChDA,IAAM,SAENx0D,EAAKM,KAAK8zD,KAAKtC,EAAKe,GAEpB/B,GADAA,EAAMxwD,KAAK8zD,KAAKtC,EAAKgB,IACRxyD,KAAK8zD,KAAKrC,EAAKc,GAAQ,EACpChE,EAAKvuD,KAAK8zD,KAAKrC,EAAKe,GACpB9yD,EAAMA,EAAKM,KAAK8zD,KAAKzC,EAAKoB,GAAQ,EAElCjC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKzC,EAAKqB,GAAQ,GACvB1yD,KAAK8zD,KAAKxC,EAAKmB,GAAQ,EACpClE,EAAMA,EAAKvuD,KAAK8zD,KAAKxC,EAAKoB,GAAQ,EAClChzD,EAAMA,EAAKM,KAAK8zD,KAAK5C,EAAKyB,GAAQ,EAElCnC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK5C,EAAK0B,GAAQ,GACvB5yD,KAAK8zD,KAAK3C,EAAKwB,GAAQ,EACpCpE,EAAMA,EAAKvuD,KAAK8zD,KAAK3C,EAAKyB,GAAQ,EAClClzD,EAAMA,EAAKM,KAAK8zD,KAAK/C,EAAK8B,GAAQ,EAElCrC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK/C,EAAK+B,GAAQ,GACvB9yD,KAAK8zD,KAAK9C,EAAK6B,GAAQ,EACpCtE,EAAMA,EAAKvuD,KAAK8zD,KAAK9C,EAAK8B,GAAQ,EAClCpzD,EAAMA,EAAKM,KAAK8zD,KAAKjD,EAAKkC,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKjD,EAAKmC,IAAQ,GACvBhzD,KAAK8zD,KAAKhD,EAAKiC,GAAQ,EACpCxE,EAAMA,EAAKvuD,KAAK8zD,KAAKhD,EAAKkC,IAAQ,EAKlC,IAAImB,IAAQ56C,GAJZ7Z,EAAMA,EAAKM,KAAK8zD,KAAKnD,EAAKsC,IAAQ,GAIZ,KAAa,MAFnCzC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnD,EAAKuC,IAAQ,GACvBlzD,KAAK8zD,KAAKlD,EAAKqC,IAAQ,KAEU,IAAO,EACrD15C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKlD,EAAKsC,IAAQ,IAErB1C,IAAQ,IAAO,IAAM2D,KAAO,IAAO,EAChDA,IAAM,SAENz0D,EAAKM,KAAK8zD,KAAKnC,EAAKY,GAEpB/B,GADAA,EAAMxwD,KAAK8zD,KAAKnC,EAAKa,IACRxyD,KAAK8zD,KAAKlC,EAAKW,GAAQ,EACpChE,EAAKvuD,KAAK8zD,KAAKlC,EAAKY,GACpB9yD,EAAMA,EAAKM,KAAK8zD,KAAKtC,EAAKiB,GAAQ,EAElCjC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKtC,EAAKkB,GAAQ,GACvB1yD,KAAK8zD,KAAKrC,EAAKgB,GAAQ,EACpClE,EAAMA,EAAKvuD,KAAK8zD,KAAKrC,EAAKiB,GAAQ,EAClChzD,EAAMA,EAAKM,KAAK8zD,KAAKzC,EAAKsB,GAAQ,EAElCnC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKzC,EAAKuB,GAAQ,GACvB5yD,KAAK8zD,KAAKxC,EAAKqB,GAAQ,EACpCpE,EAAMA,EAAKvuD,KAAK8zD,KAAKxC,EAAKsB,GAAQ,EAClClzD,EAAMA,EAAKM,KAAK8zD,KAAK5C,EAAK2B,GAAQ,EAElCrC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK5C,EAAK4B,GAAQ,GACvB9yD,KAAK8zD,KAAK3C,EAAK0B,GAAQ,EACpCtE,EAAMA,EAAKvuD,KAAK8zD,KAAK3C,EAAK2B,GAAQ,EAClCpzD,EAAMA,EAAKM,KAAK8zD,KAAK/C,EAAKgC,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK/C,EAAKiC,IAAQ,GACvBhzD,KAAK8zD,KAAK9C,EAAK+B,GAAQ,EACpCxE,EAAMA,EAAKvuD,KAAK8zD,KAAK9C,EAAKgC,IAAQ,EAClCtzD,EAAMA,EAAKM,KAAK8zD,KAAKjD,EAAKoC,IAAQ,EAElCzC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKjD,EAAKqC,IAAQ,GACvBlzD,KAAK8zD,KAAKhD,EAAKmC,IAAQ,EACpC1E,EAAMA,EAAKvuD,KAAK8zD,KAAKhD,EAAKoC,IAAQ,EAKlC,IAAIkB,IAAQ76C,GAJZ7Z,EAAMA,EAAKM,KAAK8zD,KAAKnD,EAAKwC,IAAQ,GAIZ,KAAa,MAFnC3C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnD,EAAKyC,IAAQ,GACvBpzD,KAAK8zD,KAAKlD,EAAKuC,IAAQ,KAEU,IAAO,EACrD55C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKlD,EAAKwC,IAAQ,IAErB5C,IAAQ,IAAO,IAAM4D,KAAO,IAAO,EAChDA,IAAM,SAEN10D,EAAKM,KAAK8zD,KAAKhC,EAAKS,GAEpB/B,GADAA,EAAMxwD,KAAK8zD,KAAKhC,EAAKU,IACRxyD,KAAK8zD,KAAK/B,EAAKQ,GAAQ,EACpChE,EAAKvuD,KAAK8zD,KAAK/B,EAAKS,GACpB9yD,EAAMA,EAAKM,KAAK8zD,KAAKnC,EAAKc,GAAQ,EAElCjC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnC,EAAKe,GAAQ,GACvB1yD,KAAK8zD,KAAKlC,EAAKa,GAAQ,EACpClE,EAAMA,EAAKvuD,KAAK8zD,KAAKlC,EAAKc,GAAQ,EAClChzD,EAAMA,EAAKM,KAAK8zD,KAAKtC,EAAKmB,GAAQ,EAElCnC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKtC,EAAKoB,GAAQ,GACvB5yD,KAAK8zD,KAAKrC,EAAKkB,GAAQ,EACpCpE,EAAMA,EAAKvuD,KAAK8zD,KAAKrC,EAAKmB,GAAQ,EAClClzD,EAAMA,EAAKM,KAAK8zD,KAAKzC,EAAKwB,GAAQ,EAElCrC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKzC,EAAKyB,GAAQ,GACvB9yD,KAAK8zD,KAAKxC,EAAKuB,GAAQ,EACpCtE,EAAMA,EAAKvuD,KAAK8zD,KAAKxC,EAAKwB,GAAQ,EAClCpzD,EAAMA,EAAKM,KAAK8zD,KAAK5C,EAAK6B,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK5C,EAAK8B,IAAQ,GACvBhzD,KAAK8zD,KAAK3C,EAAK4B,GAAQ,EACpCxE,EAAMA,EAAKvuD,KAAK8zD,KAAK3C,EAAK6B,IAAQ,EAClCtzD,EAAMA,EAAKM,KAAK8zD,KAAK/C,EAAKkC,IAAQ,EAElCzC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK/C,EAAKmC,IAAQ,GACvBlzD,KAAK8zD,KAAK9C,EAAKiC,IAAQ,EACpC1E,EAAMA,EAAKvuD,KAAK8zD,KAAK9C,EAAKkC,IAAQ,EAClCxzD,EAAMA,EAAKM,KAAK8zD,KAAKjD,EAAKsC,IAAQ,EAElC3C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKjD,EAAKuC,IAAQ,GACvBpzD,KAAK8zD,KAAKhD,EAAKqC,IAAQ,EACpC5E,EAAMA,EAAKvuD,KAAK8zD,KAAKhD,EAAKsC,IAAQ,EAKlC,IAAIiB,IAAQ96C,GAJZ7Z,EAAMA,EAAKM,KAAK8zD,KAAKnD,EAAK2C,IAAQ,GAIZ,KAAa,MAFnC9C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnD,EAAK4C,IAAQ,GACvBvzD,KAAK8zD,KAAKlD,EAAK0C,IAAQ,KAEU,IAAO,EACrD/5C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKlD,EAAK2C,IAAQ,IAErB/C,IAAQ,IAAO,IAAM6D,KAAO,IAAO,EAChDA,IAAM,SAEN30D,EAAKM,KAAK8zD,KAAK7B,EAAKM,GAEpB/B,GADAA,EAAMxwD,KAAK8zD,KAAK7B,EAAKO,IACRxyD,KAAK8zD,KAAK5B,EAAKK,GAAQ,EACpChE,EAAKvuD,KAAK8zD,KAAK5B,EAAKM,GACpB9yD,EAAMA,EAAKM,KAAK8zD,KAAKhC,EAAKW,GAAQ,EAElCjC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKhC,EAAKY,GAAQ,GACvB1yD,KAAK8zD,KAAK/B,EAAKU,GAAQ,EACpClE,EAAMA,EAAKvuD,KAAK8zD,KAAK/B,EAAKW,GAAQ,EAClChzD,EAAMA,EAAKM,KAAK8zD,KAAKnC,EAAKgB,GAAQ,EAElCnC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnC,EAAKiB,GAAQ,GACvB5yD,KAAK8zD,KAAKlC,EAAKe,GAAQ,EACpCpE,EAAMA,EAAKvuD,KAAK8zD,KAAKlC,EAAKgB,GAAQ,EAClClzD,EAAMA,EAAKM,KAAK8zD,KAAKtC,EAAKqB,GAAQ,EAElCrC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKtC,EAAKsB,GAAQ,GACvB9yD,KAAK8zD,KAAKrC,EAAKoB,GAAQ,EACpCtE,EAAMA,EAAKvuD,KAAK8zD,KAAKrC,EAAKqB,GAAQ,EAClCpzD,EAAMA,EAAKM,KAAK8zD,KAAKzC,EAAK0B,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKzC,EAAK2B,IAAQ,GACvBhzD,KAAK8zD,KAAKxC,EAAKyB,GAAQ,EACpCxE,EAAMA,EAAKvuD,KAAK8zD,KAAKxC,EAAK0B,IAAQ,EAClCtzD,EAAMA,EAAKM,KAAK8zD,KAAK5C,EAAK+B,IAAQ,EAElCzC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK5C,EAAKgC,IAAQ,GACvBlzD,KAAK8zD,KAAK3C,EAAK8B,IAAQ,EACpC1E,EAAMA,EAAKvuD,KAAK8zD,KAAK3C,EAAK+B,IAAQ,EAClCxzD,EAAMA,EAAKM,KAAK8zD,KAAK/C,EAAKoC,IAAQ,EAElC3C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK/C,EAAKqC,IAAQ,GACvBpzD,KAAK8zD,KAAK9C,EAAKmC,IAAQ,EACpC5E,EAAMA,EAAKvuD,KAAK8zD,KAAK9C,EAAKoC,IAAQ,EAClC1zD,EAAMA,EAAKM,KAAK8zD,KAAKjD,EAAKyC,IAAQ,EAElC9C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKjD,EAAK0C,IAAQ,GACvBvzD,KAAK8zD,KAAKhD,EAAKwC,IAAQ,EACpC/E,EAAMA,EAAKvuD,KAAK8zD,KAAKhD,EAAKyC,IAAQ,EAKlC,IAAIe,IAAQ/6C,GAJZ7Z,EAAMA,EAAKM,KAAK8zD,KAAKnD,EAAK8C,IAAQ,GAIZ,KAAa,MAFnCjD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnD,EAAK+C,IAAQ,GACvB1zD,KAAK8zD,KAAKlD,EAAK6C,IAAQ,KAEU,IAAO,EACrDl6C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKlD,EAAK8C,IAAQ,IAErBlD,IAAQ,IAAO,IAAM8D,KAAO,IAAO,EAChDA,IAAM,SAEN50D,EAAKM,KAAK8zD,KAAK1B,EAAKG,GAEpB/B,GADAA,EAAMxwD,KAAK8zD,KAAK1B,EAAKI,IACRxyD,KAAK8zD,KAAKzB,EAAKE,GAAQ,EACpChE,EAAKvuD,KAAK8zD,KAAKzB,EAAKG,GACpB9yD,EAAMA,EAAKM,KAAK8zD,KAAK7B,EAAKQ,GAAQ,EAElCjC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK7B,EAAKS,GAAQ,GACvB1yD,KAAK8zD,KAAK5B,EAAKO,GAAQ,EACpClE,EAAMA,EAAKvuD,KAAK8zD,KAAK5B,EAAKQ,GAAQ,EAClChzD,EAAMA,EAAKM,KAAK8zD,KAAKhC,EAAKa,GAAQ,EAElCnC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKhC,EAAKc,GAAQ,GACvB5yD,KAAK8zD,KAAK/B,EAAKY,GAAQ,EACpCpE,EAAMA,EAAKvuD,KAAK8zD,KAAK/B,EAAKa,GAAQ,EAClClzD,EAAMA,EAAKM,KAAK8zD,KAAKnC,EAAKkB,GAAQ,EAElCrC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnC,EAAKmB,GAAQ,GACvB9yD,KAAK8zD,KAAKlC,EAAKiB,GAAQ,EACpCtE,EAAMA,EAAKvuD,KAAK8zD,KAAKlC,EAAKkB,GAAQ,EAClCpzD,EAAMA,EAAKM,KAAK8zD,KAAKtC,EAAKuB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKtC,EAAKwB,IAAQ,GACvBhzD,KAAK8zD,KAAKrC,EAAKsB,GAAQ,EACpCxE,EAAMA,EAAKvuD,KAAK8zD,KAAKrC,EAAKuB,IAAQ,EAClCtzD,EAAMA,EAAKM,KAAK8zD,KAAKzC,EAAK4B,IAAQ,EAElCzC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKzC,EAAK6B,IAAQ,GACvBlzD,KAAK8zD,KAAKxC,EAAK2B,IAAQ,EACpC1E,EAAMA,EAAKvuD,KAAK8zD,KAAKxC,EAAK4B,IAAQ,EAClCxzD,EAAMA,EAAKM,KAAK8zD,KAAK5C,EAAKiC,IAAQ,EAElC3C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK5C,EAAKkC,IAAQ,GACvBpzD,KAAK8zD,KAAK3C,EAAKgC,IAAQ,EACpC5E,EAAMA,EAAKvuD,KAAK8zD,KAAK3C,EAAKiC,IAAQ,EAClC1zD,EAAMA,EAAKM,KAAK8zD,KAAK/C,EAAKuC,IAAQ,EAElC9C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK/C,EAAKwC,IAAQ,GACvBvzD,KAAK8zD,KAAK9C,EAAKsC,IAAQ,EACpC/E,EAAMA,EAAKvuD,KAAK8zD,KAAK9C,EAAKuC,IAAQ,EAClC7zD,EAAMA,EAAKM,KAAK8zD,KAAKjD,EAAK4C,IAAQ,EAElCjD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKjD,EAAK6C,IAAQ,GACvB1zD,KAAK8zD,KAAKhD,EAAK2C,IAAQ,EACpClF,EAAMA,EAAKvuD,KAAK8zD,KAAKhD,EAAK4C,IAAQ,EAKlC,IAAIa,IAAQh7C,GAJZ7Z,EAAMA,EAAKM,KAAK8zD,KAAKnD,EAAKgD,IAAQ,GAIZ,KAAa,MAFnCnD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnD,EAAKiD,IAAQ,GACvB5zD,KAAK8zD,KAAKlD,EAAK+C,IAAQ,KAEU,IAAO,EACrDp6C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKlD,EAAKgD,IAAQ,IAErBpD,IAAQ,IAAO,IAAM+D,KAAO,IAAO,EAChDA,IAAM,SAEN70D,EAAKM,KAAK8zD,KAAK1B,EAAKK,GAEpBjC,GADAA,EAAMxwD,KAAK8zD,KAAK1B,EAAKM,IACR1yD,KAAK8zD,KAAKzB,EAAKI,GAAQ,EACpClE,EAAKvuD,KAAK8zD,KAAKzB,EAAKK,GACpBhzD,EAAMA,EAAKM,KAAK8zD,KAAK7B,EAAKU,GAAQ,EAElCnC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK7B,EAAKW,GAAQ,GACvB5yD,KAAK8zD,KAAK5B,EAAKS,GAAQ,EACpCpE,EAAMA,EAAKvuD,KAAK8zD,KAAK5B,EAAKU,GAAQ,EAClClzD,EAAMA,EAAKM,KAAK8zD,KAAKhC,EAAKe,GAAQ,EAElCrC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKhC,EAAKgB,GAAQ,GACvB9yD,KAAK8zD,KAAK/B,EAAKc,GAAQ,EACpCtE,EAAMA,EAAKvuD,KAAK8zD,KAAK/B,EAAKe,GAAQ,EAClCpzD,EAAMA,EAAKM,KAAK8zD,KAAKnC,EAAKoB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnC,EAAKqB,IAAQ,GACvBhzD,KAAK8zD,KAAKlC,EAAKmB,GAAQ,EACpCxE,EAAMA,EAAKvuD,KAAK8zD,KAAKlC,EAAKoB,IAAQ,EAClCtzD,EAAMA,EAAKM,KAAK8zD,KAAKtC,EAAKyB,IAAQ,EAElCzC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKtC,EAAK0B,IAAQ,GACvBlzD,KAAK8zD,KAAKrC,EAAKwB,IAAQ,EACpC1E,EAAMA,EAAKvuD,KAAK8zD,KAAKrC,EAAKyB,IAAQ,EAClCxzD,EAAMA,EAAKM,KAAK8zD,KAAKzC,EAAK8B,IAAQ,EAElC3C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKzC,EAAK+B,IAAQ,GACvBpzD,KAAK8zD,KAAKxC,EAAK6B,IAAQ,EACpC5E,EAAMA,EAAKvuD,KAAK8zD,KAAKxC,EAAK8B,IAAQ,EAClC1zD,EAAMA,EAAKM,KAAK8zD,KAAK5C,EAAKoC,IAAQ,EAElC9C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK5C,EAAKqC,IAAQ,GACvBvzD,KAAK8zD,KAAK3C,EAAKmC,IAAQ,EACpC/E,EAAMA,EAAKvuD,KAAK8zD,KAAK3C,EAAKoC,IAAQ,EAClC7zD,EAAMA,EAAKM,KAAK8zD,KAAK/C,EAAK0C,IAAQ,EAElCjD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK/C,EAAK2C,IAAQ,GACvB1zD,KAAK8zD,KAAK9C,EAAKyC,IAAQ,EACpClF,EAAMA,EAAKvuD,KAAK8zD,KAAK9C,EAAK0C,IAAQ,EAKlC,IAAIc,IAASj7C,GAJb7Z,EAAMA,EAAKM,KAAK8zD,KAAKjD,EAAK8C,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKjD,EAAK+C,IAAQ,GACvB5zD,KAAK8zD,KAAKhD,EAAK6C,IAAQ,KAEW,IAAO,EACtDp6C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKhD,EAAK8C,IAAQ,IAErBpD,IAAQ,IAAO,IAAMgE,KAAQ,IAAO,EACjDA,IAAO,SAEP90D,EAAKM,KAAK8zD,KAAK1B,EAAKO,GAEpBnC,GADAA,EAAMxwD,KAAK8zD,KAAK1B,EAAKQ,IACR5yD,KAAK8zD,KAAKzB,EAAKM,GAAQ,EACpCpE,EAAKvuD,KAAK8zD,KAAKzB,EAAKO,GACpBlzD,EAAMA,EAAKM,KAAK8zD,KAAK7B,EAAKY,GAAQ,EAElCrC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK7B,EAAKa,GAAQ,GACvB9yD,KAAK8zD,KAAK5B,EAAKW,GAAQ,EACpCtE,EAAMA,EAAKvuD,KAAK8zD,KAAK5B,EAAKY,GAAQ,EAClCpzD,EAAMA,EAAKM,KAAK8zD,KAAKhC,EAAKiB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKhC,EAAKkB,IAAQ,GACvBhzD,KAAK8zD,KAAK/B,EAAKgB,GAAQ,EACpCxE,EAAMA,EAAKvuD,KAAK8zD,KAAK/B,EAAKiB,IAAQ,EAClCtzD,EAAMA,EAAKM,KAAK8zD,KAAKnC,EAAKsB,IAAQ,EAElCzC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnC,EAAKuB,IAAQ,GACvBlzD,KAAK8zD,KAAKlC,EAAKqB,IAAQ,EACpC1E,EAAMA,EAAKvuD,KAAK8zD,KAAKlC,EAAKsB,IAAQ,EAClCxzD,EAAMA,EAAKM,KAAK8zD,KAAKtC,EAAK2B,IAAQ,EAElC3C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKtC,EAAK4B,IAAQ,GACvBpzD,KAAK8zD,KAAKrC,EAAK0B,IAAQ,EACpC5E,EAAMA,EAAKvuD,KAAK8zD,KAAKrC,EAAK2B,IAAQ,EAClC1zD,EAAMA,EAAKM,KAAK8zD,KAAKzC,EAAKiC,IAAQ,EAElC9C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKzC,EAAKkC,IAAQ,GACvBvzD,KAAK8zD,KAAKxC,EAAKgC,IAAQ,EACpC/E,EAAMA,EAAKvuD,KAAK8zD,KAAKxC,EAAKiC,IAAQ,EAClC7zD,EAAMA,EAAKM,KAAK8zD,KAAK5C,EAAKuC,IAAQ,EAElCjD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK5C,EAAKwC,IAAQ,GACvB1zD,KAAK8zD,KAAK3C,EAAKsC,IAAQ,EACpClF,EAAMA,EAAKvuD,KAAK8zD,KAAK3C,EAAKuC,IAAQ,EAKlC,IAAIe,IAASl7C,GAJb7Z,EAAMA,EAAKM,KAAK8zD,KAAK/C,EAAK4C,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK/C,EAAK6C,IAAQ,GACvB5zD,KAAK8zD,KAAK9C,EAAK2C,IAAQ,KAEW,IAAO,EACtDp6C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAK9C,EAAK4C,IAAQ,IAErBpD,IAAQ,IAAO,IAAMiE,KAAQ,IAAO,EACjDA,IAAO,SAEP/0D,EAAKM,KAAK8zD,KAAK1B,EAAKS,GAEpBrC,GADAA,EAAMxwD,KAAK8zD,KAAK1B,EAAKU,IACR9yD,KAAK8zD,KAAKzB,EAAKQ,GAAQ,EACpCtE,EAAKvuD,KAAK8zD,KAAKzB,EAAKS,GACpBpzD,EAAMA,EAAKM,KAAK8zD,KAAK7B,EAAKc,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK7B,EAAKe,IAAQ,GACvBhzD,KAAK8zD,KAAK5B,EAAKa,GAAQ,EACpCxE,EAAMA,EAAKvuD,KAAK8zD,KAAK5B,EAAKc,IAAQ,EAClCtzD,EAAMA,EAAKM,KAAK8zD,KAAKhC,EAAKmB,IAAQ,EAElCzC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKhC,EAAKoB,IAAQ,GACvBlzD,KAAK8zD,KAAK/B,EAAKkB,IAAQ,EACpC1E,EAAMA,EAAKvuD,KAAK8zD,KAAK/B,EAAKmB,IAAQ,EAClCxzD,EAAMA,EAAKM,KAAK8zD,KAAKnC,EAAKwB,IAAQ,EAElC3C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnC,EAAKyB,IAAQ,GACvBpzD,KAAK8zD,KAAKlC,EAAKuB,IAAQ,EACpC5E,EAAMA,EAAKvuD,KAAK8zD,KAAKlC,EAAKwB,IAAQ,EAClC1zD,EAAMA,EAAKM,KAAK8zD,KAAKtC,EAAK8B,IAAQ,EAElC9C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKtC,EAAK+B,IAAQ,GACvBvzD,KAAK8zD,KAAKrC,EAAK6B,IAAQ,EACpC/E,EAAMA,EAAKvuD,KAAK8zD,KAAKrC,EAAK8B,IAAQ,EAClC7zD,EAAMA,EAAKM,KAAK8zD,KAAKzC,EAAKoC,IAAQ,EAElCjD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKzC,EAAKqC,IAAQ,GACvB1zD,KAAK8zD,KAAKxC,EAAKmC,IAAQ,EACpClF,EAAMA,EAAKvuD,KAAK8zD,KAAKxC,EAAKoC,IAAQ,EAKlC,IAAIgB,IAASn7C,GAJb7Z,EAAMA,EAAKM,KAAK8zD,KAAK5C,EAAKyC,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK5C,EAAK0C,IAAQ,GACvB5zD,KAAK8zD,KAAK3C,EAAKwC,IAAQ,KAEW,IAAO,EACtDp6C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAK3C,EAAKyC,IAAQ,IAErBpD,IAAQ,IAAO,IAAMkE,KAAQ,IAAO,EACjDA,IAAO,SAEPh1D,EAAKM,KAAK8zD,KAAK1B,EAAKW,GAEpBvC,GADAA,EAAMxwD,KAAK8zD,KAAK1B,EAAKY,KACRhzD,KAAK8zD,KAAKzB,EAAKU,GAAQ,EACpCxE,EAAKvuD,KAAK8zD,KAAKzB,EAAKW,IACpBtzD,EAAMA,EAAKM,KAAK8zD,KAAK7B,EAAKgB,IAAQ,EAElCzC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK7B,EAAKiB,IAAQ,GACvBlzD,KAAK8zD,KAAK5B,EAAKe,IAAQ,EACpC1E,EAAMA,EAAKvuD,KAAK8zD,KAAK5B,EAAKgB,IAAQ,EAClCxzD,EAAMA,EAAKM,KAAK8zD,KAAKhC,EAAKqB,IAAQ,EAElC3C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKhC,EAAKsB,IAAQ,GACvBpzD,KAAK8zD,KAAK/B,EAAKoB,IAAQ,EACpC5E,EAAMA,EAAKvuD,KAAK8zD,KAAK/B,EAAKqB,IAAQ,EAClC1zD,EAAMA,EAAKM,KAAK8zD,KAAKnC,EAAK2B,IAAQ,EAElC9C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnC,EAAK4B,IAAQ,GACvBvzD,KAAK8zD,KAAKlC,EAAK0B,IAAQ,EACpC/E,EAAMA,EAAKvuD,KAAK8zD,KAAKlC,EAAK2B,IAAQ,EAClC7zD,EAAMA,EAAKM,KAAK8zD,KAAKtC,EAAKiC,IAAQ,EAElCjD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKtC,EAAKkC,IAAQ,GACvB1zD,KAAK8zD,KAAKrC,EAAKgC,IAAQ,EACpClF,EAAMA,EAAKvuD,KAAK8zD,KAAKrC,EAAKiC,IAAQ,EAKlC,IAAIiB,IAASp7C,GAJb7Z,EAAMA,EAAKM,KAAK8zD,KAAKzC,EAAKsC,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKzC,EAAKuC,IAAQ,GACvB5zD,KAAK8zD,KAAKxC,EAAKqC,IAAQ,KAEW,IAAO,EACtDp6C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKxC,EAAKsC,IAAQ,IAErBpD,IAAQ,IAAO,IAAMmE,KAAQ,IAAO,EACjDA,IAAO,SAEPj1D,EAAKM,KAAK8zD,KAAK1B,EAAKa,IAEpBzC,GADAA,EAAMxwD,KAAK8zD,KAAK1B,EAAKc,KACRlzD,KAAK8zD,KAAKzB,EAAKY,IAAQ,EACpC1E,EAAKvuD,KAAK8zD,KAAKzB,EAAKa,IACpBxzD,EAAMA,EAAKM,KAAK8zD,KAAK7B,EAAKkB,IAAQ,EAElC3C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK7B,EAAKmB,IAAQ,GACvBpzD,KAAK8zD,KAAK5B,EAAKiB,IAAQ,EACpC5E,EAAMA,EAAKvuD,KAAK8zD,KAAK5B,EAAKkB,IAAQ,EAClC1zD,EAAMA,EAAKM,KAAK8zD,KAAKhC,EAAKwB,IAAQ,EAElC9C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKhC,EAAKyB,IAAQ,GACvBvzD,KAAK8zD,KAAK/B,EAAKuB,IAAQ,EACpC/E,EAAMA,EAAKvuD,KAAK8zD,KAAK/B,EAAKwB,IAAQ,EAClC7zD,EAAMA,EAAKM,KAAK8zD,KAAKnC,EAAK8B,IAAQ,EAElCjD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnC,EAAK+B,IAAQ,GACvB1zD,KAAK8zD,KAAKlC,EAAK6B,IAAQ,EACpClF,EAAMA,EAAKvuD,KAAK8zD,KAAKlC,EAAK8B,IAAQ,EAKlC,IAAIkB,IAASr7C,GAJb7Z,EAAMA,EAAKM,KAAK8zD,KAAKtC,EAAKmC,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKtC,EAAKoC,IAAQ,GACvB5zD,KAAK8zD,KAAKrC,EAAKkC,IAAQ,KAEW,IAAO,EACtDp6C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKrC,EAAKmC,IAAQ,IAErBpD,IAAQ,IAAO,IAAMoE,KAAQ,IAAO,EACjDA,IAAO,SAEPl1D,EAAKM,KAAK8zD,KAAK1B,EAAKe,IAEpB3C,GADAA,EAAMxwD,KAAK8zD,KAAK1B,EAAKgB,KACRpzD,KAAK8zD,KAAKzB,EAAKc,IAAQ,EACpC5E,EAAKvuD,KAAK8zD,KAAKzB,EAAKe,IACpB1zD,EAAMA,EAAKM,KAAK8zD,KAAK7B,EAAKqB,IAAQ,EAElC9C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK7B,EAAKsB,IAAQ,GACvBvzD,KAAK8zD,KAAK5B,EAAKoB,IAAQ,EACpC/E,EAAMA,EAAKvuD,KAAK8zD,KAAK5B,EAAKqB,IAAQ,EAClC7zD,EAAMA,EAAKM,KAAK8zD,KAAKhC,EAAK2B,IAAQ,EAElCjD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKhC,EAAK4B,IAAQ,GACvB1zD,KAAK8zD,KAAK/B,EAAK0B,IAAQ,EACpClF,EAAMA,EAAKvuD,KAAK8zD,KAAK/B,EAAK2B,IAAQ,EAKlC,IAAImB,IAASt7C,GAJb7Z,EAAMA,EAAKM,KAAK8zD,KAAKnC,EAAKgC,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnC,EAAKiC,IAAQ,GACvB5zD,KAAK8zD,KAAKlC,EAAK+B,IAAQ,KAEW,IAAO,EACtDp6C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKlC,EAAKgC,IAAQ,IAErBpD,IAAQ,IAAO,IAAMqE,KAAQ,IAAO,EACjDA,IAAO,SAEPn1D,EAAKM,KAAK8zD,KAAK1B,EAAKkB,IAEpB9C,GADAA,EAAMxwD,KAAK8zD,KAAK1B,EAAKmB,KACRvzD,KAAK8zD,KAAKzB,EAAKiB,IAAQ,EACpC/E,EAAKvuD,KAAK8zD,KAAKzB,EAAKkB,IACpB7zD,EAAMA,EAAKM,KAAK8zD,KAAK7B,EAAKwB,IAAQ,EAElCjD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK7B,EAAKyB,IAAQ,GACvB1zD,KAAK8zD,KAAK5B,EAAKuB,IAAQ,EACpClF,EAAMA,EAAKvuD,KAAK8zD,KAAK5B,EAAKwB,IAAQ,EAKlC,IAAIoB,IAASv7C,GAJb7Z,EAAMA,EAAKM,KAAK8zD,KAAKhC,EAAK6B,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKhC,EAAK8B,IAAQ,GACvB5zD,KAAK8zD,KAAK/B,EAAK4B,IAAQ,KAEW,IAAO,EACtDp6C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAK/B,EAAK6B,IAAQ,IAErBpD,IAAQ,IAAO,IAAMsE,KAAQ,IAAO,EACjDA,IAAO,SAEPp1D,EAAKM,KAAK8zD,KAAK1B,EAAKqB,IAEpBjD,GADAA,EAAMxwD,KAAK8zD,KAAK1B,EAAKsB,KACR1zD,KAAK8zD,KAAKzB,EAAKoB,IAAQ,EACpClF,EAAKvuD,KAAK8zD,KAAKzB,EAAKqB,IAKpB,IAAIqB,IAASx7C,GAJb7Z,EAAMA,EAAKM,KAAK8zD,KAAK7B,EAAK0B,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK7B,EAAK2B,IAAQ,GACvB5zD,KAAK8zD,KAAK5B,EAAKyB,IAAQ,KAEW,IAAO,EACtDp6C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAK5B,EAAK0B,IAAQ,IAErBpD,IAAQ,IAAO,IAAMuE,KAAQ,IAAO,EACjDA,IAAO,SAMP,IAAIC,IAASz7C,GAJb7Z,EAAKM,KAAK8zD,KAAK1B,EAAKuB,KAIG,KAAa,MAFpCnD,GADAA,EAAMxwD,KAAK8zD,KAAK1B,EAAKwB,KACR5zD,KAAK8zD,KAAKzB,EAAKsB,IAAQ,KAEW,IAAO,EA0BtD,OAzBAp6C,IAFAg1C,EAAKvuD,KAAK8zD,KAAKzB,EAAKuB,MAEPpD,IAAQ,IAAO,IAAMwE,KAAQ,IAAO,EACjDA,IAAO,SACPvE,EAAE,GAAKoD,GACPpD,EAAE,GAAKsD,GACPtD,EAAE,GAAKuD,GACPvD,EAAE,GAAKwD,GACPxD,EAAE,GAAKyD,GACPzD,EAAE,GAAK0D,GACP1D,EAAE,GAAK2D,GACP3D,EAAE,GAAK4D,GACP5D,EAAE,GAAK6D,GACP7D,EAAE,GAAK8D,GACP9D,EAAE,IAAM+D,GACR/D,EAAE,IAAMgE,GACRhE,EAAE,IAAMiE,GACRjE,EAAE,IAAMkE,GACRlE,EAAE,IAAMmE,GACRnE,EAAE,IAAMoE,GACRpE,EAAE,IAAMqE,GACRrE,EAAE,IAAMsE,GACRtE,EAAE,IAAMuE,GACE,IAANz7C,IACFk3C,EAAE,IAAMl3C,EACR5P,EAAIlL,UAECkL,CACR,EAOD,SAASsrD,EAAUnrD,EAAM0N,EAAK7N,GAC5BA,EAAIohD,SAAWvzC,EAAIuzC,SAAWjhD,EAAKihD,SACnCphD,EAAIlL,OAASqL,EAAKrL,OAAS+Y,EAAI/Y,OAI/B,IAFA,IAAImrD,EAAQ,EACRsL,EAAU,EACLz0C,EAAI,EAAGA,EAAI9W,EAAIlL,OAAS,EAAGgiB,IAAK,CAGvC,IAAIktC,EAASuH,EACbA,EAAU,EAGV,IAFA,IAAItH,EAAgB,SAARhE,EACRiE,EAAO7tD,KAAK4J,IAAI6W,EAAGjJ,EAAI/Y,OAAS,GAC3Boe,EAAI7c,KAAKsf,IAAI,EAAGmB,EAAI3W,EAAKrL,OAAS,GAAIoe,GAAKgxC,EAAMhxC,IAAK,CAC7D,IAAIrZ,EAAIid,EAAI5D,EAGRxD,GAFoB,EAAhBvP,EAAKkhD,MAAMxnD,KACI,EAAfgU,EAAIwzC,MAAMnuC,IAGdnd,EAAS,SAAJ2Z,EAGTu0C,EAAa,UADbluD,EAAMA,EAAKkuD,EAAS,GAIpBsH,IAFAvH,GAHAA,EAAUA,GAAWt0C,EAAI,SAAa,GAAM,IAGxB3Z,IAAO,IAAO,KAEZ,GACtBiuD,GAAU,QACX,CACDhkD,EAAIqhD,MAAMvqC,GAAKmtC,EACfhE,EAAQ+D,EACRA,EAASuH,CACV,CAOD,OANc,IAAVtL,EACFjgD,EAAIqhD,MAAMvqC,GAAKmpC,EAEfjgD,EAAIlL,SAGCkL,EAAI0iD,QACZ,CAED,SAAS8I,EAAYrrD,EAAM0N,EAAK7N,GAI9B,OAAOsrD,EAASnrD,EAAM0N,EAAK7N,EAC5B,CAqBD,SAASyrD,EAAMpiD,EAAGC,GAChBpI,KAAKmI,EAAIA,EACTnI,KAAKoI,EAAIA,CACV,CA1EIjT,KAAK8zD,OACRvD,EAAc7C,GAmDhB15B,EAAG30B,UAAUg2D,MAAQ,SAAgB79C,EAAK7N,GACxC,IACIgC,EAAMd,KAAKpM,OAAS+Y,EAAI/Y,OAW5B,OAVoB,KAAhBoM,KAAKpM,QAAgC,KAAf+Y,EAAI/Y,OACtB8xD,EAAY1lD,KAAM2M,EAAK7N,GACpBgC,EAAM,GACT+hD,EAAW7iD,KAAM2M,EAAK7N,GACnBgC,EAAM,KACTspD,EAASpqD,KAAM2M,EAAK7N,GAEpBwrD,EAAWtqD,KAAM2M,EAAK7N,EAI/B,EAUDyrD,EAAK/1D,UAAUi2D,QAAU,SAAkBC,GAGzC,IAFA,IAAIpiD,EAAI,IAAInP,MAAMuxD,GACd7oD,EAAIsnB,EAAG30B,UAAU+uD,WAAWmH,GAAK,EAC5B/xD,EAAI,EAAGA,EAAI+xD,EAAG/xD,IACrB2P,EAAE3P,GAAKqH,KAAK2qD,OAAOhyD,EAAGkJ,EAAG6oD,GAG3B,OAAOpiD,CACR,EAGDiiD,EAAK/1D,UAAUm2D,OAAS,SAAiBxiD,EAAGtG,EAAG6oD,GAC7C,GAAU,IAANviD,GAAWA,IAAMuiD,EAAI,EAAG,OAAOviD,EAGnC,IADA,IAAIyiD,EAAK,EACAjyD,EAAI,EAAGA,EAAIkJ,EAAGlJ,IACrBiyD,IAAW,EAAJziD,IAAWtG,EAAIlJ,EAAI,EAC1BwP,IAAM,EAGR,OAAOyiD,CACR,EAIDL,EAAK/1D,UAAUq2D,QAAU,SAAkBC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GACpE,IAAK,IAAI/xD,EAAI,EAAGA,EAAI+xD,EAAG/xD,IACrBsyD,EAAKtyD,GAAKoyD,EAAID,EAAInyD,IAClBuyD,EAAKvyD,GAAKqyD,EAAIF,EAAInyD,GAErB,EAED4xD,EAAK/1D,UAAU22D,UAAY,SAAoBJ,EAAKC,EAAKC,EAAMC,EAAMR,EAAGI,GACtE9qD,KAAK6qD,QAAQC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GAExC,IAAK,IAAI3nD,EAAI,EAAGA,EAAI2nD,EAAG3nD,IAAM,EAM3B,IALA,IAAIlB,EAAIkB,GAAK,EAETqoD,EAAQj2D,KAAKk2D,IAAI,EAAIl2D,KAAKwoB,GAAK9b,GAC/BypD,EAAQn2D,KAAKo2D,IAAI,EAAIp2D,KAAKwoB,GAAK9b,GAE1B0I,EAAI,EAAGA,EAAImgD,EAAGngD,GAAK1I,EAI1B,IAHA,IAAI2pD,EAASJ,EACTK,EAASH,EAEJt5C,EAAI,EAAGA,EAAIjP,EAAGiP,IAAK,CAC1B,IAAI05C,EAAKT,EAAK1gD,EAAIyH,GACd25C,EAAKT,EAAK3gD,EAAIyH,GAEd45C,EAAKX,EAAK1gD,EAAIyH,EAAIjP,GAClB8oD,EAAKX,EAAK3gD,EAAIyH,EAAIjP,GAElB+oD,EAAKN,EAASI,EAAKH,EAASI,EAEhCA,EAAKL,EAASK,EAAKJ,EAASG,EAC5BA,EAAKE,EAELb,EAAK1gD,EAAIyH,GAAK05C,EAAKE,EACnBV,EAAK3gD,EAAIyH,GAAK25C,EAAKE,EAEnBZ,EAAK1gD,EAAIyH,EAAIjP,GAAK2oD,EAAKE,EACvBV,EAAK3gD,EAAIyH,EAAIjP,GAAK4oD,EAAKE,EAGnB75C,IAAMnQ,IACRiqD,EAAKV,EAAQI,EAASF,EAAQG,EAE9BA,EAASL,EAAQK,EAASH,EAAQE,EAClCA,EAASM,EAEZ,CAGN,EAEDvB,EAAK/1D,UAAUu3D,YAAc,SAAsBjuD,EAAG6U,GACpD,IAAI+3C,EAAqB,EAAjBv1D,KAAKsf,IAAI9B,EAAG7U,GAChBkuD,EAAU,EAAJtB,EACN/xD,EAAI,EACR,IAAK+xD,EAAIA,EAAI,EAAI,EAAGA,EAAGA,KAAU,EAC/B/xD,IAGF,OAAO,GAAKA,EAAI,EAAIqzD,CACrB,EAEDzB,EAAK/1D,UAAUy3D,UAAY,SAAoBlB,EAAKC,EAAKN,GACvD,KAAIA,GAAK,GAET,IAAK,IAAI/xD,EAAI,EAAGA,EAAI+xD,EAAI,EAAG/xD,IAAK,CAC9B,IAAI2P,EAAIyiD,EAAIpyD,GAEZoyD,EAAIpyD,GAAKoyD,EAAIL,EAAI/xD,EAAI,GACrBoyD,EAAIL,EAAI/xD,EAAI,GAAK2P,EAEjBA,EAAI0iD,EAAIryD,GAERqyD,EAAIryD,IAAMqyD,EAAIN,EAAI/xD,EAAI,GACtBqyD,EAAIN,EAAI/xD,EAAI,IAAM2P,CACnB,CACF,EAEDiiD,EAAK/1D,UAAU03D,aAAe,SAAuBC,EAAIzB,GAEvD,IADA,IAAI3L,EAAQ,EACHpmD,EAAI,EAAGA,EAAI+xD,EAAI,EAAG/xD,IAAK,CAC9B,IAAI2oD,EAAoC,KAAhCnsD,KAAKonB,MAAM4vC,EAAG,EAAIxzD,EAAI,GAAK+xD,GACjCv1D,KAAKonB,MAAM4vC,EAAG,EAAIxzD,GAAK+xD,GACvB3L,EAEFoN,EAAGxzD,GAAS,SAAJ2oD,EAGNvC,EADEuC,EAAI,SACE,EAEAA,EAAI,SAAY,CAE3B,CAED,OAAO6K,CACR,EAED5B,EAAK/1D,UAAU43D,WAAa,SAAqBD,EAAIrrD,EAAKiqD,EAAKL,GAE7D,IADA,IAAI3L,EAAQ,EACHpmD,EAAI,EAAGA,EAAImI,EAAKnI,IACvBomD,GAAyB,EAARoN,EAAGxzD,GAEpBoyD,EAAI,EAAIpyD,GAAa,KAARomD,EAAgBA,KAAkB,GAC/CgM,EAAI,EAAIpyD,EAAI,GAAa,KAARomD,EAAgBA,KAAkB,GAIrD,IAAKpmD,EAAI,EAAImI,EAAKnI,EAAI+xD,IAAK/xD,EACzBoyD,EAAIpyD,GAAK,EAGXwF,EAAiB,IAAV4gD,GACP5gD,EAA6B,MAAb,KAAR4gD,GACT,EAEDwL,EAAK/1D,UAAU63D,KAAO,SAAe3B,GAEnC,IADA,IAAI4B,EAAK,IAAInzD,MAAMuxD,GACV/xD,EAAI,EAAGA,EAAI+xD,EAAG/xD,IACrB2zD,EAAG3zD,GAAK,EAGV,OAAO2zD,CACR,EAED/B,EAAK/1D,UAAU+3D,KAAO,SAAepkD,EAAGC,EAAGtJ,GACzC,IAAI4rD,EAAI,EAAI1qD,KAAK+rD,YAAY5jD,EAAEvU,OAAQwU,EAAExU,QAErCk3D,EAAM9qD,KAAKyqD,QAAQC,GAEnBn6B,EAAIvwB,KAAKqsD,KAAK3B,GAEdK,EAAM,IAAI5xD,MAAMuxD,GAChB8B,EAAO,IAAIrzD,MAAMuxD,GACjB+B,EAAO,IAAItzD,MAAMuxD,GAEjBgC,EAAO,IAAIvzD,MAAMuxD,GACjBiC,EAAQ,IAAIxzD,MAAMuxD,GAClBkC,EAAQ,IAAIzzD,MAAMuxD,GAElBmC,EAAO/tD,EAAIqhD,MACf0M,EAAKj5D,OAAS82D,EAEd1qD,KAAKosD,WAAWjkD,EAAEg4C,MAAOh4C,EAAEvU,OAAQm3D,EAAKL,GACxC1qD,KAAKosD,WAAWhkD,EAAE+3C,MAAO/3C,EAAExU,OAAQ84D,EAAMhC,GAEzC1qD,KAAKmrD,UAAUJ,EAAKx6B,EAAGi8B,EAAMC,EAAM/B,EAAGI,GACtC9qD,KAAKmrD,UAAUuB,EAAMn8B,EAAGo8B,EAAOC,EAAOlC,EAAGI,GAEzC,IAAK,IAAInyD,EAAI,EAAGA,EAAI+xD,EAAG/xD,IAAK,CAC1B,IAAImzD,EAAKU,EAAK7zD,GAAKg0D,EAAMh0D,GAAK8zD,EAAK9zD,GAAKi0D,EAAMj0D,GAC9C8zD,EAAK9zD,GAAK6zD,EAAK7zD,GAAKi0D,EAAMj0D,GAAK8zD,EAAK9zD,GAAKg0D,EAAMh0D,GAC/C6zD,EAAK7zD,GAAKmzD,CACX,CASD,OAPA9rD,KAAKisD,UAAUO,EAAMC,EAAM/B,GAC3B1qD,KAAKmrD,UAAUqB,EAAMC,EAAMI,EAAMt8B,EAAGm6B,EAAGI,GACvC9qD,KAAKisD,UAAUY,EAAMt8B,EAAGm6B,GACxB1qD,KAAKksD,aAAaW,EAAMnC,GAExB5rD,EAAIohD,SAAW/3C,EAAE+3C,SAAW93C,EAAE83C,SAC9BphD,EAAIlL,OAASuU,EAAEvU,OAASwU,EAAExU,OACnBkL,EAAI0iD,QACZ,EAGDr4B,EAAG30B,UAAUosD,IAAM,SAAcj0C,GAC/B,IAAI7N,EAAM,IAAIqqB,EAAG,MAEjB,OADArqB,EAAIqhD,MAAQ,IAAIhnD,MAAM6G,KAAKpM,OAAS+Y,EAAI/Y,QACjCoM,KAAKwqD,MAAM79C,EAAK7N,EACxB,EAGDqqB,EAAG30B,UAAUs4D,KAAO,SAAengD,GACjC,IAAI7N,EAAM,IAAIqqB,EAAG,MAEjB,OADArqB,EAAIqhD,MAAQ,IAAIhnD,MAAM6G,KAAKpM,OAAS+Y,EAAI/Y,QACjC02D,EAAWtqD,KAAM2M,EAAK7N,EAC9B,EAGDqqB,EAAG30B,UAAUy0D,KAAO,SAAet8C,GACjC,OAAO3M,KAAK8hD,QAAQ0I,MAAM79C,EAAK3M,KAChC,EAEDmpB,EAAG30B,UAAUmtD,MAAQ,SAAgBh1C,GACnC,IAAIogD,EAAWpgD,EAAM,EACjBogD,IAAUpgD,GAAOA,GAErBxO,EAAsB,kBAARwO,GACdxO,EAAOwO,EAAM,UAIb,IADA,IAAIoyC,EAAQ,EACHpmD,EAAI,EAAGA,EAAIqH,KAAKpM,OAAQ+E,IAAK,CACpC,IAAI2oD,GAAqB,EAAhBthD,KAAKmgD,MAAMxnD,IAAUgU,EAC1B9X,GAAU,SAAJysD,IAA0B,SAARvC,GAC5BA,IAAU,GACVA,GAAUuC,EAAI,SAAa,EAE3BvC,GAASlqD,IAAO,GAChBmL,KAAKmgD,MAAMxnD,GAAU,SAAL9D,CACjB,CAOD,OALc,IAAVkqD,IACF/+C,KAAKmgD,MAAMxnD,GAAKomD,EAChB/+C,KAAKpM,UAGAm5D,EAAW/sD,KAAKmkD,OAASnkD,IACjC,EAEDmpB,EAAG30B,UAAUw4D,KAAO,SAAergD,GACjC,OAAO3M,KAAK8hD,QAAQH,MAAMh1C,EAC3B,EAGDwc,EAAG30B,UAAUy4D,IAAM,WACjB,OAAOjtD,KAAK4gD,IAAI5gD,KACjB,EAGDmpB,EAAG30B,UAAU04D,KAAO,WAClB,OAAOltD,KAAKipD,KAAKjpD,KAAK8hD,QACvB,EAGD34B,EAAG30B,UAAU+B,IAAM,SAAcoW,GAC/B,IAAI20C,EA7xCN,SAAqB30C,GAGnB,IAFA,IAAI20C,EAAI,IAAInoD,MAAMwT,EAAI82C,aAEb4B,EAAM,EAAGA,EAAM/D,EAAE1tD,OAAQyxD,IAAO,CACvC,IAAI9D,EAAO8D,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAEjB/D,EAAE+D,GAAQ14C,EAAIwzC,MAAMoB,KAAS+D,EAAQ,CACtC,CAED,OAAOhE,CACR,CAkxCS6L,CAAWxgD,GACnB,GAAiB,IAAb20C,EAAE1tD,OAAc,OAAO,IAAIu1B,EAAG,GAIlC,IADA,IAAIhnB,EAAMnC,KACDrH,EAAI,EAAGA,EAAI2oD,EAAE1tD,QACP,IAAT0tD,EAAE3oD,GADsBA,IAAKwJ,EAAMA,EAAI8qD,OAI7C,KAAMt0D,EAAI2oD,EAAE1tD,OACV,IAAK,IAAI8e,EAAIvQ,EAAI8qD,MAAOt0D,EAAI2oD,EAAE1tD,OAAQ+E,IAAK+Z,EAAIA,EAAEu6C,MAClC,IAAT3L,EAAE3oD,KAENwJ,EAAMA,EAAIy+C,IAAIluC,IAIlB,OAAOvQ,CACR,EAGDgnB,EAAG30B,UAAU44D,OAAS,SAAiBhxD,GACrC+B,EAAuB,kBAAT/B,GAAqBA,GAAQ,GAC3C,IAGIzD,EAHA6V,EAAIpS,EAAO,GACX2G,GAAK3G,EAAOoS,GAAK,GACjB6+C,EAAa,WAAe,GAAK7+C,GAAQ,GAAKA,EAGlD,GAAU,IAANA,EAAS,CACX,IAAIuwC,EAAQ,EAEZ,IAAKpmD,EAAI,EAAGA,EAAIqH,KAAKpM,OAAQ+E,IAAK,CAChC,IAAI20D,EAAWttD,KAAKmgD,MAAMxnD,GAAK00D,EAC3B3+C,GAAsB,EAAhB1O,KAAKmgD,MAAMxnD,IAAU20D,GAAa9+C,EAC5CxO,KAAKmgD,MAAMxnD,GAAK+V,EAAIqwC,EACpBA,EAAQuO,IAAc,GAAK9+C,CAC5B,CAEGuwC,IACF/+C,KAAKmgD,MAAMxnD,GAAKomD,EAChB/+C,KAAKpM,SAER,CAED,GAAU,IAANmP,EAAS,CACX,IAAKpK,EAAIqH,KAAKpM,OAAS,EAAG+E,GAAK,EAAGA,IAChCqH,KAAKmgD,MAAMxnD,EAAIoK,GAAK/C,KAAKmgD,MAAMxnD,GAGjC,IAAKA,EAAI,EAAGA,EAAIoK,EAAGpK,IACjBqH,KAAKmgD,MAAMxnD,GAAK,EAGlBqH,KAAKpM,QAAUmP,CAChB,CAED,OAAO/C,KAAKwhD,QACb,EAEDr4B,EAAG30B,UAAU+4D,MAAQ,SAAgBnxD,GAGnC,OADA+B,EAAyB,IAAlB6B,KAAKkgD,UACLlgD,KAAKotD,OAAOhxD,EACpB,EAKD+sB,EAAG30B,UAAUg5D,OAAS,SAAiBpxD,EAAMqxD,EAAMC,GAEjD,IAAI9rD,EADJzD,EAAuB,kBAAT/B,GAAqBA,GAAQ,GAGzCwF,EADE6rD,GACGA,EAAQA,EAAO,IAAO,GAEvB,EAGN,IAAIj/C,EAAIpS,EAAO,GACX2G,EAAI5N,KAAK4J,KAAK3C,EAAOoS,GAAK,GAAIxO,KAAKpM,QACnC0X,EAAO,SAAc,WAAckD,GAAMA,EACzCm/C,EAAcD,EAMlB,GAJA9rD,GAAKmB,EACLnB,EAAIzM,KAAKsf,IAAI,EAAG7S,GAGZ+rD,EAAa,CACf,IAAK,IAAIh1D,EAAI,EAAGA,EAAIoK,EAAGpK,IACrBg1D,EAAYxN,MAAMxnD,GAAKqH,KAAKmgD,MAAMxnD,GAEpCg1D,EAAY/5D,OAASmP,CACtB,CAED,GAAU,IAANA,QAEG,GAAI/C,KAAKpM,OAASmP,EAEvB,IADA/C,KAAKpM,QAAUmP,EACVpK,EAAI,EAAGA,EAAIqH,KAAKpM,OAAQ+E,IAC3BqH,KAAKmgD,MAAMxnD,GAAKqH,KAAKmgD,MAAMxnD,EAAIoK,QAGjC/C,KAAKmgD,MAAM,GAAK,EAChBngD,KAAKpM,OAAS,EAGhB,IAAImrD,EAAQ,EACZ,IAAKpmD,EAAIqH,KAAKpM,OAAS,EAAG+E,GAAK,IAAgB,IAAVomD,GAAepmD,GAAKiJ,GAAIjJ,IAAK,CAChE,IAAIoD,EAAuB,EAAhBiE,KAAKmgD,MAAMxnD,GACtBqH,KAAKmgD,MAAMxnD,GAAMomD,GAAU,GAAKvwC,EAAOzS,IAASyS,EAChDuwC,EAAQhjD,EAAOuP,CAChB,CAYD,OATIqiD,GAAyB,IAAV5O,IACjB4O,EAAYxN,MAAMwN,EAAY/5D,UAAYmrD,GAGxB,IAAhB/+C,KAAKpM,SACPoM,KAAKmgD,MAAM,GAAK,EAChBngD,KAAKpM,OAAS,GAGToM,KAAKwhD,QACb,EAEDr4B,EAAG30B,UAAUo5D,MAAQ,SAAgBxxD,EAAMqxD,EAAMC,GAG/C,OADAvvD,EAAyB,IAAlB6B,KAAKkgD,UACLlgD,KAAKwtD,OAAOpxD,EAAMqxD,EAAMC,EAChC,EAGDvkC,EAAG30B,UAAUq5D,KAAO,SAAezxD,GACjC,OAAO4D,KAAK8hD,QAAQyL,MAAMnxD,EAC3B,EAED+sB,EAAG30B,UAAUs5D,MAAQ,SAAgB1xD,GACnC,OAAO4D,KAAK8hD,QAAQsL,OAAOhxD,EAC5B,EAGD+sB,EAAG30B,UAAUu5D,KAAO,SAAe3xD,GACjC,OAAO4D,KAAK8hD,QAAQ8L,MAAMxxD,EAC3B,EAED+sB,EAAG30B,UAAUw5D,MAAQ,SAAgB5xD,GACnC,OAAO4D,KAAK8hD,QAAQ0L,OAAOpxD,EAC5B,EAGD+sB,EAAG30B,UAAUyvD,MAAQ,SAAgBoB,GACnClnD,EAAsB,kBAARknD,GAAoBA,GAAO,GACzC,IAAI72C,EAAI62C,EAAM,GACVtiD,GAAKsiD,EAAM72C,GAAK,GAChBkE,EAAI,GAAKlE,EAGb,QAAIxO,KAAKpM,QAAUmP,OAGX/C,KAAKmgD,MAAMp9C,GAEL2P,EACf,EAGDyW,EAAG30B,UAAUy5D,OAAS,SAAiB7xD,GACrC+B,EAAuB,kBAAT/B,GAAqBA,GAAQ,GAC3C,IAAIoS,EAAIpS,EAAO,GACX2G,GAAK3G,EAAOoS,GAAK,GAIrB,GAFArQ,EAAyB,IAAlB6B,KAAKkgD,SAAgB,2CAExBlgD,KAAKpM,QAAUmP,EACjB,OAAO/C,KAQT,GALU,IAANwO,GACFzL,IAEF/C,KAAKpM,OAASuB,KAAK4J,IAAIgE,EAAG/C,KAAKpM,QAErB,IAAN4a,EAAS,CACX,IAAIlD,EAAO,SAAc,WAAckD,GAAMA,EAC7CxO,KAAKmgD,MAAMngD,KAAKpM,OAAS,IAAM0X,CAChC,CAED,OAAOtL,KAAKwhD,QACb,EAGDr4B,EAAG30B,UAAU05D,MAAQ,SAAgB9xD,GACnC,OAAO4D,KAAK8hD,QAAQmM,OAAO7xD,EAC5B,EAGD+sB,EAAG30B,UAAUuvD,MAAQ,SAAgBp3C,GAGnC,OAFAxO,EAAsB,kBAARwO,GACdxO,EAAOwO,EAAM,UACTA,EAAM,EAAU3M,KAAKmuD,OAAOxhD,GAGV,IAAlB3M,KAAKkgD,SACa,IAAhBlgD,KAAKpM,SAAiC,EAAhBoM,KAAKmgD,MAAM,KAAWxzC,GAC9C3M,KAAKmgD,MAAM,GAAKxzC,GAAuB,EAAhB3M,KAAKmgD,MAAM,IAClCngD,KAAKkgD,SAAW,EACTlgD,OAGTA,KAAKkgD,SAAW,EAChBlgD,KAAKmuD,MAAMxhD,GACX3M,KAAKkgD,SAAW,EACTlgD,MAIFA,KAAK4hD,OAAOj1C,EACpB,EAEDwc,EAAG30B,UAAUotD,OAAS,SAAiBj1C,GACrC3M,KAAKmgD,MAAM,IAAMxzC,EAGjB,IAAK,IAAIhU,EAAI,EAAGA,EAAIqH,KAAKpM,QAAUoM,KAAKmgD,MAAMxnD,IAAM,SAAWA,IAC7DqH,KAAKmgD,MAAMxnD,IAAM,SACbA,IAAMqH,KAAKpM,OAAS,EACtBoM,KAAKmgD,MAAMxnD,EAAI,GAAK,EAEpBqH,KAAKmgD,MAAMxnD,EAAI,KAKnB,OAFAqH,KAAKpM,OAASuB,KAAKsf,IAAIzU,KAAKpM,OAAQ+E,EAAI,GAEjCqH,IACR,EAGDmpB,EAAG30B,UAAU25D,MAAQ,SAAgBxhD,GAGnC,GAFAxO,EAAsB,kBAARwO,GACdxO,EAAOwO,EAAM,UACTA,EAAM,EAAG,OAAO3M,KAAK+jD,OAAOp3C,GAEhC,GAAsB,IAAlB3M,KAAKkgD,SAIP,OAHAlgD,KAAKkgD,SAAW,EAChBlgD,KAAK+jD,MAAMp3C,GACX3M,KAAKkgD,SAAW,EACTlgD,KAKT,GAFAA,KAAKmgD,MAAM,IAAMxzC,EAEG,IAAhB3M,KAAKpM,QAAgBoM,KAAKmgD,MAAM,GAAK,EACvCngD,KAAKmgD,MAAM,IAAMngD,KAAKmgD,MAAM,GAC5BngD,KAAKkgD,SAAW,OAGhB,IAAK,IAAIvnD,EAAI,EAAGA,EAAIqH,KAAKpM,QAAUoM,KAAKmgD,MAAMxnD,GAAK,EAAGA,IACpDqH,KAAKmgD,MAAMxnD,IAAM,SACjBqH,KAAKmgD,MAAMxnD,EAAI,IAAM,EAIzB,OAAOqH,KAAKwhD,QACb,EAEDr4B,EAAG30B,UAAU45D,KAAO,SAAezhD,GACjC,OAAO3M,KAAK8hD,QAAQiC,MAAMp3C,EAC3B,EAEDwc,EAAG30B,UAAU65D,KAAO,SAAe1hD,GACjC,OAAO3M,KAAK8hD,QAAQqM,MAAMxhD,EAC3B,EAEDwc,EAAG30B,UAAU85D,KAAO,WAGlB,OAFAtuD,KAAKkgD,SAAW,EAETlgD,IACR,EAEDmpB,EAAG30B,UAAUoX,IAAM,WACjB,OAAO5L,KAAK8hD,QAAQwM,MACrB,EAEDnlC,EAAG30B,UAAU+5D,aAAe,SAAuB5hD,EAAKi0C,EAAK5mD,GAC3D,IACIrB,EAIA2oD,EALAxgD,EAAM6L,EAAI/Y,OAASoG,EAGvBgG,KAAK+hD,QAAQjhD,GAGb,IAAIi+C,EAAQ,EACZ,IAAKpmD,EAAI,EAAGA,EAAIgU,EAAI/Y,OAAQ+E,IAAK,CAC/B2oD,GAA6B,EAAxBthD,KAAKmgD,MAAMxnD,EAAIqB,IAAc+kD,EAClC,IAAI+B,GAAwB,EAAfn0C,EAAIwzC,MAAMxnD,IAAUioD,EAEjC7B,IADAuC,GAAa,SAARR,IACS,KAAQA,EAAQ,SAAa,GAC3C9gD,KAAKmgD,MAAMxnD,EAAIqB,GAAa,SAAJsnD,CACzB,CACD,KAAO3oD,EAAIqH,KAAKpM,OAASoG,EAAOrB,IAE9BomD,GADAuC,GAA6B,EAAxBthD,KAAKmgD,MAAMxnD,EAAIqB,IAAc+kD,IACrB,GACb/+C,KAAKmgD,MAAMxnD,EAAIqB,GAAa,SAAJsnD,EAG1B,GAAc,IAAVvC,EAAa,OAAO/+C,KAAKwhD,SAK7B,IAFArjD,GAAkB,IAAX4gD,GACPA,EAAQ,EACHpmD,EAAI,EAAGA,EAAIqH,KAAKpM,OAAQ+E,IAE3BomD,GADAuC,IAAsB,EAAhBthD,KAAKmgD,MAAMxnD,IAAUomD,IACd,GACb/+C,KAAKmgD,MAAMxnD,GAAS,SAAJ2oD,EAIlB,OAFAthD,KAAKkgD,SAAW,EAETlgD,KAAKwhD,QACb,EAEDr4B,EAAG30B,UAAUg6D,SAAW,SAAmB7hD,EAAK8hD,GAC9C,IAAIz0D,GAAQgG,KAAKpM,OAAS+Y,EAAI/Y,QAE1B2T,EAAIvH,KAAK8hD,QACT1uD,EAAIuZ,EAGJ+hD,EAA8B,EAAxBt7D,EAAE+sD,MAAM/sD,EAAEQ,OAAS,GAGf,KADdoG,EAAQ,GADMgG,KAAKujD,WAAWmL,MAG5Bt7D,EAAIA,EAAE06D,MAAM9zD,GACZuN,EAAE6lD,OAAOpzD,GACT00D,EAA8B,EAAxBt7D,EAAE+sD,MAAM/sD,EAAEQ,OAAS,IAI3B,IACI8e,EADAC,EAAIpL,EAAE3T,OAASR,EAAEQ,OAGrB,GAAa,QAAT66D,EAAgB,EAClB/7C,EAAI,IAAIyW,EAAG,OACTv1B,OAAS+e,EAAI,EACfD,EAAEytC,MAAQ,IAAIhnD,MAAMuZ,EAAE9e,QACtB,IAAK,IAAI+E,EAAI,EAAGA,EAAI+Z,EAAE9e,OAAQ+E,IAC5B+Z,EAAEytC,MAAMxnD,GAAK,CAEhB,CAED,IAAIg2D,EAAOpnD,EAAEu6C,QAAQyM,aAAan7D,EAAG,EAAGuf,GAClB,IAAlBg8C,EAAKzO,WACP34C,EAAIonD,EACAj8C,IACFA,EAAEytC,MAAMxtC,GAAK,IAIjB,IAAK,IAAIX,EAAIW,EAAI,EAAGX,GAAK,EAAGA,IAAK,CAC/B,IAAI48C,EAAmC,UAAL,EAAxBrnD,EAAE44C,MAAM/sD,EAAEQ,OAASoe,KACE,EAA5BzK,EAAE44C,MAAM/sD,EAAEQ,OAASoe,EAAI,IAO1B,IAHA48C,EAAKz5D,KAAK4J,IAAK6vD,EAAKF,EAAO,EAAG,UAE9BnnD,EAAEgnD,aAAan7D,EAAGw7D,EAAI58C,GACA,IAAfzK,EAAE24C,UACP0O,IACArnD,EAAE24C,SAAW,EACb34C,EAAEgnD,aAAan7D,EAAG,EAAG4e,GAChBzK,EAAEi7C,WACLj7C,EAAE24C,UAAY,GAGdxtC,IACFA,EAAEytC,MAAMnuC,GAAK48C,EAEhB,CAWD,OAVIl8C,GACFA,EAAE8uC,SAEJj6C,EAAEi6C,SAGW,QAATiN,GAA4B,IAAVz0D,GACpBuN,EAAEimD,OAAOxzD,GAGJ,CACL60D,IAAKn8C,GAAK,KACV1J,IAAKzB,EAER,EAMD4hB,EAAG30B,UAAUs6D,OAAS,SAAiBniD,EAAK8hD,EAAMM,GAGhD,OAFA5wD,GAAQwO,EAAI61C,UAERxiD,KAAKwiD,SACA,CACLqM,IAAK,IAAI1lC,EAAG,GACZngB,IAAK,IAAImgB,EAAG,IAKM,IAAlBnpB,KAAKkgD,UAAmC,IAAjBvzC,EAAIuzC,UAC7B/9C,EAAMnC,KAAKqkD,MAAMyK,OAAOniD,EAAK8hD,GAEhB,QAATA,IACFI,EAAM1sD,EAAI0sD,IAAIxK,OAGH,QAAToK,IACFzlD,EAAM7G,EAAI6G,IAAIq7C,MACV0K,GAA6B,IAAjB/lD,EAAIk3C,UAClBl3C,EAAIu8C,KAAK54C,IAIN,CACLkiD,IAAKA,EACL7lD,IAAKA,IAIa,IAAlBhJ,KAAKkgD,UAAmC,IAAjBvzC,EAAIuzC,UAC7B/9C,EAAMnC,KAAK8uD,OAAOniD,EAAI03C,MAAOoK,GAEhB,QAATA,IACFI,EAAM1sD,EAAI0sD,IAAIxK,OAGT,CACLwK,IAAKA,EACL7lD,IAAK7G,EAAI6G,MAI0B,KAAlChJ,KAAKkgD,SAAWvzC,EAAIuzC,WACvB/9C,EAAMnC,KAAKqkD,MAAMyK,OAAOniD,EAAI03C,MAAOoK,GAEtB,QAATA,IACFzlD,EAAM7G,EAAI6G,IAAIq7C,MACV0K,GAA6B,IAAjB/lD,EAAIk3C,UAClBl3C,EAAIw8C,KAAK74C,IAIN,CACLkiD,IAAK1sD,EAAI0sD,IACT7lD,IAAKA,IAOL2D,EAAI/Y,OAASoM,KAAKpM,QAAUoM,KAAK+gD,IAAIp0C,GAAO,EACvC,CACLkiD,IAAK,IAAI1lC,EAAG,GACZngB,IAAKhJ,MAKU,IAAf2M,EAAI/Y,OACO,QAAT66D,EACK,CACLI,IAAK7uD,KAAKgvD,KAAKriD,EAAIwzC,MAAM,IACzBn3C,IAAK,MAII,QAATylD,EACK,CACLI,IAAK,KACL7lD,IAAK,IAAImgB,EAAGnpB,KAAKyiD,MAAM91C,EAAIwzC,MAAM,MAI9B,CACL0O,IAAK7uD,KAAKgvD,KAAKriD,EAAIwzC,MAAM,IACzBn3C,IAAK,IAAImgB,EAAGnpB,KAAKyiD,MAAM91C,EAAIwzC,MAAM,MAI9BngD,KAAKwuD,SAAS7hD,EAAK8hD,GAlF1B,IAAII,EAAK7lD,EAAK7G,CAmFf,EAGDgnB,EAAG30B,UAAUq6D,IAAM,SAAcliD,GAC/B,OAAO3M,KAAK8uD,OAAOniD,EAAK,OAAO,GAAOkiD,GACvC,EAGD1lC,EAAG30B,UAAUwU,IAAM,SAAc2D,GAC/B,OAAO3M,KAAK8uD,OAAOniD,EAAK,OAAO,GAAO3D,GACvC,EAEDmgB,EAAG30B,UAAUy6D,KAAO,SAAetiD,GACjC,OAAO3M,KAAK8uD,OAAOniD,EAAK,OAAO,GAAM3D,GACtC,EAGDmgB,EAAG30B,UAAU06D,SAAW,SAAmBviD,GACzC,IAAIwiD,EAAKnvD,KAAK8uD,OAAOniD,GAGrB,GAAIwiD,EAAGnmD,IAAIw5C,SAAU,OAAO2M,EAAGN,IAE/B,IAAI7lD,EAA0B,IAApBmmD,EAAGN,IAAI3O,SAAiBiP,EAAGnmD,IAAIw8C,KAAK74C,GAAOwiD,EAAGnmD,IAEpDomD,EAAOziD,EAAIqhD,MAAM,GACjBr+C,EAAKhD,EAAI0iD,MAAM,GACftO,EAAM/3C,EAAI+3C,IAAIqO,GAGlB,OAAIrO,EAAM,GAAa,IAAPpxC,GAAoB,IAARoxC,EAAmBoO,EAAGN,IAGvB,IAApBM,EAAGN,IAAI3O,SAAiBiP,EAAGN,IAAIV,MAAM,GAAKgB,EAAGN,IAAI9K,MAAM,EAC/D,EAED56B,EAAG30B,UAAUiuD,MAAQ,SAAgB91C,GACnC,IAAIogD,EAAWpgD,EAAM,EACjBogD,IAAUpgD,GAAOA,GAErBxO,EAAOwO,GAAO,UAId,IAHA,IAAIpC,GAAK,GAAK,IAAMoC,EAEhBtT,EAAM,EACDV,EAAIqH,KAAKpM,OAAS,EAAG+E,GAAK,EAAGA,IACpCU,GAAOkR,EAAIlR,GAAuB,EAAhB2G,KAAKmgD,MAAMxnD,KAAWgU,EAG1C,OAAOogD,GAAY1zD,EAAMA,CAC1B,EAGD8vB,EAAG30B,UAAU86D,KAAO,SAAe3iD,GACjC,OAAO3M,KAAKyiD,MAAM91C,EACnB,EAGDwc,EAAG30B,UAAUkuD,MAAQ,SAAgB/1C,GACnC,IAAIogD,EAAWpgD,EAAM,EACjBogD,IAAUpgD,GAAOA,GAErBxO,EAAOwO,GAAO,UAGd,IADA,IAAIoyC,EAAQ,EACHpmD,EAAIqH,KAAKpM,OAAS,EAAG+E,GAAK,EAAGA,IAAK,CACzC,IAAI2oD,GAAqB,EAAhBthD,KAAKmgD,MAAMxnD,IAAkB,SAARomD,EAC9B/+C,KAAKmgD,MAAMxnD,GAAM2oD,EAAI30C,EAAO,EAC5BoyC,EAAQuC,EAAI30C,CACb,CAGD,OADA3M,KAAKwhD,SACEuL,EAAW/sD,KAAKmkD,OAASnkD,IACjC,EAEDmpB,EAAG30B,UAAUw6D,KAAO,SAAeriD,GACjC,OAAO3M,KAAK8hD,QAAQY,MAAM/1C,EAC3B,EAEDwc,EAAG30B,UAAU+6D,KAAO,SAAehlD,GACjCpM,EAAsB,IAAfoM,EAAE21C,UACT/hD,GAAQoM,EAAEi4C,UAEV,IAAIr6C,EAAInI,KACJoI,EAAImC,EAAEu3C,QAGR35C,EADiB,IAAfA,EAAE+3C,SACA/3C,EAAE8mD,KAAK1kD,GAEPpC,EAAE25C,QAaR,IATA,IAAI14C,EAAI,IAAI+f,EAAG,GACX9f,EAAI,IAAI8f,EAAG,GAGX7f,EAAI,IAAI6f,EAAG,GACX5f,EAAI,IAAI4f,EAAG,GAEXqmC,EAAI,EAEDrnD,EAAEsnD,UAAYrnD,EAAEqnD,UACrBtnD,EAAEqlD,OAAO,GACTplD,EAAEolD,OAAO,KACPgC,EAMJ,IAHA,IAAIE,EAAKtnD,EAAE05C,QACP6N,EAAKxnD,EAAE25C,SAEH35C,EAAEq6C,UAAU,CAClB,IAAK,IAAI7pD,EAAI,EAAGi3D,EAAK,EAAyB,KAArBznD,EAAEg4C,MAAM,GAAKyP,IAAaj3D,EAAI,KAAMA,EAAGi3D,IAAO,GACvE,GAAIj3D,EAAI,EAEN,IADAwP,EAAEqlD,OAAO70D,GACFA,KAAM,IACPyQ,EAAEymD,SAAWxmD,EAAEwmD,WACjBzmD,EAAEm8C,KAAKmK,GACPrmD,EAAEm8C,KAAKmK,IAGTvmD,EAAEokD,OAAO,GACTnkD,EAAEmkD,OAAO,GAIb,IAAK,IAAIx7C,EAAI,EAAG89C,EAAK,EAAyB,KAArB1nD,EAAE+3C,MAAM,GAAK2P,IAAa99C,EAAI,KAAMA,EAAG89C,IAAO,GACvE,GAAI99C,EAAI,EAEN,IADA5J,EAAEolD,OAAOx7C,GACFA,KAAM,IACP1I,EAAEumD,SAAWtmD,EAAEsmD,WACjBvmD,EAAEi8C,KAAKmK,GACPnmD,EAAEi8C,KAAKmK,IAGTrmD,EAAEkkD,OAAO,GACTjkD,EAAEikD,OAAO,GAITrlD,EAAE44C,IAAI34C,IAAM,GACdD,EAAEq9C,KAAKp9C,GACPgB,EAAEo8C,KAAKl8C,GACPD,EAAEm8C,KAAKj8C,KAEPnB,EAAEo9C,KAAKr9C,GACPmB,EAAEk8C,KAAKp8C,GACPG,EAAEi8C,KAAKn8C,GAEV,CAED,MAAO,CACL9B,EAAG+B,EACHlW,EAAGmW,EACHqJ,IAAKxK,EAAEglD,OAAOoC,GAEjB,EAKDrmC,EAAG30B,UAAUu7D,OAAS,SAAiBxlD,GACrCpM,EAAsB,IAAfoM,EAAE21C,UACT/hD,GAAQoM,EAAEi4C,UAEV,IAAIj7C,EAAIvH,KACJ5M,EAAImX,EAAEu3C,QAGRv6C,EADiB,IAAfA,EAAE24C,SACA34C,EAAE0nD,KAAK1kD,GAEPhD,EAAEu6C,QAQR,IALA,IAuCI3/C,EAvCA6tD,EAAK,IAAI7mC,EAAG,GACZ/J,EAAK,IAAI+J,EAAG,GAEZ9D,EAAQjyB,EAAE0uD,QAEPv6C,EAAE0oD,KAAK,GAAK,GAAK78D,EAAE68D,KAAK,GAAK,GAAG,CACrC,IAAK,IAAIt3D,EAAI,EAAGi3D,EAAK,EAAyB,KAArBroD,EAAE44C,MAAM,GAAKyP,IAAaj3D,EAAI,KAAMA,EAAGi3D,IAAO,GACvE,GAAIj3D,EAAI,EAEN,IADA4O,EAAEimD,OAAO70D,GACFA,KAAM,GACPq3D,EAAGH,SACLG,EAAGzK,KAAKlgC,GAGV2qC,EAAGxC,OAAO,GAId,IAAK,IAAIx7C,EAAI,EAAG89C,EAAK,EAAyB,KAArB18D,EAAE+sD,MAAM,GAAK2P,IAAa99C,EAAI,KAAMA,EAAG89C,IAAO,GACvE,GAAI99C,EAAI,EAEN,IADA5e,EAAEo6D,OAAOx7C,GACFA,KAAM,GACPoN,EAAGywC,SACLzwC,EAAGmmC,KAAKlgC,GAGVjG,EAAGouC,OAAO,GAIVjmD,EAAEw5C,IAAI3tD,IAAM,GACdmU,EAAEi+C,KAAKpyD,GACP48D,EAAGxK,KAAKpmC,KAERhsB,EAAEoyD,KAAKj+C,GACP6X,EAAGomC,KAAKwK,GAEX,CAaD,OATE7tD,EADgB,IAAdoF,EAAE0oD,KAAK,GACHD,EAEA5wC,GAGA6wC,KAAK,GAAK,GAChB9tD,EAAIojD,KAAKh7C,GAGJpI,CACR,EAEDgnB,EAAG30B,UAAUoe,IAAM,SAAcjG,GAC/B,GAAI3M,KAAKwiD,SAAU,OAAO71C,EAAIf,MAC9B,GAAIe,EAAI61C,SAAU,OAAOxiD,KAAK4L,MAE9B,IAAIrE,EAAIvH,KAAK8hD,QACT1uD,EAAIuZ,EAAIm1C,QACZv6C,EAAE24C,SAAW,EACb9sD,EAAE8sD,SAAW,EAGb,IAAK,IAAIlmD,EAAQ,EAAGuN,EAAEkoD,UAAYr8D,EAAEq8D,SAAUz1D,IAC5CuN,EAAEimD,OAAO,GACTp6D,EAAEo6D,OAAO,GAGX,OAAG,CACD,KAAOjmD,EAAEkoD,UACPloD,EAAEimD,OAAO,GAEX,KAAOp6D,EAAEq8D,UACPr8D,EAAEo6D,OAAO,GAGX,IAAIh/C,EAAIjH,EAAEw5C,IAAI3tD,GACd,GAAIob,EAAI,EAAG,CAET,IAAIlG,EAAIf,EACRA,EAAInU,EACJA,EAAIkV,CACL,MAAM,GAAU,IAANkG,GAAyB,IAAdpb,EAAE68D,KAAK,GAC3B,MAGF1oD,EAAEi+C,KAAKpyD,EACR,CAED,OAAOA,EAAEg6D,OAAOpzD,EACjB,EAGDmvB,EAAG30B,UAAU07D,KAAO,SAAevjD,GACjC,OAAO3M,KAAKuvD,KAAK5iD,GAAKpF,EAAE0nD,KAAKtiD,EAC9B,EAEDwc,EAAG30B,UAAUi7D,OAAS,WACpB,OAA+B,KAAP,EAAhBzvD,KAAKmgD,MAAM,GACpB,EAEDh3B,EAAG30B,UAAUq7D,MAAQ,WACnB,OAA+B,KAAP,EAAhB7vD,KAAKmgD,MAAM,GACpB,EAGDh3B,EAAG30B,UAAU66D,MAAQ,SAAgB1iD,GACnC,OAAO3M,KAAKmgD,MAAM,GAAKxzC,CACxB,EAGDwc,EAAG30B,UAAU27D,MAAQ,SAAgB9K,GACnClnD,EAAsB,kBAARknD,GACd,IAAI72C,EAAI62C,EAAM,GACVtiD,GAAKsiD,EAAM72C,GAAK,GAChBkE,EAAI,GAAKlE,EAGb,GAAIxO,KAAKpM,QAAUmP,EAGjB,OAFA/C,KAAK+hD,QAAQh/C,EAAI,GACjB/C,KAAKmgD,MAAMp9C,IAAM2P,EACV1S,KAKT,IADA,IAAI++C,EAAQrsC,EACH/Z,EAAIoK,EAAa,IAAVg8C,GAAepmD,EAAIqH,KAAKpM,OAAQ+E,IAAK,CACnD,IAAI2oD,EAAoB,EAAhBthD,KAAKmgD,MAAMxnD,GAEnBomD,GADAuC,GAAKvC,KACS,GACduC,GAAK,SACLthD,KAAKmgD,MAAMxnD,GAAK2oD,CACjB,CAKD,OAJc,IAAVvC,IACF/+C,KAAKmgD,MAAMxnD,GAAKomD,EAChB/+C,KAAKpM,UAEAoM,IACR,EAEDmpB,EAAG30B,UAAUguD,OAAS,WACpB,OAAuB,IAAhBxiD,KAAKpM,QAAkC,IAAlBoM,KAAKmgD,MAAM,EACxC,EAEDh3B,EAAG30B,UAAUy7D,KAAO,SAAetjD,GACjC,IAOIxK,EAPA+9C,EAAWvzC,EAAM,EAErB,GAAsB,IAAlB3M,KAAKkgD,WAAmBA,EAAU,OAAQ,EAC9C,GAAsB,IAAlBlgD,KAAKkgD,UAAkBA,EAAU,OAAO,EAK5C,GAHAlgD,KAAKwhD,SAGDxhD,KAAKpM,OAAS,EAChBuO,EAAM,MACD,CACD+9C,IACFvzC,GAAOA,GAGTxO,EAAOwO,GAAO,SAAW,qBAEzB,IAAI20C,EAAoB,EAAhBthD,KAAKmgD,MAAM,GACnBh+C,EAAMm/C,IAAM30C,EAAM,EAAI20C,EAAI30C,GAAO,EAAI,CACtC,CACD,OAAsB,IAAlB3M,KAAKkgD,SAA8B,GAAN/9C,EAC1BA,CACR,EAMDgnB,EAAG30B,UAAUusD,IAAM,SAAcp0C,GAC/B,GAAsB,IAAlB3M,KAAKkgD,UAAmC,IAAjBvzC,EAAIuzC,SAAgB,OAAQ,EACvD,GAAsB,IAAlBlgD,KAAKkgD,UAAmC,IAAjBvzC,EAAIuzC,SAAgB,OAAO,EAEtD,IAAI/9C,EAAMnC,KAAKowD,KAAKzjD,GACpB,OAAsB,IAAlB3M,KAAKkgD,SAA8B,GAAN/9C,EAC1BA,CACR,EAGDgnB,EAAG30B,UAAU47D,KAAO,SAAezjD,GAEjC,GAAI3M,KAAKpM,OAAS+Y,EAAI/Y,OAAQ,OAAO,EACrC,GAAIoM,KAAKpM,OAAS+Y,EAAI/Y,OAAQ,OAAQ,EAGtC,IADA,IAAIuO,EAAM,EACDxJ,EAAIqH,KAAKpM,OAAS,EAAG+E,GAAK,EAAGA,IAAK,CACzC,IAAI4O,EAAoB,EAAhBvH,KAAKmgD,MAAMxnD,GACfvF,EAAmB,EAAfuZ,EAAIwzC,MAAMxnD,GAElB,GAAI4O,IAAMnU,EAAV,CACImU,EAAInU,EACN+O,GAAO,EACEoF,EAAInU,IACb+O,EAAM,GAER,KANqB,CAOtB,CACD,OAAOA,CACR,EAEDgnB,EAAG30B,UAAU67D,IAAM,SAAc1jD,GAC/B,OAA0B,IAAnB3M,KAAKiwD,KAAKtjD,EAClB,EAEDwc,EAAG30B,UAAU87D,GAAK,SAAa3jD,GAC7B,OAAyB,IAAlB3M,KAAK+gD,IAAIp0C,EACjB,EAEDwc,EAAG30B,UAAU+7D,KAAO,SAAe5jD,GACjC,OAAO3M,KAAKiwD,KAAKtjD,IAAQ,CAC1B,EAEDwc,EAAG30B,UAAUg8D,IAAM,SAAc7jD,GAC/B,OAAO3M,KAAK+gD,IAAIp0C,IAAQ,CACzB,EAEDwc,EAAG30B,UAAUi8D,IAAM,SAAc9jD,GAC/B,OAA2B,IAApB3M,KAAKiwD,KAAKtjD,EAClB,EAEDwc,EAAG30B,UAAUk8D,GAAK,SAAa/jD,GAC7B,OAA0B,IAAnB3M,KAAK+gD,IAAIp0C,EACjB,EAEDwc,EAAG30B,UAAUm8D,KAAO,SAAehkD,GACjC,OAAO3M,KAAKiwD,KAAKtjD,IAAQ,CAC1B,EAEDwc,EAAG30B,UAAUo8D,IAAM,SAAcjkD,GAC/B,OAAO3M,KAAK+gD,IAAIp0C,IAAQ,CACzB,EAEDwc,EAAG30B,UAAUq8D,IAAM,SAAclkD,GAC/B,OAA0B,IAAnB3M,KAAKiwD,KAAKtjD,EAClB,EAEDwc,EAAG30B,UAAU40B,GAAK,SAAazc,GAC7B,OAAyB,IAAlB3M,KAAK+gD,IAAIp0C,EACjB,EAMDwc,EAAGi3B,IAAM,SAAczzC,GACrB,OAAO,IAAImkD,EAAInkD,EAChB,EAEDwc,EAAG30B,UAAUu8D,MAAQ,SAAgBv3C,GAGnC,OAFArb,GAAQ6B,KAAKogD,IAAK,yCAClBjiD,EAAyB,IAAlB6B,KAAKkgD,SAAgB,iCACrB1mC,EAAIw3C,UAAUhxD,MAAMixD,UAAUz3C,EACtC,EAED2P,EAAG30B,UAAU08D,QAAU,WAErB,OADA/yD,EAAO6B,KAAKogD,IAAK,wDACVpgD,KAAKogD,IAAI+Q,YAAYnxD,KAC7B,EAEDmpB,EAAG30B,UAAUy8D,UAAY,SAAoBz3C,GAE3C,OADAxZ,KAAKogD,IAAM5mC,EACJxZ,IACR,EAEDmpB,EAAG30B,UAAU48D,SAAW,SAAmB53C,GAEzC,OADArb,GAAQ6B,KAAKogD,IAAK,yCACXpgD,KAAKixD,UAAUz3C,EACvB,EAED2P,EAAG30B,UAAU68D,OAAS,SAAiB1kD,GAErC,OADAxO,EAAO6B,KAAKogD,IAAK,sCACVpgD,KAAKogD,IAAIz8C,IAAI3D,KAAM2M,EAC3B,EAEDwc,EAAG30B,UAAU88D,QAAU,SAAkB3kD,GAEvC,OADAxO,EAAO6B,KAAKogD,IAAK,uCACVpgD,KAAKogD,IAAImF,KAAKvlD,KAAM2M,EAC5B,EAEDwc,EAAG30B,UAAU+8D,OAAS,SAAiB5kD,GAErC,OADAxO,EAAO6B,KAAKogD,IAAK,sCACVpgD,KAAKogD,IAAIqF,IAAIzlD,KAAM2M,EAC3B,EAEDwc,EAAG30B,UAAUg9D,QAAU,SAAkB7kD,GAEvC,OADAxO,EAAO6B,KAAKogD,IAAK,uCACVpgD,KAAKogD,IAAIoF,KAAKxlD,KAAM2M,EAC5B,EAEDwc,EAAG30B,UAAUi9D,OAAS,SAAiB9kD,GAErC,OADAxO,EAAO6B,KAAKogD,IAAK,sCACVpgD,KAAKogD,IAAIsR,IAAI1xD,KAAM2M,EAC3B,EAEDwc,EAAG30B,UAAUm9D,OAAS,SAAiBhlD,GAGrC,OAFAxO,EAAO6B,KAAKogD,IAAK,sCACjBpgD,KAAKogD,IAAIwR,SAAS5xD,KAAM2M,GACjB3M,KAAKogD,IAAIQ,IAAI5gD,KAAM2M,EAC3B,EAEDwc,EAAG30B,UAAUq9D,QAAU,SAAkBllD,GAGvC,OAFAxO,EAAO6B,KAAKogD,IAAK,sCACjBpgD,KAAKogD,IAAIwR,SAAS5xD,KAAM2M,GACjB3M,KAAKogD,IAAI6I,KAAKjpD,KAAM2M,EAC5B,EAEDwc,EAAG30B,UAAUs9D,OAAS,WAGpB,OAFA3zD,EAAO6B,KAAKogD,IAAK,sCACjBpgD,KAAKogD,IAAI2R,SAAS/xD,MACXA,KAAKogD,IAAI6M,IAAIjtD,KACrB,EAEDmpB,EAAG30B,UAAUw9D,QAAU,WAGrB,OAFA7zD,EAAO6B,KAAKogD,IAAK,uCACjBpgD,KAAKogD,IAAI2R,SAAS/xD,MACXA,KAAKogD,IAAI8M,KAAKltD,KACtB,EAGDmpB,EAAG30B,UAAUy9D,QAAU,WAGrB,OAFA9zD,EAAO6B,KAAKogD,IAAK,uCACjBpgD,KAAKogD,IAAI2R,SAAS/xD,MACXA,KAAKogD,IAAI8R,KAAKlyD,KACtB,EAEDmpB,EAAG30B,UAAU29D,QAAU,WAGrB,OAFAh0D,EAAO6B,KAAKogD,IAAK,uCACjBpgD,KAAKogD,IAAI2R,SAAS/xD,MACXA,KAAKogD,IAAI8P,KAAKlwD,KACtB,EAGDmpB,EAAG30B,UAAU49D,OAAS,WAGpB,OAFAj0D,EAAO6B,KAAKogD,IAAK,sCACjBpgD,KAAKogD,IAAI2R,SAAS/xD,MACXA,KAAKogD,IAAIiE,IAAIrkD,KACrB,EAEDmpB,EAAG30B,UAAU69D,OAAS,SAAiB1lD,GAGrC,OAFAxO,EAAO6B,KAAKogD,MAAQzzC,EAAIyzC,IAAK,qBAC7BpgD,KAAKogD,IAAI2R,SAAS/xD,MACXA,KAAKogD,IAAI7pD,IAAIyJ,KAAM2M,EAC3B,EAGD,IAAI2lD,EAAS,CACXC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,MAIV,SAASC,EAAQ/9D,EAAM2V,GAErBvK,KAAKpL,KAAOA,EACZoL,KAAKuK,EAAI,IAAI4e,EAAG5e,EAAG,IACnBvK,KAAKlC,EAAIkC,KAAKuK,EAAEk5C,YAChBzjD,KAAK4V,EAAI,IAAIuT,EAAG,GAAGikC,OAAOptD,KAAKlC,GAAG0nD,KAAKxlD,KAAKuK,GAE5CvK,KAAKQ,IAAMR,KAAK4yD,MACjB,CAgDD,SAASC,IACPF,EAAOx3D,KACL6E,KACA,OACA,0EACH,CA8DD,SAAS8yD,IACPH,EAAOx3D,KACL6E,KACA,OACA,iEACH,CAGD,SAAS+yD,IACPJ,EAAOx3D,KACL6E,KACA,OACA,wDACH,CAGD,SAASgzD,IAEPL,EAAOx3D,KACL6E,KACA,QACA,sEACH,CA6CD,SAAS8wD,EAAKn+C,GACZ,GAAiB,kBAANA,EAAgB,CACzB,IAAIsgD,EAAQ9pC,EAAG+pC,OAAOvgD,GACtB3S,KAAK2S,EAAIsgD,EAAM1oD,EACfvK,KAAKizD,MAAQA,CACd,MACC90D,EAAOwU,EAAE09C,IAAI,GAAI,kCACjBrwD,KAAK2S,EAAIA,EACT3S,KAAKizD,MAAQ,IAEhB,CAkOD,SAASE,EAAMxgD,GACbm+C,EAAI31D,KAAK6E,KAAM2S,GAEf3S,KAAKhG,MAAQgG,KAAK2S,EAAE8wC,YAChBzjD,KAAKhG,MAAQ,KAAO,IACtBgG,KAAKhG,OAAS,GAAMgG,KAAKhG,MAAQ,IAGnCgG,KAAKwO,EAAI,IAAI2a,EAAG,GAAGikC,OAAOptD,KAAKhG,OAC/BgG,KAAK2P,GAAK3P,KAAKozD,KAAKpzD,KAAKwO,EAAEy+C,OAC3BjtD,KAAKwjB,KAAOxjB,KAAKwO,EAAEuhD,OAAO/vD,KAAK2S,GAE/B3S,KAAKqzD,KAAOrzD,KAAKwjB,KAAKo9B,IAAI5gD,KAAKwO,GAAG2/C,MAAM,GAAGU,IAAI7uD,KAAK2S,GACpD3S,KAAKqzD,KAAOrzD,KAAKqzD,KAAKpE,KAAKjvD,KAAKwO,GAChCxO,KAAKqzD,KAAOrzD,KAAKwO,EAAEi3C,IAAIzlD,KAAKqzD,KAC7B,CA/aDV,EAAOn+D,UAAUo+D,KAAO,WACtB,IAAIpyD,EAAM,IAAI2oB,EAAG,MAEjB,OADA3oB,EAAI2/C,MAAQ,IAAIhnD,MAAMhE,KAAKwmC,KAAK37B,KAAKlC,EAAI,KAClC0C,CACR,EAEDmyD,EAAOn+D,UAAU8+D,QAAU,SAAkB3mD,GAG3C,IACI4mD,EADA/kD,EAAI7B,EAGR,GACE3M,KAAKlJ,MAAM0X,EAAGxO,KAAKQ,KAGnB+yD,GADA/kD,GADAA,EAAIxO,KAAKwzD,MAAMhlD,IACT+2C,KAAKvlD,KAAKQ,MACPijD,kBACF8P,EAAOvzD,KAAKlC,GAErB,IAAIijD,EAAMwS,EAAOvzD,KAAKlC,GAAK,EAAI0Q,EAAE4hD,KAAKpwD,KAAKuK,GAgB3C,OAfY,IAARw2C,GACFvyC,EAAE2xC,MAAM,GAAK,EACb3xC,EAAE5a,OAAS,GACFmtD,EAAM,EACfvyC,EAAEg3C,KAAKxlD,KAAKuK,QAEIjR,IAAZkV,EAAEilD,MAEJjlD,EAAEilD,QAGFjlD,EAAEgzC,SAIChzC,CACR,EAEDmkD,EAAOn+D,UAAUsC,MAAQ,SAAgB+hB,EAAO/Z,GAC9C+Z,EAAM20C,OAAOxtD,KAAKlC,EAAG,EAAGgB,EACzB,EAED6zD,EAAOn+D,UAAUg/D,MAAQ,SAAgB7mD,GACvC,OAAOA,EAAIs8C,KAAKjpD,KAAK4V,EACtB,EAQD+pC,EAASkT,EAAMF,GAEfE,EAAKr+D,UAAUsC,MAAQ,SAAgB+hB,EAAOha,GAK5C,IAHA,IAAIyM,EAAO,QAEPooD,EAASv+D,KAAK4J,IAAI8Z,EAAMjlB,OAAQ,GAC3B+E,EAAI,EAAGA,EAAI+6D,EAAQ/6D,IAC1BkG,EAAOshD,MAAMxnD,GAAKkgB,EAAMsnC,MAAMxnD,GAIhC,GAFAkG,EAAOjL,OAAS8/D,EAEZ76C,EAAMjlB,QAAU,EAGlB,OAFAilB,EAAMsnC,MAAM,GAAK,OACjBtnC,EAAMjlB,OAAS,GAKjB,IAAI+/D,EAAO96C,EAAMsnC,MAAM,GAGvB,IAFAthD,EAAOshD,MAAMthD,EAAOjL,UAAY+/D,EAAOroD,EAElC3S,EAAI,GAAIA,EAAIkgB,EAAMjlB,OAAQ+E,IAAK,CAClC,IAAImgB,EAAwB,EAAjBD,EAAMsnC,MAAMxnD,GACvBkgB,EAAMsnC,MAAMxnD,EAAI,KAAQmgB,EAAOxN,IAAS,EAAMqoD,IAAS,GACvDA,EAAO76C,CACR,CACD66C,KAAU,GACV96C,EAAMsnC,MAAMxnD,EAAI,IAAMg7D,EACT,IAATA,GAAc96C,EAAMjlB,OAAS,GAC/BilB,EAAMjlB,QAAU,GAEhBilB,EAAMjlB,QAAU,CAEnB,EAEDi/D,EAAKr+D,UAAUg/D,MAAQ,SAAgB7mD,GAErCA,EAAIwzC,MAAMxzC,EAAI/Y,QAAU,EACxB+Y,EAAIwzC,MAAMxzC,EAAI/Y,OAAS,GAAK,EAC5B+Y,EAAI/Y,QAAU,EAId,IADA,IAAIiB,EAAK,EACA8D,EAAI,EAAGA,EAAIgU,EAAI/Y,OAAQ+E,IAAK,CACnC,IAAI2oD,EAAmB,EAAf30C,EAAIwzC,MAAMxnD,GAClB9D,GAAU,IAAJysD,EACN30C,EAAIwzC,MAAMxnD,GAAU,SAAL9D,EACfA,EAAS,GAAJysD,GAAazsD,EAAK,SAAa,EACrC,CASD,OANkC,IAA9B8X,EAAIwzC,MAAMxzC,EAAI/Y,OAAS,KACzB+Y,EAAI/Y,SAC8B,IAA9B+Y,EAAIwzC,MAAMxzC,EAAI/Y,OAAS,IACzB+Y,EAAI/Y,UAGD+Y,CACR,EAQDgzC,EAASmT,EAAMH,GAQfhT,EAASoT,EAAMJ,GASfhT,EAASqT,EAAQL,GAEjBK,EAAOx+D,UAAUg/D,MAAQ,SAAgB7mD,GAGvC,IADA,IAAIoyC,EAAQ,EACHpmD,EAAI,EAAGA,EAAIgU,EAAI/Y,OAAQ+E,IAAK,CACnC,IAAI+qD,EAA0B,IAAL,EAAf/2C,EAAIwzC,MAAMxnD,IAAiBomD,EACjClqD,EAAU,SAAL6uD,EACTA,KAAQ,GAER/2C,EAAIwzC,MAAMxnD,GAAK9D,EACfkqD,EAAQ2E,CACT,CAID,OAHc,IAAV3E,IACFpyC,EAAIwzC,MAAMxzC,EAAI/Y,UAAYmrD,GAErBpyC,CACR,EAGDwc,EAAG+pC,OAAS,SAAgBt+D,GAE1B,GAAI09D,EAAO19D,GAAO,OAAO09D,EAAO19D,GAEhC,IAAIq+D,EACJ,GAAa,SAATr+D,EACFq+D,EAAQ,IAAIJ,OACP,GAAa,SAATj+D,EACTq+D,EAAQ,IAAIH,OACP,GAAa,SAATl+D,EACTq+D,EAAQ,IAAIF,MACP,IAAa,WAATn+D,EAGT,MAAM,IAAIG,MAAM,iBAAmBH,GAFnCq+D,EAAQ,IAAID,CAGb,CAGD,OAFAV,EAAO19D,GAAQq+D,EAERA,CACR,EAiBDnC,EAAIt8D,UAAUu9D,SAAW,SAAmBxqD,GAC1CpJ,EAAsB,IAAfoJ,EAAE24C,SAAgB,iCACzB/hD,EAAOoJ,EAAE64C,IAAK,kCACf,EAED0Q,EAAIt8D,UAAUo9D,SAAW,SAAmBrqD,EAAGnU,GAC7C+K,EAAqC,KAA7BoJ,EAAE24C,SAAW9sD,EAAE8sD,UAAiB,iCACxC/hD,EAAOoJ,EAAE64C,KAAO74C,EAAE64C,MAAQhtD,EAAEgtD,IAC1B,kCACH,EAED0Q,EAAIt8D,UAAU4+D,KAAO,SAAe7rD,GAClC,OAAIvH,KAAKizD,MAAcjzD,KAAKizD,MAAMK,QAAQ/rD,GAAG0pD,UAAUjxD,OAEvD6gD,EAAKt5C,EAAGA,EAAE0nD,KAAKjvD,KAAK2S,GAAGs+C,UAAUjxD,OAC1BuH,EACR,EAEDupD,EAAIt8D,UAAU6vD,IAAM,SAAc98C,GAChC,OAAIA,EAAEi7C,SACGj7C,EAAEu6C,QAGJ9hD,KAAK2S,EAAE8yC,IAAIl+C,GAAG0pD,UAAUjxD,KAChC,EAED8wD,EAAIt8D,UAAUmP,IAAM,SAAc4D,EAAGnU,GACnC4M,KAAK4xD,SAASrqD,EAAGnU,GAEjB,IAAI+O,EAAMoF,EAAE5D,IAAIvQ,GAIhB,OAHI+O,EAAI4+C,IAAI/gD,KAAK2S,IAAM,GACrBxQ,EAAIqjD,KAAKxlD,KAAK2S,GAETxQ,EAAI8uD,UAAUjxD,KACtB,EAED8wD,EAAIt8D,UAAU+wD,KAAO,SAAeh+C,EAAGnU,GACrC4M,KAAK4xD,SAASrqD,EAAGnU,GAEjB,IAAI+O,EAAMoF,EAAEg+C,KAAKnyD,GAIjB,OAHI+O,EAAI4+C,IAAI/gD,KAAK2S,IAAM,GACrBxQ,EAAIqjD,KAAKxlD,KAAK2S,GAETxQ,CACR,EAED2uD,EAAIt8D,UAAUixD,IAAM,SAAcl+C,EAAGnU,GACnC4M,KAAK4xD,SAASrqD,EAAGnU,GAEjB,IAAI+O,EAAMoF,EAAEk+C,IAAIryD,GAIhB,OAHI+O,EAAI8tD,KAAK,GAAK,GAChB9tD,EAAIojD,KAAKvlD,KAAK2S,GAETxQ,EAAI8uD,UAAUjxD,KACtB,EAED8wD,EAAIt8D,UAAUgxD,KAAO,SAAej+C,EAAGnU,GACrC4M,KAAK4xD,SAASrqD,EAAGnU,GAEjB,IAAI+O,EAAMoF,EAAEi+C,KAAKpyD,GAIjB,OAHI+O,EAAI8tD,KAAK,GAAK,GAChB9tD,EAAIojD,KAAKvlD,KAAK2S,GAETxQ,CACR,EAED2uD,EAAIt8D,UAAUk9D,IAAM,SAAcnqD,EAAGoF,GAEnC,OADA3M,KAAK+xD,SAASxqD,GACPvH,KAAKozD,KAAK7rD,EAAEumD,MAAMnhD,GAC1B,EAEDmkD,EAAIt8D,UAAUy0D,KAAO,SAAe1hD,EAAGnU,GAErC,OADA4M,KAAK4xD,SAASrqD,EAAGnU,GACV4M,KAAKozD,KAAK7rD,EAAE0hD,KAAK71D,GACzB,EAED09D,EAAIt8D,UAAUosD,IAAM,SAAcr5C,EAAGnU,GAEnC,OADA4M,KAAK4xD,SAASrqD,EAAGnU,GACV4M,KAAKozD,KAAK7rD,EAAEq5C,IAAIxtD,GACxB,EAED09D,EAAIt8D,UAAU04D,KAAO,SAAe3lD,GAClC,OAAOvH,KAAKipD,KAAK1hD,EAAGA,EAAEu6C,QACvB,EAEDgP,EAAIt8D,UAAUy4D,IAAM,SAAc1lD,GAChC,OAAOvH,KAAK4gD,IAAIr5C,EAAGA,EACpB,EAEDupD,EAAIt8D,UAAU09D,KAAO,SAAe3qD,GAClC,GAAIA,EAAEi7C,SAAU,OAAOj7C,EAAEu6C,QAEzB,IAAI8R,EAAO5zD,KAAK2S,EAAE08C,MAAM,GAIxB,GAHAlxD,EAAOy1D,EAAO,IAAM,GAGP,IAATA,EAAY,CACd,IAAIr9D,EAAMyJ,KAAK2S,EAAEhP,IAAI,IAAIwlB,EAAG,IAAIqkC,OAAO,GACvC,OAAOxtD,KAAKzJ,IAAIgR,EAAGhR,EACpB,CAOD,IAFA,IAAImc,EAAI1S,KAAK2S,EAAE07C,KAAK,GAChBtrD,EAAI,GACA2P,EAAE8vC,UAA2B,IAAf9vC,EAAE28C,MAAM,IAC5BtsD,IACA2P,EAAE86C,OAAO,GAEXrvD,GAAQuU,EAAE8vC,UAEV,IAAIr0C,EAAM,IAAIgb,EAAG,GAAG4nC,MAAM/wD,MACtB6zD,EAAO1lD,EAAIikD,SAIX0B,EAAO9zD,KAAK2S,EAAE07C,KAAK,GAAGb,OAAO,GAC7BnlD,EAAIrI,KAAK2S,EAAE8wC,YAGf,IAFAp7C,EAAI,IAAI8gB,EAAG,EAAI9gB,EAAIA,GAAG0oD,MAAM/wD,MAEW,IAAhCA,KAAKzJ,IAAI8R,EAAGyrD,GAAM/S,IAAI8S,IAC3BxrD,EAAEipD,QAAQuC,GAOZ,IAJA,IAAInlD,EAAI1O,KAAKzJ,IAAI8R,EAAGqK,GAChBlE,EAAIxO,KAAKzJ,IAAIgR,EAAGmL,EAAE07C,KAAK,GAAGZ,OAAO,IACjCllD,EAAItI,KAAKzJ,IAAIgR,EAAGmL,GAChBC,EAAI5P,EACc,IAAfuF,EAAEy4C,IAAI5yC,IAAY,CAEvB,IADA,IAAI3N,EAAM8H,EACD3P,EAAI,EAAoB,IAAjB6H,EAAIugD,IAAI5yC,GAAYxV,IAClC6H,EAAMA,EAAIsxD,SAEZ3zD,EAAOxF,EAAIga,GACX,IAAIvf,EAAI4M,KAAKzJ,IAAImY,EAAG,IAAIya,EAAG,GAAGikC,OAAOz6C,EAAIha,EAAI,IAE7C6V,EAAIA,EAAEmjD,OAAOv+D,GACbsb,EAAItb,EAAE0+D,SACNxpD,EAAIA,EAAEqpD,OAAOjjD,GACbiE,EAAIha,CACL,CAED,OAAO6V,CACR,EAEDsiD,EAAIt8D,UAAU07D,KAAO,SAAe3oD,GAClC,IAAIwsD,EAAMxsD,EAAEwoD,OAAO/vD,KAAK2S,GACxB,OAAqB,IAAjBohD,EAAI7T,UACN6T,EAAI7T,SAAW,EACRlgD,KAAKozD,KAAKW,GAAK3B,UAEfpyD,KAAKozD,KAAKW,EAEpB,EAEDjD,EAAIt8D,UAAU+B,IAAM,SAAcgR,EAAGoF,GACnC,GAAIA,EAAI61C,SAAU,OAAO,IAAIr5B,EAAG,GAAG4nC,MAAM/wD,MACzC,GAAoB,IAAhB2M,EAAIsjD,KAAK,GAAU,OAAO1oD,EAAEu6C,QAEhC,IACIkS,EAAM,IAAI76D,MAAM,IACpB66D,EAAI,GAAK,IAAI7qC,EAAG,GAAG4nC,MAAM/wD,MACzBg0D,EAAI,GAAKzsD,EACT,IAAK,IAAI5O,EAAI,EAAGA,EAAIq7D,EAAIpgE,OAAQ+E,IAC9Bq7D,EAAIr7D,GAAKqH,KAAK4gD,IAAIoT,EAAIr7D,EAAI,GAAI4O,GAGhC,IAAIpF,EAAM6xD,EAAI,GACVxtB,EAAU,EACVytB,EAAa,EACbp3D,EAAQ8P,EAAI82C,YAAc,GAK9B,IAJc,IAAV5mD,IACFA,EAAQ,IAGLlE,EAAIgU,EAAI/Y,OAAS,EAAG+E,GAAK,EAAGA,IAAK,CAEpC,IADA,IAAIoD,EAAO4Q,EAAIwzC,MAAMxnD,GACZqZ,EAAInV,EAAQ,EAAGmV,GAAK,EAAGA,IAAK,CACnC,IAAIqzC,EAAOtpD,GAAQiW,EAAK,EACpB7P,IAAQ6xD,EAAI,KACd7xD,EAAMnC,KAAKitD,IAAI9qD,IAGL,IAARkjD,GAAyB,IAAZ7e,GAKjBA,IAAY,EACZA,GAAW6e,GA9BE,MA+Bb4O,GACwC,IAANt7D,GAAiB,IAANqZ,KAE7C7P,EAAMnC,KAAK4gD,IAAIz+C,EAAK6xD,EAAIxtB,IACxBytB,EAAa,EACbztB,EAAU,IAXRytB,EAAa,CAYhB,CACDp3D,EAAQ,EACT,CAED,OAAOsF,CACR,EAED2uD,EAAIt8D,UAAUw8D,UAAY,SAAoBrkD,GAC5C,IAAI6B,EAAI7B,EAAIsiD,KAAKjvD,KAAK2S,GAEtB,OAAOnE,IAAM7B,EAAM6B,EAAEszC,QAAUtzC,CAChC,EAEDsiD,EAAIt8D,UAAU28D,YAAc,SAAsBxkD,GAChD,IAAIxK,EAAMwK,EAAIm1C,QAEd,OADA3/C,EAAIi+C,IAAM,KACHj+C,CACR,EAMDgnB,EAAG+qC,KAAO,SAAevnD,GACvB,OAAO,IAAIwmD,EAAKxmD,EACjB,EAkBDgzC,EAASwT,EAAMrC,GAEfqC,EAAK3+D,UAAUw8D,UAAY,SAAoBrkD,GAC7C,OAAO3M,KAAKozD,KAAKzmD,EAAImhD,MAAM9tD,KAAKhG,OACjC,EAEDm5D,EAAK3+D,UAAU28D,YAAc,SAAsBxkD,GACjD,IAAI6B,EAAIxO,KAAKozD,KAAKzmD,EAAIi0C,IAAI5gD,KAAKwjB,OAE/B,OADAhV,EAAE4xC,IAAM,KACD5xC,CACR,EAED2kD,EAAK3+D,UAAUy0D,KAAO,SAAe1hD,EAAGnU,GACtC,GAAImU,EAAEi7C,UAAYpvD,EAAEovD,SAGlB,OAFAj7C,EAAE44C,MAAM,GAAK,EACb54C,EAAE3T,OAAS,EACJ2T,EAGT,IAAIe,EAAIf,EAAE0hD,KAAK71D,GACXsb,EAAIpG,EAAE4lD,MAAMluD,KAAKhG,OAAO4mD,IAAI5gD,KAAKqzD,MAAMpF,OAAOjuD,KAAKhG,OAAO4mD,IAAI5gD,KAAK2S,GACnE9B,EAAIvI,EAAEk9C,KAAK92C,GAAG8+C,OAAOxtD,KAAKhG,OAC1BmI,EAAM0O,EAQV,OANIA,EAAEkwC,IAAI/gD,KAAK2S,IAAM,EACnBxQ,EAAM0O,EAAE20C,KAAKxlD,KAAK2S,GACT9B,EAAEo/C,KAAK,GAAK,IACrB9tD,EAAM0O,EAAE00C,KAAKvlD,KAAK2S,IAGbxQ,EAAI8uD,UAAUjxD,KACtB,EAEDmzD,EAAK3+D,UAAUosD,IAAM,SAAcr5C,EAAGnU,GACpC,GAAImU,EAAEi7C,UAAYpvD,EAAEovD,SAAU,OAAO,IAAIr5B,EAAG,GAAG8nC,UAAUjxD,MAEzD,IAAIsI,EAAIf,EAAEq5C,IAAIxtD,GACVsb,EAAIpG,EAAE4lD,MAAMluD,KAAKhG,OAAO4mD,IAAI5gD,KAAKqzD,MAAMpF,OAAOjuD,KAAKhG,OAAO4mD,IAAI5gD,KAAK2S,GACnE9B,EAAIvI,EAAEk9C,KAAK92C,GAAG8+C,OAAOxtD,KAAKhG,OAC1BmI,EAAM0O,EAOV,OANIA,EAAEkwC,IAAI/gD,KAAK2S,IAAM,EACnBxQ,EAAM0O,EAAE20C,KAAKxlD,KAAK2S,GACT9B,EAAEo/C,KAAK,GAAK,IACrB9tD,EAAM0O,EAAE00C,KAAKvlD,KAAK2S,IAGbxQ,EAAI8uD,UAAUjxD,KACtB,EAEDmzD,EAAK3+D,UAAU07D,KAAO,SAAe3oD,GAGnC,OADUvH,KAAKozD,KAAK7rD,EAAEwoD,OAAO/vD,KAAK2S,GAAGiuC,IAAI5gD,KAAK2P,KACnCshD,UAAUjxD,KACtB,CAz9GH,aA09G4CA,6BC19G5C,IAAIm0D,EAAQjW,EAAQ,OAGpBC,EAAOvgD,QAAUu2D,EAFF,oMCSTC,EAASlW,EAAQ,MACjBmW,EAAUnW,EAAQ,OAClBoW,EACe,oBAAX/7C,QAAkD,oBAAlBA,OAAM,IAC1CA,OAAM,IAAQ,8BACd,KAEN3a,EAAQ,GAAS0qB,EAEjB1qB,EAAQ,GAAoB,GAE5B,IAAM22D,EAAe,WAwDrB,SAASC,EAAc5gE,GACrB,GAAIA,EAAS2gE,EACX,MAAM,IAAIpgE,WAAW,cAAgBP,EAAS,kCAGhD,IAAMirB,EAAM,IAAIxrB,WAAWO,GAE3B,OADAS,OAAOogE,eAAe51C,EAAKyJ,EAAO9zB,WAC3BqqB,CACR,CAYD,SAASyJ,EAAQynB,EAAK2kB,EAAkB9gE,GAEtC,GAAmB,kBAARm8C,EAAkB,CAC3B,GAAgC,kBAArB2kB,EACT,MAAM,IAAIphE,UACR,sEAGJ,OAAO6rD,EAAYpP,EACpB,CACD,OAAOt8C,EAAKs8C,EAAK2kB,EAAkB9gE,EACpC,CAID,SAASH,EAAMwI,EAAOy4D,EAAkB9gE,GACtC,GAAqB,kBAAVqI,EACT,OAqHJ,SAAqBqf,EAAQ+0B,GACH,kBAAbA,GAAsC,KAAbA,IAClCA,EAAW,QAGb,IAAK/nB,EAAOqsC,WAAWtkB,GACrB,MAAM,IAAI/8C,UAAU,qBAAuB+8C,GAG7C,IAAMz8C,EAAwC,EAA/ByL,EAAWic,EAAQ+0B,GAC9BxxB,EAAM21C,EAAa5gE,GAEjBghE,EAAS/1C,EAAI1hB,MAAMme,EAAQ+0B,GAE7BukB,IAAWhhE,IAIbirB,EAAMA,EAAI5hB,MAAM,EAAG23D,IAGrB,OAAO/1C,CACR,CA3IUg2C,CAAW54D,EAAOy4D,GAG3B,GAAII,YAAYC,OAAO94D,GACrB,OAkJJ,SAAwB+4D,GACtB,GAAIC,GAAWD,EAAW3hE,YAAa,CACrC,IAAMmK,EAAO,IAAInK,WAAW2hE,GAC5B,OAAOE,EAAgB13D,EAAK9J,OAAQ8J,EAAK7J,WAAY6J,EAAK6B,WAC3D,CACD,OAAO81D,EAAcH,EACtB,CAxJUI,CAAcn5D,GAGvB,GAAa,MAATA,EACF,MAAM,IAAI3I,UACR,yHACiD2I,GAIrD,GAAIg5D,GAAWh5D,EAAO64D,cACjB74D,GAASg5D,GAAWh5D,EAAMvI,OAAQohE,aACrC,OAAOI,EAAgBj5D,EAAOy4D,EAAkB9gE,GAGlD,GAAiC,qBAAtByhE,oBACNJ,GAAWh5D,EAAOo5D,oBAClBp5D,GAASg5D,GAAWh5D,EAAMvI,OAAQ2hE,oBACrC,OAAOH,EAAgBj5D,EAAOy4D,EAAkB9gE,GAGlD,GAAqB,kBAAVqI,EACT,MAAM,IAAI3I,UACR,yEAIJ,IAAMgiE,EAAUr5D,EAAMq5D,SAAWr5D,EAAMq5D,UACvC,GAAe,MAAXA,GAAmBA,IAAYr5D,EACjC,OAAOqsB,EAAO70B,KAAK6hE,EAASZ,EAAkB9gE,GAGhD,IAAMR,EAkJR,SAAqBypC,GACnB,GAAIvU,EAAO82B,SAASviB,GAAM,CACxB,IAAM/7B,EAA4B,EAAtBy0D,EAAQ14B,EAAIjpC,QAClBirB,EAAM21C,EAAa1zD,GAEzB,OAAmB,IAAf+d,EAAIjrB,QAIRipC,EAAIr/B,KAAKqhB,EAAK,EAAG,EAAG/d,GAHX+d,CAKV,CAED,QAAmBvlB,IAAfujC,EAAIjpC,OACN,MAA0B,kBAAfipC,EAAIjpC,QAAuB4hE,GAAY34B,EAAIjpC,QAC7C4gE,EAAa,GAEfW,EAAct4B,GAGvB,GAAiB,WAAbA,EAAIzjB,MAAqBjgB,MAAMC,QAAQyjC,EAAIl9B,MAC7C,OAAOw1D,EAAct4B,EAAIl9B,KAE5B,CAzKW81D,CAAWx5D,GACrB,GAAI7I,EAAG,OAAOA,EAEd,GAAsB,qBAAXmlB,QAAgD,MAAtBA,OAAOm9C,aACH,oBAA9Bz5D,EAAMsc,OAAOm9C,aACtB,OAAOptC,EAAO70B,KAAKwI,EAAMsc,OAAOm9C,aAAa,UAAWhB,EAAkB9gE,GAG5E,MAAM,IAAIN,UACR,yHACiD2I,EAEpD,CAmBD,SAAS05D,EAAY7oC,GACnB,GAAoB,kBAATA,EACT,MAAM,IAAIx5B,UAAU,0CACf,GAAIw5B,EAAO,EAChB,MAAM,IAAI34B,WAAW,cAAgB24B,EAAO,iCAE/C,CA0BD,SAASqyB,EAAaryB,GAEpB,OADA6oC,EAAW7oC,GACJ0nC,EAAa1nC,EAAO,EAAI,EAAoB,EAAhByoC,EAAQzoC,GAC5C,CAuCD,SAASqoC,EAAepjD,GAGtB,IAFA,IAAMne,EAASme,EAAMne,OAAS,EAAI,EAA4B,EAAxB2hE,EAAQxjD,EAAMne,QAC9CirB,EAAM21C,EAAa5gE,GAChB+E,EAAI,EAAGA,EAAI/E,EAAQ+E,GAAK,EAC/BkmB,EAAIlmB,GAAgB,IAAXoZ,EAAMpZ,GAEjB,OAAOkmB,CACR,CAUD,SAASq2C,EAAiBnjD,EAAOpe,EAAYC,GAC3C,GAAID,EAAa,GAAKoe,EAAM1S,WAAa1L,EACvC,MAAM,IAAIQ,WAAW,wCAGvB,GAAI4d,EAAM1S,WAAa1L,GAAcC,GAAU,GAC7C,MAAM,IAAIO,WAAW,wCAGvB,IAAI0qB,EAYJ,OAVEA,OADiBvlB,IAAf3F,QAAuC2F,IAAX1F,EACxB,IAAIP,WAAW0e,QACDzY,IAAX1F,EACH,IAAIP,WAAW0e,EAAOpe,GAEtB,IAAIN,WAAW0e,EAAOpe,EAAYC,GAI1CS,OAAOogE,eAAe51C,EAAKyJ,EAAO9zB,WAE3BqqB,CACR,CA2BD,SAAS02C,EAAS3hE,GAGhB,GAAIA,GAAU2gE,EACZ,MAAM,IAAIpgE,WAAW,0DACaogE,EAAan3D,SAAS,IAAM,UAEhE,OAAgB,EAATxJ,CACR,CAsGD,SAASyL,EAAYic,EAAQ+0B,GAC3B,GAAI/nB,EAAO82B,SAAS9jC,GAClB,OAAOA,EAAO1nB,OAEhB,GAAIkhE,YAAYC,OAAOz5C,IAAW25C,GAAW35C,EAAQw5C,aACnD,OAAOx5C,EAAOjc,WAEhB,GAAsB,kBAAXic,EACT,MAAM,IAAIhoB,UACR,kGAC0BgoB,GAI9B,IAAMxa,EAAMwa,EAAO1nB,OACbgiE,EAAaC,UAAUjiE,OAAS,IAAsB,IAAjBiiE,UAAU,GACrD,IAAKD,GAAqB,IAAR90D,EAAW,OAAO,EAIpC,IADA,IAAIg1D,GAAc,IAEhB,OAAQzlB,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOvvC,EACT,IAAK,OACL,IAAK,QACH,OAAOhB,EAAYwb,GAAQ1nB,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAANkN,EACT,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAOi1D,EAAcz6C,GAAQ1nB,OAC/B,QACE,GAAIkiE,EACF,OAAOF,GAAa,EAAI91D,EAAYwb,GAAQ1nB,OAE9Cy8C,GAAY,GAAKA,GAAU2lB,cAC3BF,GAAc,EAGrB,CAGD,SAASG,EAAc5lB,EAAUxzC,EAAO8jD,GACtC,IAAImV,GAAc,EAclB,SALcx8D,IAAVuD,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQmD,KAAKpM,OACf,MAAO,GAOT,SAJY0F,IAARqnD,GAAqBA,EAAM3gD,KAAKpM,UAClC+sD,EAAM3gD,KAAKpM,QAGT+sD,GAAO,EACT,MAAO,GAOT,IAHAA,KAAS,KACT9jD,KAAW,GAGT,MAAO,GAKT,IAFKwzC,IAAUA,EAAW,UAGxB,OAAQA,GACN,IAAK,MACH,OAAO6lB,EAASl2D,KAAMnD,EAAO8jD,GAE/B,IAAK,OACL,IAAK,QACH,OAAOwV,EAAUn2D,KAAMnD,EAAO8jD,GAEhC,IAAK,QACH,OAAOyV,EAAWp2D,KAAMnD,EAAO8jD,GAEjC,IAAK,SACL,IAAK,SACH,OAAO0V,EAAYr2D,KAAMnD,EAAO8jD,GAElC,IAAK,SACH,OAAO2V,EAAYt2D,KAAMnD,EAAO8jD,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO4V,EAAav2D,KAAMnD,EAAO8jD,GAEnC,QACE,GAAImV,EAAa,MAAM,IAAIxiE,UAAU,qBAAuB+8C,GAC5DA,GAAYA,EAAW,IAAI2lB,cAC3BF,GAAc,EAGrB,CAUD,SAASU,EAAMpjE,EAAG0K,EAAG6U,GACnB,IAAMha,EAAIvF,EAAE0K,GACZ1K,EAAE0K,GAAK1K,EAAEuf,GACTvf,EAAEuf,GAAKha,CACR,CA2ID,SAAS89D,EAAsB/iE,EAAQyjB,EAAKxjB,EAAY08C,EAAUqmB,GAEhE,GAAsB,IAAlBhjE,EAAOE,OAAc,OAAQ,EAmBjC,GAhB0B,kBAAfD,GACT08C,EAAW18C,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAc,aACvBA,GAAc,YAGZ6hE,GADJ7hE,GAAcA,KAGZA,EAAa+iE,EAAM,EAAKhjE,EAAOE,OAAS,GAItCD,EAAa,IAAGA,EAAaD,EAAOE,OAASD,GAC7CA,GAAcD,EAAOE,OAAQ,CAC/B,GAAI8iE,EAAK,OAAQ,EACZ/iE,EAAaD,EAAOE,OAAS,CACnC,MAAM,GAAID,EAAa,EAAG,CACzB,IAAI+iE,EACC,OAAQ,EADJ/iE,EAAa,CAEvB,CAQD,GALmB,kBAARwjB,IACTA,EAAMmR,EAAO70B,KAAK0jB,EAAKk5B,IAIrB/nB,EAAO82B,SAASjoC,GAElB,OAAmB,IAAfA,EAAIvjB,QACE,EAEH+iE,EAAajjE,EAAQyjB,EAAKxjB,EAAY08C,EAAUqmB,GAClD,GAAmB,kBAARv/C,EAEhB,OADAA,GAAY,IACgC,oBAAjC9jB,WAAWmB,UAAUohC,QAC1B8gC,EACKrjE,WAAWmB,UAAUohC,QAAQz6B,KAAKzH,EAAQyjB,EAAKxjB,GAE/CN,WAAWmB,UAAUoiE,YAAYz7D,KAAKzH,EAAQyjB,EAAKxjB,GAGvDgjE,EAAajjE,EAAQ,CAACyjB,GAAMxjB,EAAY08C,EAAUqmB,GAG3D,MAAM,IAAIpjE,UAAU,uCACrB,CAED,SAASqjE,EAAcx3D,EAAKgY,EAAKxjB,EAAY08C,EAAUqmB,GACrD,IA0BI/9D,EA1BAk+D,EAAY,EACZC,EAAY33D,EAAIvL,OAChBmjE,EAAY5/C,EAAIvjB,OAEpB,QAAiB0F,IAAb+2C,IAEe,UADjBA,EAAW/yC,OAAO+yC,GAAU2lB,gBACY,UAAb3lB,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAIlxC,EAAIvL,OAAS,GAAKujB,EAAIvjB,OAAS,EACjC,OAAQ,EAEVijE,EAAY,EACZC,GAAa,EACbC,GAAa,EACbpjE,GAAc,CACf,CAGH,SAASqjE,EAAMn4C,EAAKlmB,GAClB,OAAkB,IAAdk+D,EACKh4C,EAAIlmB,GAEJkmB,EAAIo4C,aAAat+D,EAAIk+D,EAE/B,CAGD,GAAIH,EAAK,CACP,IAAIQ,GAAc,EAClB,IAAKv+D,EAAIhF,EAAYgF,EAAIm+D,EAAWn+D,IAClC,GAAIq+D,EAAK73D,EAAKxG,KAAOq+D,EAAK7/C,GAAqB,IAAhB+/C,EAAoB,EAAIv+D,EAAIu+D,IAEzD,IADoB,IAAhBA,IAAmBA,EAAav+D,GAChCA,EAAIu+D,EAAa,IAAMH,EAAW,OAAOG,EAAaL,OAEtC,IAAhBK,IAAmBv+D,GAAKA,EAAIu+D,GAChCA,GAAc,CAGnB,MAEC,IADIvjE,EAAaojE,EAAYD,IAAWnjE,EAAamjE,EAAYC,GAC5Dp+D,EAAIhF,EAAYgF,GAAK,EAAGA,IAAK,CAEhC,IADA,IAAIw+D,GAAQ,EACHnlD,EAAI,EAAGA,EAAI+kD,EAAW/kD,IAC7B,GAAIglD,EAAK73D,EAAKxG,EAAIqZ,KAAOglD,EAAK7/C,EAAKnF,GAAI,CACrCmlD,GAAQ,EACR,KACD,CAEH,GAAIA,EAAO,OAAOx+D,CACnB,CAGH,OAAQ,CACT,CAcD,SAASy+D,EAAUv4C,EAAKvD,EAAQpnB,EAAQN,GACtCM,EAASF,OAAOE,IAAW,EAC3B,IAAMmjE,EAAYx4C,EAAIjrB,OAASM,EAC1BN,GAGHA,EAASI,OAAOJ,IACHyjE,IACXzjE,EAASyjE,GAJXzjE,EAASyjE,EAQX,IAKI1+D,EALE2+D,EAASh8C,EAAO1nB,OAMtB,IAJIA,EAAS0jE,EAAS,IACpB1jE,EAAS0jE,EAAS,GAGf3+D,EAAI,EAAGA,EAAI/E,IAAU+E,EAAG,CAC3B,IAAM8qC,EAAStxB,SAASmJ,EAAOo/B,OAAW,EAAJ/hD,EAAO,GAAI,IACjD,GAAI68D,GAAY/xB,GAAS,OAAO9qC,EAChCkmB,EAAI3qB,EAASyE,GAAK8qC,CACnB,CACD,OAAO9qC,CACR,CAED,SAAS4+D,EAAW14C,EAAKvD,EAAQpnB,EAAQN,GACvC,OAAO4jE,EAAW13D,EAAYwb,EAAQuD,EAAIjrB,OAASM,GAAS2qB,EAAK3qB,EAAQN,EAC1E,CAED,SAAS6jE,EAAY54C,EAAKvD,EAAQpnB,EAAQN,GACxC,OAAO4jE,EAypCT,SAAuB53D,GAErB,IADA,IAAM2xB,EAAY,GACT54B,EAAI,EAAGA,EAAIiH,EAAIhM,SAAU+E,EAEhC44B,EAAU34B,KAAyB,IAApBgH,EAAIioB,WAAWlvB,IAEhC,OAAO44B,CACR,CAhqCmBmmC,CAAap8C,GAASuD,EAAK3qB,EAAQN,EACtD,CAED,SAAS+jE,EAAa94C,EAAKvD,EAAQpnB,EAAQN,GACzC,OAAO4jE,EAAWzB,EAAcz6C,GAASuD,EAAK3qB,EAAQN,EACvD,CAED,SAASgkE,EAAW/4C,EAAKvD,EAAQpnB,EAAQN,GACvC,OAAO4jE,EA0pCT,SAAyB53D,EAAKi4D,GAG5B,IAFA,IAAInpD,EAAGg1C,EAAI7uD,EACL08B,EAAY,GACT54B,EAAI,EAAGA,EAAIiH,EAAIhM,WACjBikE,GAAS,GAAK,KADal/D,EAIhC+qD,GADAh1C,EAAI9O,EAAIioB,WAAWlvB,KACT,EACV9D,EAAK6Z,EAAI,IACT6iB,EAAU34B,KAAK/D,GACf08B,EAAU34B,KAAK8qD,GAGjB,OAAOnyB,CACR,CAxqCmBumC,CAAex8C,EAAQuD,EAAIjrB,OAASM,GAAS2qB,EAAK3qB,EAAQN,EAC7E,CA8ED,SAAS0iE,EAAaz3C,EAAKhiB,EAAO8jD,GAChC,OAAc,IAAV9jD,GAAe8jD,IAAQ9hC,EAAIjrB,OACtBwgE,EAAO2D,cAAcl5C,GAErBu1C,EAAO2D,cAAcl5C,EAAI5hB,MAAMJ,EAAO8jD,GAEhD,CAED,SAASwV,EAAWt3C,EAAKhiB,EAAO8jD,GAC9BA,EAAMxrD,KAAK4J,IAAI8f,EAAIjrB,OAAQ+sD,GAI3B,IAHA,IAAMx+C,EAAM,GAERxJ,EAAIkE,EACDlE,EAAIgoD,GAAK,CACd,IAAMqX,EAAYn5C,EAAIlmB,GAClBs/D,EAAY,KACZC,EAAoBF,EAAY,IAChC,EACCA,EAAY,IACT,EACCA,EAAY,IACT,EACA,EAEZ,GAAIr/D,EAAIu/D,GAAoBvX,EAAK,CAC/B,IAAIwX,OAAU,EAAEC,OAAS,EAAEC,OAAU,EAAEC,OAAa,EAEpD,OAAQJ,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAEd,MACF,KAAK,EAEyB,OAAV,KADlBG,EAAat5C,EAAIlmB,EAAI,OAEnB2/D,GAA6B,GAAZN,IAAqB,EAAoB,GAAbG,GACzB,MAClBF,EAAYK,GAGhB,MACF,KAAK,EACHH,EAAat5C,EAAIlmB,EAAI,GACrBy/D,EAAYv5C,EAAIlmB,EAAI,GACQ,OAAV,IAAbw/D,IAAsD,OAAV,IAAZC,KACnCE,GAA6B,GAAZN,IAAoB,IAAoB,GAAbG,IAAsB,EAAmB,GAAZC,GACrD,OAAUE,EAAgB,OAAUA,EAAgB,SACtEL,EAAYK,GAGhB,MACF,KAAK,EACHH,EAAat5C,EAAIlmB,EAAI,GACrBy/D,EAAYv5C,EAAIlmB,EAAI,GACpB0/D,EAAax5C,EAAIlmB,EAAI,GACO,OAAV,IAAbw/D,IAAsD,OAAV,IAAZC,IAAsD,OAAV,IAAbC,KAClEC,GAA6B,GAAZN,IAAoB,IAAqB,GAAbG,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAbC,GAClF,OAAUC,EAAgB,UAC5CL,EAAYK,GAIrB,CAEiB,OAAdL,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACb91D,EAAIvJ,KAAKq/D,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvB91D,EAAIvJ,KAAKq/D,GACTt/D,GAAKu/D,CACN,CAED,OAQF,SAAgCK,GAC9B,IAAMz3D,EAAMy3D,EAAW3kE,OACvB,GAAIkN,GAAO03D,EACT,OAAOl7D,OAAOm7D,aAAaC,MAAMp7D,OAAQi7D,GAI3C,IAAIp2D,EAAM,GACNxJ,EAAI,EACR,KAAOA,EAAImI,GACTqB,GAAO7E,OAAOm7D,aAAaC,MACzBp7D,OACAi7D,EAAWt7D,MAAMtE,EAAGA,GAAK6/D,IAG7B,OAAOr2D,CACR,CAxBQw2D,CAAsBx2D,EAC9B,CA39BDmmB,EAAOswC,oBAUP,WAEE,IACE,IAAMz5D,EAAM,IAAI9L,WAAW,GACrBwlE,EAAQ,CAAEC,IAAK,WAAc,OAAO,EAAI,GAG9C,OAFAzkE,OAAOogE,eAAeoE,EAAOxlE,WAAWmB,WACxCH,OAAOogE,eAAet1D,EAAK05D,GACN,KAAd15D,EAAI25D,KAGZ,CAFC,MAAOt/D,GACP,OAAO,CACR,CACF,CArB4Bu/D,GAExBzwC,EAAOswC,qBAA0C,qBAAZ7jC,SACb,oBAAlBA,QAAQva,OACjBua,QAAQva,MACN,iJAkBJnmB,OAAOo2B,eAAenC,EAAO9zB,UAAW,SAAU,CAChDwkE,YAAY,EACZh3D,IAAK,WACH,GAAKsmB,EAAO82B,SAASp/C,MACrB,OAAOA,KAAKtM,MACb,IAGHW,OAAOo2B,eAAenC,EAAO9zB,UAAW,SAAU,CAChDwkE,YAAY,EACZh3D,IAAK,WACH,GAAKsmB,EAAO82B,SAASp/C,MACrB,OAAOA,KAAKrM,UACb,IAoCH20B,EAAO2wC,SAAW,KA8DlB3wC,EAAO70B,KAAO,SAAUwI,EAAOy4D,EAAkB9gE,GAC/C,OAAOH,EAAKwI,EAAOy4D,EAAkB9gE,EACtC,EAIDS,OAAOogE,eAAensC,EAAO9zB,UAAWnB,WAAWmB,WACnDH,OAAOogE,eAAensC,EAAQj1B,YA8B9Bi1B,EAAOkE,MAAQ,SAAUM,EAAMzrB,EAAMgvC,GACnC,OArBF,SAAgBvjB,EAAMzrB,EAAMgvC,GAE1B,OADAslB,EAAW7oC,GACPA,GAAQ,EACH0nC,EAAa1nC,QAETxzB,IAAT+H,EAIyB,kBAAbgvC,EACVmkB,EAAa1nC,GAAMzrB,KAAKA,EAAMgvC,GAC9BmkB,EAAa1nC,GAAMzrB,KAAKA,GAEvBmzD,EAAa1nC,EACrB,CAOQN,CAAMM,EAAMzrB,EAAMgvC,EAC1B,EAUD/nB,EAAO62B,YAAc,SAAUryB,GAC7B,OAAOqyB,EAAYryB,EACpB,EAIDxE,EAAO4wC,gBAAkB,SAAUpsC,GACjC,OAAOqyB,EAAYryB,EACpB,EA6GDxE,EAAO82B,SAAW,SAAmBhsD,GACnC,OAAY,MAALA,IAA6B,IAAhBA,EAAE+lE,WACpB/lE,IAAMk1B,EAAO9zB,SAChB,EAED8zB,EAAO8wC,QAAU,SAAkB7xD,EAAGnU,GAGpC,GAFI6hE,GAAW1tD,EAAGlU,cAAakU,EAAI+gB,EAAO70B,KAAK8T,EAAGA,EAAErT,OAAQqT,EAAElI,aAC1D41D,GAAW7hE,EAAGC,cAAaD,EAAIk1B,EAAO70B,KAAKL,EAAGA,EAAEc,OAAQd,EAAEiM,cACzDipB,EAAO82B,SAAS73C,KAAO+gB,EAAO82B,SAAShsD,GAC1C,MAAM,IAAIE,UACR,yEAIJ,GAAIiU,IAAMnU,EAAG,OAAO,EAKpB,IAHA,IAAI+U,EAAIZ,EAAE3T,OACNwU,EAAIhV,EAAEQ,OAED+E,EAAI,EAAGmI,EAAM3L,KAAK4J,IAAIoJ,EAAGC,GAAIzP,EAAImI,IAAOnI,EAC/C,GAAI4O,EAAE5O,KAAOvF,EAAEuF,GAAI,CACjBwP,EAAIZ,EAAE5O,GACNyP,EAAIhV,EAAEuF,GACN,KACD,CAGH,OAAIwP,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,CACR,EAEDmgB,EAAOqsC,WAAa,SAAqBtkB,GACvC,OAAQ/yC,OAAO+yC,GAAU2lB,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,EAEZ,EAED1tC,EAAO2B,OAAS,SAAiBovC,EAAMzlE,GACrC,IAAKuF,MAAMC,QAAQigE,GACjB,MAAM,IAAI/lE,UAAU,+CAGtB,GAAoB,IAAhB+lE,EAAKzlE,OACP,OAAO00B,EAAOkE,MAAM,GAGtB,IAAI7zB,EACJ,QAAeW,IAAX1F,EAEF,IADAA,EAAS,EACJ+E,EAAI,EAAGA,EAAI0gE,EAAKzlE,SAAU+E,EAC7B/E,GAAUylE,EAAK1gE,GAAG/E,OAItB,IAAMF,EAAS40B,EAAO62B,YAAYvrD,GAC9BgN,EAAM,EACV,IAAKjI,EAAI,EAAGA,EAAI0gE,EAAKzlE,SAAU+E,EAAG,CAChC,IAAIkmB,EAAMw6C,EAAK1gE,GACf,GAAIs8D,GAAWp2C,EAAKxrB,YACduN,EAAMie,EAAIjrB,OAASF,EAAOE,QACvB00B,EAAO82B,SAASvgC,KAAMA,EAAMyJ,EAAO70B,KAAKorB,IAC7CA,EAAIrhB,KAAK9J,EAAQkN,IAEjBvN,WAAWmB,UAAUwM,IAAI7F,KACvBzH,EACAmrB,EACAje,OAGC,KAAK0nB,EAAO82B,SAASvgC,GAC1B,MAAM,IAAIvrB,UAAU,+CAEpBurB,EAAIrhB,KAAK9J,EAAQkN,EAClB,CACDA,GAAOie,EAAIjrB,MACZ,CACD,OAAOF,CACR,EAiDD40B,EAAOjpB,WAAaA,EA8EpBipB,EAAO9zB,UAAU2kE,WAAY,EAQ7B7wC,EAAO9zB,UAAU8kE,OAAS,WACxB,IAAMx4D,EAAMd,KAAKpM,OACjB,GAAIkN,EAAM,IAAM,EACd,MAAM,IAAI3M,WAAW,6CAEvB,IAAK,IAAIwE,EAAI,EAAGA,EAAImI,EAAKnI,GAAK,EAC5B69D,EAAKx2D,KAAMrH,EAAGA,EAAI,GAEpB,OAAOqH,IACR,EAEDsoB,EAAO9zB,UAAU+kE,OAAS,WACxB,IAAMz4D,EAAMd,KAAKpM,OACjB,GAAIkN,EAAM,IAAM,EACd,MAAM,IAAI3M,WAAW,6CAEvB,IAAK,IAAIwE,EAAI,EAAGA,EAAImI,EAAKnI,GAAK,EAC5B69D,EAAKx2D,KAAMrH,EAAGA,EAAI,GAClB69D,EAAKx2D,KAAMrH,EAAI,EAAGA,EAAI,GAExB,OAAOqH,IACR,EAEDsoB,EAAO9zB,UAAUglE,OAAS,WACxB,IAAM14D,EAAMd,KAAKpM,OACjB,GAAIkN,EAAM,IAAM,EACd,MAAM,IAAI3M,WAAW,6CAEvB,IAAK,IAAIwE,EAAI,EAAGA,EAAImI,EAAKnI,GAAK,EAC5B69D,EAAKx2D,KAAMrH,EAAGA,EAAI,GAClB69D,EAAKx2D,KAAMrH,EAAI,EAAGA,EAAI,GACtB69D,EAAKx2D,KAAMrH,EAAI,EAAGA,EAAI,GACtB69D,EAAKx2D,KAAMrH,EAAI,EAAGA,EAAI,GAExB,OAAOqH,IACR,EAEDsoB,EAAO9zB,UAAU4I,SAAW,WAC1B,IAAMxJ,EAASoM,KAAKpM,OACpB,OAAe,IAAXA,EAAqB,GACA,IAArBiiE,UAAUjiE,OAAqBuiE,EAAUn2D,KAAM,EAAGpM,GAC/CqiE,EAAayC,MAAM14D,KAAM61D,UACjC,EAEDvtC,EAAO9zB,UAAUilE,eAAiBnxC,EAAO9zB,UAAU4I,SAEnDkrB,EAAO9zB,UAAUmW,OAAS,SAAiBvX,GACzC,IAAKk1B,EAAO82B,SAAShsD,GAAI,MAAM,IAAIE,UAAU,6BAC7C,OAAI0M,OAAS5M,GACsB,IAA5Bk1B,EAAO8wC,QAAQp5D,KAAM5M,EAC7B,EAEDk1B,EAAO9zB,UAAU0tD,QAAU,WACzB,IAAItiD,EAAM,GACJ6U,EAAM7W,EAAQ,GAGpB,OAFAgC,EAAMI,KAAK5C,SAAS,MAAO,EAAGqX,GAAKysC,QAAQ,UAAW,OAAOwY,OACzD15D,KAAKpM,OAAS6gB,IAAK7U,GAAO,SACvB,WAAaA,EAAM,GAC3B,EACG00D,IACFhsC,EAAO9zB,UAAU8/D,GAAuBhsC,EAAO9zB,UAAU0tD,SAG3D55B,EAAO9zB,UAAU4kE,QAAU,SAAkBO,EAAQ98D,EAAO8jD,EAAKiZ,EAAWC,GAI1E,GAHI5E,GAAW0E,EAAQtmE,cACrBsmE,EAASrxC,EAAO70B,KAAKkmE,EAAQA,EAAOzlE,OAAQylE,EAAOt6D,cAEhDipB,EAAO82B,SAASua,GACnB,MAAM,IAAIrmE,UACR,wFAC2BqmE,GAiB/B,QAbcrgE,IAAVuD,IACFA,EAAQ,QAEEvD,IAARqnD,IACFA,EAAMgZ,EAASA,EAAO/lE,OAAS,QAEf0F,IAAdsgE,IACFA,EAAY,QAEEtgE,IAAZugE,IACFA,EAAU75D,KAAKpM,QAGbiJ,EAAQ,GAAK8jD,EAAMgZ,EAAO/lE,QAAUgmE,EAAY,GAAKC,EAAU75D,KAAKpM,OACtE,MAAM,IAAIO,WAAW,sBAGvB,GAAIylE,GAAaC,GAAWh9D,GAAS8jD,EACnC,OAAO,EAET,GAAIiZ,GAAaC,EACf,OAAQ,EAEV,GAAIh9D,GAAS8jD,EACX,OAAO,EAQT,GAAI3gD,OAAS25D,EAAQ,OAAO,EAS5B,IAPA,IAAIxxD,GAJJ0xD,KAAa,IADbD,KAAe,GAMXxxD,GAPJu4C,KAAS,IADT9jD,KAAW,GASLiE,EAAM3L,KAAK4J,IAAIoJ,EAAGC,GAElB0xD,EAAW95D,KAAK/C,MAAM28D,EAAWC,GACjCE,EAAaJ,EAAO18D,MAAMJ,EAAO8jD,GAE9BhoD,EAAI,EAAGA,EAAImI,IAAOnI,EACzB,GAAImhE,EAASnhE,KAAOohE,EAAWphE,GAAI,CACjCwP,EAAI2xD,EAASnhE,GACbyP,EAAI2xD,EAAWphE,GACf,KACD,CAGH,OAAIwP,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,CACR,EA2HDmgB,EAAO9zB,UAAU0J,SAAW,SAAmBiZ,EAAKxjB,EAAY08C,GAC9D,OAAoD,IAA7CrwC,KAAK41B,QAAQze,EAAKxjB,EAAY08C,EACtC,EAED/nB,EAAO9zB,UAAUohC,QAAU,SAAkBze,EAAKxjB,EAAY08C,GAC5D,OAAOomB,EAAqBz2D,KAAMmX,EAAKxjB,EAAY08C,GAAU,EAC9D,EAED/nB,EAAO9zB,UAAUoiE,YAAc,SAAsBz/C,EAAKxjB,EAAY08C,GACpE,OAAOomB,EAAqBz2D,KAAMmX,EAAKxjB,EAAY08C,GAAU,EAC9D,EA4CD/nB,EAAO9zB,UAAU2I,MAAQ,SAAgBme,EAAQpnB,EAAQN,EAAQy8C,GAE/D,QAAe/2C,IAAXpF,EACFm8C,EAAW,OACXz8C,EAASoM,KAAKpM,OACdM,EAAS,OAEJ,QAAeoF,IAAX1F,GAA0C,kBAAXM,EACxCm8C,EAAWn8C,EACXN,EAASoM,KAAKpM,OACdM,EAAS,MAEJ,KAAI+oC,SAAS/oC,GAUlB,MAAM,IAAIa,MACR,2EAVFb,KAAoB,EAChB+oC,SAASrpC,IACXA,KAAoB,OACH0F,IAAb+2C,IAAwBA,EAAW,UAEvCA,EAAWz8C,EACXA,OAAS0F,EAMZ,CAED,IAAM+9D,EAAYr3D,KAAKpM,OAASM,EAGhC,SAFeoF,IAAX1F,GAAwBA,EAASyjE,KAAWzjE,EAASyjE,GAEpD/7C,EAAO1nB,OAAS,IAAMA,EAAS,GAAKM,EAAS,IAAOA,EAAS8L,KAAKpM,OACrE,MAAM,IAAIO,WAAW,0CAGlBk8C,IAAUA,EAAW,QAG1B,IADA,IAAIylB,GAAc,IAEhB,OAAQzlB,GACN,IAAK,MACH,OAAO+mB,EAASp3D,KAAMsb,EAAQpnB,EAAQN,GAExC,IAAK,OACL,IAAK,QACH,OAAO2jE,EAAUv3D,KAAMsb,EAAQpnB,EAAQN,GAEzC,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAO6jE,EAAWz3D,KAAMsb,EAAQpnB,EAAQN,GAE1C,IAAK,SAEH,OAAO+jE,EAAY33D,KAAMsb,EAAQpnB,EAAQN,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOgkE,EAAU53D,KAAMsb,EAAQpnB,EAAQN,GAEzC,QACE,GAAIkiE,EAAa,MAAM,IAAIxiE,UAAU,qBAAuB+8C,GAC5DA,GAAY,GAAKA,GAAU2lB,cAC3BF,GAAc,EAGrB,EAEDxtC,EAAO9zB,UAAU80B,OAAS,WACxB,MAAO,CACLlQ,KAAM,SACNzZ,KAAMxG,MAAM3E,UAAUyI,MAAM9B,KAAK6E,KAAKg6D,MAAQh6D,KAAM,GAEvD,EAyFD,IAAMw4D,EAAuB,KAoB7B,SAASpC,EAAYv3C,EAAKhiB,EAAO8jD,GAC/B,IAAIiC,EAAM,GACVjC,EAAMxrD,KAAK4J,IAAI8f,EAAIjrB,OAAQ+sD,GAE3B,IAAK,IAAIhoD,EAAIkE,EAAOlE,EAAIgoD,IAAOhoD,EAC7BiqD,GAAOtlD,OAAOm7D,aAAsB,IAAT55C,EAAIlmB,IAEjC,OAAOiqD,CACR,CAED,SAASyT,EAAax3C,EAAKhiB,EAAO8jD,GAChC,IAAIiC,EAAM,GACVjC,EAAMxrD,KAAK4J,IAAI8f,EAAIjrB,OAAQ+sD,GAE3B,IAAK,IAAIhoD,EAAIkE,EAAOlE,EAAIgoD,IAAOhoD,EAC7BiqD,GAAOtlD,OAAOm7D,aAAa55C,EAAIlmB,IAEjC,OAAOiqD,CACR,CAED,SAASsT,EAAUr3C,EAAKhiB,EAAO8jD,GAC7B,IAAM7/C,EAAM+d,EAAIjrB,SAEXiJ,GAASA,EAAQ,KAAGA,EAAQ,KAC5B8jD,GAAOA,EAAM,GAAKA,EAAM7/C,KAAK6/C,EAAM7/C,GAGxC,IADA,IAAIhC,EAAM,GACDnG,EAAIkE,EAAOlE,EAAIgoD,IAAOhoD,EAC7BmG,GAAOm7D,GAAoBp7C,EAAIlmB,IAEjC,OAAOmG,CACR,CAED,SAASy3D,EAAc13C,EAAKhiB,EAAO8jD,GAIjC,IAHA,IAAM3iD,EAAQ6gB,EAAI5hB,MAAMJ,EAAO8jD,GAC3Bx+C,EAAM,GAEDxJ,EAAI,EAAGA,EAAIqF,EAAMpK,OAAS,EAAG+E,GAAK,EACzCwJ,GAAO7E,OAAOm7D,aAAaz6D,EAAMrF,GAAqB,IAAfqF,EAAMrF,EAAI,IAEnD,OAAOwJ,CACR,CAiCD,SAAS+3D,EAAahmE,EAAQimE,EAAKvmE,GACjC,GAAKM,EAAS,IAAO,GAAKA,EAAS,EAAG,MAAM,IAAIC,WAAW,sBAC3D,GAAID,EAASimE,EAAMvmE,EAAQ,MAAM,IAAIO,WAAW,wCACjD,CAyQD,SAASimE,EAAUv7C,EAAK5iB,EAAO/H,EAAQimE,EAAK1lD,EAAK1V,GAC/C,IAAKupB,EAAO82B,SAASvgC,GAAM,MAAM,IAAIvrB,UAAU,+CAC/C,GAAI2I,EAAQwY,GAAOxY,EAAQ8C,EAAK,MAAM,IAAI5K,WAAW,qCACrD,GAAID,EAASimE,EAAMt7C,EAAIjrB,OAAQ,MAAM,IAAIO,WAAW,qBACrD,CA+FD,SAASkmE,EAAgBx7C,EAAK5iB,EAAO/H,EAAQ6K,EAAK0V,GAChD6lD,EAAWr+D,EAAO8C,EAAK0V,EAAKoK,EAAK3qB,EAAQ,GAEzC,IAAIW,EAAKb,OAAOiI,EAAQuF,OAAO,aAC/Bqd,EAAI3qB,KAAYW,EAChBA,IAAW,EACXgqB,EAAI3qB,KAAYW,EAChBA,IAAW,EACXgqB,EAAI3qB,KAAYW,EAChBA,IAAW,EACXgqB,EAAI3qB,KAAYW,EAChB,IAAI6uD,EAAK1vD,OAAOiI,GAASuF,OAAO,IAAMA,OAAO,aAQ7C,OAPAqd,EAAI3qB,KAAYwvD,EAChBA,IAAW,EACX7kC,EAAI3qB,KAAYwvD,EAChBA,IAAW,EACX7kC,EAAI3qB,KAAYwvD,EAChBA,IAAW,EACX7kC,EAAI3qB,KAAYwvD,EACTxvD,CACR,CAED,SAASqmE,EAAgB17C,EAAK5iB,EAAO/H,EAAQ6K,EAAK0V,GAChD6lD,EAAWr+D,EAAO8C,EAAK0V,EAAKoK,EAAK3qB,EAAQ,GAEzC,IAAIW,EAAKb,OAAOiI,EAAQuF,OAAO,aAC/Bqd,EAAI3qB,EAAS,GAAKW,EAClBA,IAAW,EACXgqB,EAAI3qB,EAAS,GAAKW,EAClBA,IAAW,EACXgqB,EAAI3qB,EAAS,GAAKW,EAClBA,IAAW,EACXgqB,EAAI3qB,EAAS,GAAKW,EAClB,IAAI6uD,EAAK1vD,OAAOiI,GAASuF,OAAO,IAAMA,OAAO,aAQ7C,OAPAqd,EAAI3qB,EAAS,GAAKwvD,EAClBA,IAAW,EACX7kC,EAAI3qB,EAAS,GAAKwvD,EAClBA,IAAW,EACX7kC,EAAI3qB,EAAS,GAAKwvD,EAClBA,IAAW,EACX7kC,EAAI3qB,GAAUwvD,EACPxvD,EAAS,CACjB,CAkHD,SAASsmE,EAAc37C,EAAK5iB,EAAO/H,EAAQimE,EAAK1lD,EAAK1V,GACnD,GAAI7K,EAASimE,EAAMt7C,EAAIjrB,OAAQ,MAAM,IAAIO,WAAW,sBACpD,GAAID,EAAS,EAAG,MAAM,IAAIC,WAAW,qBACtC,CAED,SAASsmE,EAAY57C,EAAK5iB,EAAO/H,EAAQwmE,EAAcC,GAOrD,OANA1+D,GAASA,EACT/H,KAAoB,EACfymE,GACHH,EAAa37C,EAAK5iB,EAAO/H,EAAQ,GAEnCmgE,EAAQl3D,MAAM0hB,EAAK5iB,EAAO/H,EAAQwmE,EAAc,GAAI,GAC7CxmE,EAAS,CACjB,CAUD,SAAS0mE,EAAa/7C,EAAK5iB,EAAO/H,EAAQwmE,EAAcC,GAOtD,OANA1+D,GAASA,EACT/H,KAAoB,EACfymE,GACHH,EAAa37C,EAAK5iB,EAAO/H,EAAQ,GAEnCmgE,EAAQl3D,MAAM0hB,EAAK5iB,EAAO/H,EAAQwmE,EAAc,GAAI,GAC7CxmE,EAAS,CACjB,CAzkBDo0B,EAAO9zB,UAAUyI,MAAQ,SAAgBJ,EAAO8jD,GAC9C,IAAM7/C,EAAMd,KAAKpM,QACjBiJ,IAAUA,GAGE,GACVA,GAASiE,GACG,IAAGjE,EAAQ,GACdA,EAAQiE,IACjBjE,EAAQiE,IANV6/C,OAAcrnD,IAARqnD,EAAoB7/C,IAAQ6/C,GASxB,GACRA,GAAO7/C,GACG,IAAG6/C,EAAM,GACVA,EAAM7/C,IACf6/C,EAAM7/C,GAGJ6/C,EAAM9jD,IAAO8jD,EAAM9jD,GAEvB,IAAMg+D,EAAS76D,KAAKiB,SAASpE,EAAO8jD,GAIpC,OAFAtsD,OAAOogE,eAAeoG,EAAQvyC,EAAO9zB,WAE9BqmE,CACR,EAUDvyC,EAAO9zB,UAAUsmE,WACjBxyC,EAAO9zB,UAAUoB,WAAa,SAAqB1B,EAAQmL,EAAYs7D,GACrEzmE,KAAoB,EACpBmL,KAA4B,EACvBs7D,GAAUT,EAAYhmE,EAAQmL,EAAYW,KAAKpM,QAKpD,IAHA,IAAIujB,EAAMnX,KAAK9L,GACX0sD,EAAM,EACNjoD,EAAI,IACCA,EAAI0G,IAAeuhD,GAAO,MACjCzpC,GAAOnX,KAAK9L,EAASyE,GAAKioD,EAG5B,OAAOzpC,CACR,EAEDmR,EAAO9zB,UAAUumE,WACjBzyC,EAAO9zB,UAAUsB,WAAa,SAAqB5B,EAAQmL,EAAYs7D,GACrEzmE,KAAoB,EACpBmL,KAA4B,EACvBs7D,GACHT,EAAYhmE,EAAQmL,EAAYW,KAAKpM,QAKvC,IAFA,IAAIujB,EAAMnX,KAAK9L,IAAWmL,GACtBuhD,EAAM,EACHvhD,EAAa,IAAMuhD,GAAO,MAC/BzpC,GAAOnX,KAAK9L,IAAWmL,GAAcuhD,EAGvC,OAAOzpC,CACR,EAEDmR,EAAO9zB,UAAUwmE,UACjB1yC,EAAO9zB,UAAUymE,UAAY,SAAoB/mE,EAAQymE,GAGvD,OAFAzmE,KAAoB,EACfymE,GAAUT,EAAYhmE,EAAQ,EAAG8L,KAAKpM,QACpCoM,KAAK9L,EACb,EAEDo0B,EAAO9zB,UAAU0mE,aACjB5yC,EAAO9zB,UAAU2mE,aAAe,SAAuBjnE,EAAQymE,GAG7D,OAFAzmE,KAAoB,EACfymE,GAAUT,EAAYhmE,EAAQ,EAAG8L,KAAKpM,QACpCoM,KAAK9L,GAAW8L,KAAK9L,EAAS,IAAM,CAC5C,EAEDo0B,EAAO9zB,UAAU4mE,aACjB9yC,EAAO9zB,UAAUyiE,aAAe,SAAuB/iE,EAAQymE,GAG7D,OAFAzmE,KAAoB,EACfymE,GAAUT,EAAYhmE,EAAQ,EAAG8L,KAAKpM,QACnCoM,KAAK9L,IAAW,EAAK8L,KAAK9L,EAAS,EAC5C,EAEDo0B,EAAO9zB,UAAU6mE,aACjB/yC,EAAO9zB,UAAUqC,aAAe,SAAuB3C,EAAQymE,GAI7D,OAHAzmE,KAAoB,EACfymE,GAAUT,EAAYhmE,EAAQ,EAAG8L,KAAKpM,SAElCoM,KAAK9L,GACT8L,KAAK9L,EAAS,IAAM,EACpB8L,KAAK9L,EAAS,IAAM,IACD,SAAnB8L,KAAK9L,EAAS,EACpB,EAEDo0B,EAAO9zB,UAAU8mE,aACjBhzC,EAAO9zB,UAAUyC,aAAe,SAAuB/C,EAAQymE,GAI7D,OAHAzmE,KAAoB,EACfymE,GAAUT,EAAYhmE,EAAQ,EAAG8L,KAAKpM,QAEpB,SAAfoM,KAAK9L,IACT8L,KAAK9L,EAAS,IAAM,GACrB8L,KAAK9L,EAAS,IAAM,EACrB8L,KAAK9L,EAAS,GACjB,EAEDo0B,EAAO9zB,UAAU+mE,gBAAkBC,IAAmB,SAA0BtnE,GAE9EunE,EADAvnE,KAAoB,EACG,UACvB,IAAMwnE,EAAQ17D,KAAK9L,GACbynE,EAAO37D,KAAK9L,EAAS,QACboF,IAAVoiE,QAAgCpiE,IAATqiE,GACzBC,EAAY1nE,EAAQ8L,KAAKpM,OAAS,GAGpC,IAAMiB,EAAK6mE,EACT17D,OAAO9L,GAAP,SAAiB,EAAK,GACtB8L,OAAO9L,GAAP,SAAiB,EAAK,IACtB8L,OAAO9L,GAAP,SAAiB,EAAK,IAElBwvD,EAAK1jD,OAAO9L,GAChB8L,OAAO9L,GAAP,SAAiB,EAAK,GACtB8L,OAAO9L,GAAP,SAAiB,EAAK,IACtBynE,EAAO,KAAH,IAAG,EAAK,IAEd,OAAOn6D,OAAO3M,IAAO2M,OAAOkiD,IAAOliD,OAAO,IAC3C,IAED8mB,EAAO9zB,UAAUqnE,gBAAkBL,IAAmB,SAA0BtnE,GAE9EunE,EADAvnE,KAAoB,EACG,UACvB,IAAMwnE,EAAQ17D,KAAK9L,GACbynE,EAAO37D,KAAK9L,EAAS,QACboF,IAAVoiE,QAAgCpiE,IAATqiE,GACzBC,EAAY1nE,EAAQ8L,KAAKpM,OAAS,GAGpC,IAAM8vD,EAAKgY,EAAQ,KAAH,IAAG,EAAK,IACtB17D,OAAO9L,GAAP,SAAiB,EAAK,IACtB8L,OAAO9L,GAAP,SAAiB,EAAK,GACtB8L,OAAO9L,GAEHW,EAAKmL,OAAO9L,GAAP,SAAiB,EAAK,IAC/B8L,OAAO9L,GAAP,SAAiB,EAAK,IACtB8L,OAAO9L,GAAP,SAAiB,EAAK,GACtBynE,EAEF,OAAQn6D,OAAOkiD,IAAOliD,OAAO,KAAOA,OAAO3M,EAC5C,IAEDyzB,EAAO9zB,UAAUyB,UAAY,SAAoB/B,EAAQmL,EAAYs7D,GACnEzmE,KAAoB,EACpBmL,KAA4B,EACvBs7D,GAAUT,EAAYhmE,EAAQmL,EAAYW,KAAKpM,QAKpD,IAHA,IAAIujB,EAAMnX,KAAK9L,GACX0sD,EAAM,EACNjoD,EAAI,IACCA,EAAI0G,IAAeuhD,GAAO,MACjCzpC,GAAOnX,KAAK9L,EAASyE,GAAKioD,EAM5B,OAFIzpC,IAFJypC,GAAO,OAESzpC,GAAOhiB,KAAKoB,IAAI,EAAG,EAAI8I,IAEhC8X,CACR,EAEDmR,EAAO9zB,UAAU4B,UAAY,SAAoBlC,EAAQmL,EAAYs7D,GACnEzmE,KAAoB,EACpBmL,KAA4B,EACvBs7D,GAAUT,EAAYhmE,EAAQmL,EAAYW,KAAKpM,QAKpD,IAHA,IAAI+E,EAAI0G,EACJuhD,EAAM,EACNzpC,EAAMnX,KAAK9L,IAAWyE,GACnBA,EAAI,IAAMioD,GAAO,MACtBzpC,GAAOnX,KAAK9L,IAAWyE,GAAKioD,EAM9B,OAFIzpC,IAFJypC,GAAO,OAESzpC,GAAOhiB,KAAKoB,IAAI,EAAG,EAAI8I,IAEhC8X,CACR,EAEDmR,EAAO9zB,UAAUsnE,SAAW,SAAmB5nE,EAAQymE,GAGrD,OAFAzmE,KAAoB,EACfymE,GAAUT,EAAYhmE,EAAQ,EAAG8L,KAAKpM,QACtB,IAAfoM,KAAK9L,IAC0B,GAA5B,IAAO8L,KAAK9L,GAAU,GADK8L,KAAK9L,EAE1C,EAEDo0B,EAAO9zB,UAAUunE,YAAc,SAAsB7nE,EAAQymE,GAC3DzmE,KAAoB,EACfymE,GAAUT,EAAYhmE,EAAQ,EAAG8L,KAAKpM,QAC3C,IAAMujB,EAAMnX,KAAK9L,GAAW8L,KAAK9L,EAAS,IAAM,EAChD,OAAc,MAANijB,EAAsB,WAANA,EAAmBA,CAC5C,EAEDmR,EAAO9zB,UAAUwnE,YAAc,SAAsB9nE,EAAQymE,GAC3DzmE,KAAoB,EACfymE,GAAUT,EAAYhmE,EAAQ,EAAG8L,KAAKpM,QAC3C,IAAMujB,EAAMnX,KAAK9L,EAAS,GAAM8L,KAAK9L,IAAW,EAChD,OAAc,MAANijB,EAAsB,WAANA,EAAmBA,CAC5C,EAEDmR,EAAO9zB,UAAU4C,YAAc,SAAsBlD,EAAQymE,GAI3D,OAHAzmE,KAAoB,EACfymE,GAAUT,EAAYhmE,EAAQ,EAAG8L,KAAKpM,QAEnCoM,KAAK9L,GACV8L,KAAK9L,EAAS,IAAM,EACpB8L,KAAK9L,EAAS,IAAM,GACpB8L,KAAK9L,EAAS,IAAM,EACxB,EAEDo0B,EAAO9zB,UAAU+C,YAAc,SAAsBrD,EAAQymE,GAI3D,OAHAzmE,KAAoB,EACfymE,GAAUT,EAAYhmE,EAAQ,EAAG8L,KAAKpM,QAEnCoM,KAAK9L,IAAW,GACrB8L,KAAK9L,EAAS,IAAM,GACpB8L,KAAK9L,EAAS,IAAM,EACpB8L,KAAK9L,EAAS,EAClB,EAEDo0B,EAAO9zB,UAAUynE,eAAiBT,IAAmB,SAAyBtnE,GAE5EunE,EADAvnE,KAAoB,EACG,UACvB,IAAMwnE,EAAQ17D,KAAK9L,GACbynE,EAAO37D,KAAK9L,EAAS,QACboF,IAAVoiE,QAAgCpiE,IAATqiE,GACzBC,EAAY1nE,EAAQ8L,KAAKpM,OAAS,GAGpC,IAAMujB,EAAMnX,KAAK9L,EAAS,GACxB8L,KAAK9L,EAAS,GAAd,SAAmB,EAAK,GACxB8L,KAAK9L,EAAS,GAAd,SAAmB,EAAK,KACvBynE,GAAQ,IAEX,OAAQn6D,OAAO2V,IAAQ3V,OAAO,KAC5BA,OAAOk6D,EACP17D,OAAO9L,GAAP,SAAiB,EAAK,GACtB8L,OAAO9L,GAAP,SAAiB,EAAK,IACtB8L,OAAO9L,GAAP,SAAiB,EAAK,IACzB,IAEDo0B,EAAO9zB,UAAU0nE,eAAiBV,IAAmB,SAAyBtnE,GAE5EunE,EADAvnE,KAAoB,EACG,UACvB,IAAMwnE,EAAQ17D,KAAK9L,GACbynE,EAAO37D,KAAK9L,EAAS,QACboF,IAAVoiE,QAAgCpiE,IAATqiE,GACzBC,EAAY1nE,EAAQ8L,KAAKpM,OAAS,GAGpC,IAAMujB,GAAOukD,GAAS,IACpB17D,OAAO9L,GAAP,SAAiB,EAAK,IACtB8L,OAAO9L,GAAP,SAAiB,EAAK,GACtB8L,OAAO9L,GAET,OAAQsN,OAAO2V,IAAQ3V,OAAO,KAC5BA,OAAOxB,OAAO9L,GAAP,SAAiB,EAAK,IAC7B8L,OAAO9L,GAAP,SAAiB,EAAK,IACtB8L,OAAO9L,GAAP,SAAiB,EAAK,GACtBynE,EACH,IAEDrzC,EAAO9zB,UAAUkD,YAAc,SAAsBxD,EAAQymE,GAG3D,OAFAzmE,KAAoB,EACfymE,GAAUT,EAAYhmE,EAAQ,EAAG8L,KAAKpM,QACpCygE,EAAQ2C,KAAKh3D,KAAM9L,GAAQ,EAAM,GAAI,EAC7C,EAEDo0B,EAAO9zB,UAAUqD,YAAc,SAAsB3D,EAAQymE,GAG3D,OAFAzmE,KAAoB,EACfymE,GAAUT,EAAYhmE,EAAQ,EAAG8L,KAAKpM,QACpCygE,EAAQ2C,KAAKh3D,KAAM9L,GAAQ,EAAO,GAAI,EAC9C,EAEDo0B,EAAO9zB,UAAUwD,aAAe,SAAuB9D,EAAQymE,GAG7D,OAFAzmE,KAAoB,EACfymE,GAAUT,EAAYhmE,EAAQ,EAAG8L,KAAKpM,QACpCygE,EAAQ2C,KAAKh3D,KAAM9L,GAAQ,EAAM,GAAI,EAC7C,EAEDo0B,EAAO9zB,UAAU2D,aAAe,SAAuBjE,EAAQymE,GAG7D,OAFAzmE,KAAoB,EACfymE,GAAUT,EAAYhmE,EAAQ,EAAG8L,KAAKpM,QACpCygE,EAAQ2C,KAAKh3D,KAAM9L,GAAQ,EAAO,GAAI,EAC9C,EAQDo0B,EAAO9zB,UAAU2nE,YACjB7zC,EAAO9zB,UAAUqB,YAAc,SAAsBoG,EAAO/H,EAAQmL,EAAYs7D,IAC9E1+D,GAASA,EACT/H,KAAoB,EACpBmL,KAA4B,EACvBs7D,IAEHP,EAASp6D,KAAM/D,EAAO/H,EAAQmL,EADblK,KAAKoB,IAAI,EAAG,EAAI8I,GAAc,EACK,GAGtD,IAAIuhD,EAAM,EACNjoD,EAAI,EAER,IADAqH,KAAK9L,GAAkB,IAAR+H,IACNtD,EAAI0G,IAAeuhD,GAAO,MACjC5gD,KAAK9L,EAASyE,GAAMsD,EAAQ2kD,EAAO,IAGrC,OAAO1sD,EAASmL,CACjB,EAEDipB,EAAO9zB,UAAU4nE,YACjB9zC,EAAO9zB,UAAUuB,YAAc,SAAsBkG,EAAO/H,EAAQmL,EAAYs7D,IAC9E1+D,GAASA,EACT/H,KAAoB,EACpBmL,KAA4B,EACvBs7D,IAEHP,EAASp6D,KAAM/D,EAAO/H,EAAQmL,EADblK,KAAKoB,IAAI,EAAG,EAAI8I,GAAc,EACK,GAGtD,IAAI1G,EAAI0G,EAAa,EACjBuhD,EAAM,EAEV,IADA5gD,KAAK9L,EAASyE,GAAa,IAARsD,IACVtD,GAAK,IAAMioD,GAAO,MACzB5gD,KAAK9L,EAASyE,GAAMsD,EAAQ2kD,EAAO,IAGrC,OAAO1sD,EAASmL,CACjB,EAEDipB,EAAO9zB,UAAU6nE,WACjB/zC,EAAO9zB,UAAU8nE,WAAa,SAAqBrgE,EAAO/H,EAAQymE,GAKhE,OAJA1+D,GAASA,EACT/H,KAAoB,EACfymE,GAAUP,EAASp6D,KAAM/D,EAAO/H,EAAQ,EAAG,IAAM,GACtD8L,KAAK9L,GAAmB,IAAR+H,EACT/H,EAAS,CACjB,EAEDo0B,EAAO9zB,UAAU+nE,cACjBj0C,EAAO9zB,UAAUgoE,cAAgB,SAAwBvgE,EAAO/H,EAAQymE,GAMtE,OALA1+D,GAASA,EACT/H,KAAoB,EACfymE,GAAUP,EAASp6D,KAAM/D,EAAO/H,EAAQ,EAAG,MAAQ,GACxD8L,KAAK9L,GAAmB,IAAR+H,EAChB+D,KAAK9L,EAAS,GAAM+H,IAAU,EACvB/H,EAAS,CACjB,EAEDo0B,EAAO9zB,UAAUioE,cACjBn0C,EAAO9zB,UAAUkoE,cAAgB,SAAwBzgE,EAAO/H,EAAQymE,GAMtE,OALA1+D,GAASA,EACT/H,KAAoB,EACfymE,GAAUP,EAASp6D,KAAM/D,EAAO/H,EAAQ,EAAG,MAAQ,GACxD8L,KAAK9L,GAAW+H,IAAU,EAC1B+D,KAAK9L,EAAS,GAAc,IAAR+H,EACb/H,EAAS,CACjB,EAEDo0B,EAAO9zB,UAAUmoE,cACjBr0C,EAAO9zB,UAAUuC,cAAgB,SAAwBkF,EAAO/H,EAAQymE,GAQtE,OAPA1+D,GAASA,EACT/H,KAAoB,EACfymE,GAAUP,EAASp6D,KAAM/D,EAAO/H,EAAQ,EAAG,WAAY,GAC5D8L,KAAK9L,EAAS,GAAM+H,IAAU,GAC9B+D,KAAK9L,EAAS,GAAM+H,IAAU,GAC9B+D,KAAK9L,EAAS,GAAM+H,IAAU,EAC9B+D,KAAK9L,GAAmB,IAAR+H,EACT/H,EAAS,CACjB,EAEDo0B,EAAO9zB,UAAUooE,cACjBt0C,EAAO9zB,UAAU0C,cAAgB,SAAwB+E,EAAO/H,EAAQymE,GAQtE,OAPA1+D,GAASA,EACT/H,KAAoB,EACfymE,GAAUP,EAASp6D,KAAM/D,EAAO/H,EAAQ,EAAG,WAAY,GAC5D8L,KAAK9L,GAAW+H,IAAU,GAC1B+D,KAAK9L,EAAS,GAAM+H,IAAU,GAC9B+D,KAAK9L,EAAS,GAAM+H,IAAU,EAC9B+D,KAAK9L,EAAS,GAAc,IAAR+H,EACb/H,EAAS,CACjB,EA8CDo0B,EAAO9zB,UAAUqoE,iBAAmBrB,IAAmB,SAA2Bv/D,GAAmB,IAAZ/H,EAAY,uDAAH,EAChG,OAAOmmE,EAAer6D,KAAM/D,EAAO/H,EAAQsN,OAAO,GAAIA,OAAO,sBAC9D,IAED8mB,EAAO9zB,UAAUsoE,iBAAmBtB,IAAmB,SAA2Bv/D,GAAmB,IAAZ/H,EAAY,uDAAH,EAChG,OAAOqmE,EAAev6D,KAAM/D,EAAO/H,EAAQsN,OAAO,GAAIA,OAAO,sBAC9D,IAED8mB,EAAO9zB,UAAU0B,WAAa,SAAqB+F,EAAO/H,EAAQmL,EAAYs7D,GAG5E,GAFA1+D,GAASA,EACT/H,KAAoB,GACfymE,EAAU,CACb,IAAM9oB,EAAQ18C,KAAKoB,IAAI,EAAI,EAAI8I,EAAc,GAE7C+6D,EAASp6D,KAAM/D,EAAO/H,EAAQmL,EAAYwyC,EAAQ,GAAIA,EACvD,CAED,IAAIl5C,EAAI,EACJioD,EAAM,EACN6E,EAAM,EAEV,IADAzlD,KAAK9L,GAAkB,IAAR+H,IACNtD,EAAI0G,IAAeuhD,GAAO,MAC7B3kD,EAAQ,GAAa,IAARwpD,GAAsC,IAAzBzlD,KAAK9L,EAASyE,EAAI,KAC9C8sD,EAAM,GAERzlD,KAAK9L,EAASyE,IAAOsD,EAAQ2kD,GAAQ,GAAK6E,EAAM,IAGlD,OAAOvxD,EAASmL,CACjB,EAEDipB,EAAO9zB,UAAU6B,WAAa,SAAqB4F,EAAO/H,EAAQmL,EAAYs7D,GAG5E,GAFA1+D,GAASA,EACT/H,KAAoB,GACfymE,EAAU,CACb,IAAM9oB,EAAQ18C,KAAKoB,IAAI,EAAI,EAAI8I,EAAc,GAE7C+6D,EAASp6D,KAAM/D,EAAO/H,EAAQmL,EAAYwyC,EAAQ,GAAIA,EACvD,CAED,IAAIl5C,EAAI0G,EAAa,EACjBuhD,EAAM,EACN6E,EAAM,EAEV,IADAzlD,KAAK9L,EAASyE,GAAa,IAARsD,IACVtD,GAAK,IAAMioD,GAAO,MACrB3kD,EAAQ,GAAa,IAARwpD,GAAsC,IAAzBzlD,KAAK9L,EAASyE,EAAI,KAC9C8sD,EAAM,GAERzlD,KAAK9L,EAASyE,IAAOsD,EAAQ2kD,GAAQ,GAAK6E,EAAM,IAGlD,OAAOvxD,EAASmL,CACjB,EAEDipB,EAAO9zB,UAAUuoE,UAAY,SAAoB9gE,EAAO/H,EAAQymE,GAM9D,OALA1+D,GAASA,EACT/H,KAAoB,EACfymE,GAAUP,EAASp6D,KAAM/D,EAAO/H,EAAQ,EAAG,KAAO,KACnD+H,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtC+D,KAAK9L,GAAmB,IAAR+H,EACT/H,EAAS,CACjB,EAEDo0B,EAAO9zB,UAAUwoE,aAAe,SAAuB/gE,EAAO/H,EAAQymE,GAMpE,OALA1+D,GAASA,EACT/H,KAAoB,EACfymE,GAAUP,EAASp6D,KAAM/D,EAAO/H,EAAQ,EAAG,OAAS,OACzD8L,KAAK9L,GAAmB,IAAR+H,EAChB+D,KAAK9L,EAAS,GAAM+H,IAAU,EACvB/H,EAAS,CACjB,EAEDo0B,EAAO9zB,UAAUyoE,aAAe,SAAuBhhE,EAAO/H,EAAQymE,GAMpE,OALA1+D,GAASA,EACT/H,KAAoB,EACfymE,GAAUP,EAASp6D,KAAM/D,EAAO/H,EAAQ,EAAG,OAAS,OACzD8L,KAAK9L,GAAW+H,IAAU,EAC1B+D,KAAK9L,EAAS,GAAc,IAAR+H,EACb/H,EAAS,CACjB,EAEDo0B,EAAO9zB,UAAU6C,aAAe,SAAuB4E,EAAO/H,EAAQymE,GAQpE,OAPA1+D,GAASA,EACT/H,KAAoB,EACfymE,GAAUP,EAASp6D,KAAM/D,EAAO/H,EAAQ,EAAG,YAAa,YAC7D8L,KAAK9L,GAAmB,IAAR+H,EAChB+D,KAAK9L,EAAS,GAAM+H,IAAU,EAC9B+D,KAAK9L,EAAS,GAAM+H,IAAU,GAC9B+D,KAAK9L,EAAS,GAAM+H,IAAU,GACvB/H,EAAS,CACjB,EAEDo0B,EAAO9zB,UAAUgD,aAAe,SAAuByE,EAAO/H,EAAQymE,GASpE,OARA1+D,GAASA,EACT/H,KAAoB,EACfymE,GAAUP,EAASp6D,KAAM/D,EAAO/H,EAAQ,EAAG,YAAa,YACzD+H,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5C+D,KAAK9L,GAAW+H,IAAU,GAC1B+D,KAAK9L,EAAS,GAAM+H,IAAU,GAC9B+D,KAAK9L,EAAS,GAAM+H,IAAU,EAC9B+D,KAAK9L,EAAS,GAAc,IAAR+H,EACb/H,EAAS,CACjB,EAEDo0B,EAAO9zB,UAAU0oE,gBAAkB1B,IAAmB,SAA0Bv/D,GAAmB,IAAZ/H,EAAY,uDAAH,EAC9F,OAAOmmE,EAAer6D,KAAM/D,EAAO/H,GAASsN,OAAO,sBAAuBA,OAAO,sBAClF,IAED8mB,EAAO9zB,UAAU2oE,gBAAkB3B,IAAmB,SAA0Bv/D,GAAmB,IAAZ/H,EAAY,uDAAH,EAC9F,OAAOqmE,EAAev6D,KAAM/D,EAAO/H,GAASsN,OAAO,sBAAuBA,OAAO,sBAClF,IAiBD8mB,EAAO9zB,UAAUmD,aAAe,SAAuBsE,EAAO/H,EAAQymE,GACpE,OAAOF,EAAWz6D,KAAM/D,EAAO/H,GAAQ,EAAMymE,EAC9C,EAEDryC,EAAO9zB,UAAUsD,aAAe,SAAuBmE,EAAO/H,EAAQymE,GACpE,OAAOF,EAAWz6D,KAAM/D,EAAO/H,GAAQ,EAAOymE,EAC/C,EAYDryC,EAAO9zB,UAAUyD,cAAgB,SAAwBgE,EAAO/H,EAAQymE,GACtE,OAAOC,EAAY56D,KAAM/D,EAAO/H,GAAQ,EAAMymE,EAC/C,EAEDryC,EAAO9zB,UAAU4D,cAAgB,SAAwB6D,EAAO/H,EAAQymE,GACtE,OAAOC,EAAY56D,KAAM/D,EAAO/H,GAAQ,EAAOymE,EAChD,EAGDryC,EAAO9zB,UAAUgJ,KAAO,SAAem8D,EAAQyD,EAAavgE,EAAO8jD,GACjE,IAAKr4B,EAAO82B,SAASua,GAAS,MAAM,IAAIrmE,UAAU,+BAQlD,GAPKuJ,IAAOA,EAAQ,GACf8jD,GAAe,IAARA,IAAWA,EAAM3gD,KAAKpM,QAC9BwpE,GAAezD,EAAO/lE,SAAQwpE,EAAczD,EAAO/lE,QAClDwpE,IAAaA,EAAc,GAC5Bzc,EAAM,GAAKA,EAAM9jD,IAAO8jD,EAAM9jD,GAG9B8jD,IAAQ9jD,EAAO,OAAO,EAC1B,GAAsB,IAAlB88D,EAAO/lE,QAAgC,IAAhBoM,KAAKpM,OAAc,OAAO,EAGrD,GAAIwpE,EAAc,EAChB,MAAM,IAAIjpE,WAAW,6BAEvB,GAAI0I,EAAQ,GAAKA,GAASmD,KAAKpM,OAAQ,MAAM,IAAIO,WAAW,sBAC5D,GAAIwsD,EAAM,EAAG,MAAM,IAAIxsD,WAAW,2BAG9BwsD,EAAM3gD,KAAKpM,SAAQ+sD,EAAM3gD,KAAKpM,QAC9B+lE,EAAO/lE,OAASwpE,EAAczc,EAAM9jD,IACtC8jD,EAAMgZ,EAAO/lE,OAASwpE,EAAcvgE,GAGtC,IAAMiE,EAAM6/C,EAAM9jD,EAalB,OAXImD,OAAS25D,GAAqD,oBAApCtmE,WAAWmB,UAAU6oE,WAEjDr9D,KAAKq9D,WAAWD,EAAavgE,EAAO8jD,GAEpCttD,WAAWmB,UAAUwM,IAAI7F,KACvBw+D,EACA35D,KAAKiB,SAASpE,EAAO8jD,GACrByc,GAIGt8D,CACR,EAMDwnB,EAAO9zB,UAAU6M,KAAO,SAAe8V,EAAKta,EAAO8jD,EAAKtQ,GAEtD,GAAmB,kBAARl5B,EAAkB,CAS3B,GARqB,kBAAVta,GACTwzC,EAAWxzC,EACXA,EAAQ,EACR8jD,EAAM3gD,KAAKpM,QACa,kBAAR+sD,IAChBtQ,EAAWsQ,EACXA,EAAM3gD,KAAKpM,aAEI0F,IAAb+2C,GAA8C,kBAAbA,EACnC,MAAM,IAAI/8C,UAAU,6BAEtB,GAAwB,kBAAb+8C,IAA0B/nB,EAAOqsC,WAAWtkB,GACrD,MAAM,IAAI/8C,UAAU,qBAAuB+8C,GAE7C,GAAmB,IAAfl5B,EAAIvjB,OAAc,CACpB,IAAM2qC,EAAOpnB,EAAI0Q,WAAW,IACV,SAAbwoB,GAAuB9R,EAAO,KAClB,WAAb8R,KAEFl5B,EAAMonB,EAET,CACF,KAAyB,kBAARpnB,EAChBA,GAAY,IACY,mBAARA,IAChBA,EAAMnjB,OAAOmjB,IAIf,GAAIta,EAAQ,GAAKmD,KAAKpM,OAASiJ,GAASmD,KAAKpM,OAAS+sD,EACpD,MAAM,IAAIxsD,WAAW,sBAGvB,GAAIwsD,GAAO9jD,EACT,OAAOmD,KAQT,IAAIrH,EACJ,GANAkE,KAAkB,EAClB8jD,OAAcrnD,IAARqnD,EAAoB3gD,KAAKpM,OAAS+sD,IAAQ,EAE3CxpC,IAAKA,EAAM,GAGG,kBAARA,EACT,IAAKxe,EAAIkE,EAAOlE,EAAIgoD,IAAOhoD,EACzBqH,KAAKrH,GAAKwe,MAEP,CACL,IAAMnZ,EAAQsqB,EAAO82B,SAASjoC,GAC1BA,EACAmR,EAAO70B,KAAK0jB,EAAKk5B,GACfvvC,EAAM9C,EAAMpK,OAClB,GAAY,IAARkN,EACF,MAAM,IAAIxN,UAAU,cAAgB6jB,EAClC,qCAEJ,IAAKxe,EAAI,EAAGA,EAAIgoD,EAAM9jD,IAASlE,EAC7BqH,KAAKrH,EAAIkE,GAASmB,EAAMrF,EAAImI,EAE/B,CAED,OAAOd,IACR,EAMD,IAAMs9D,EAAS,CAAC,EAChB,SAAS7zD,EAAG8zD,EAAKC,EAAYC,GAC3BH,EAAOC,GAAP,8BACE,aAAe,uBACb,eAEAlpE,OAAOo2B,eAAP,KAA4B,UAAW,CACrCxuB,MAAOuhE,EAAW9E,MAAX,KAAuB7C,WAC9B5qC,UAAU,EACV/T,cAAc,IAIhB,EAAKtiB,KAAL,UAAe,EAAKA,KAApB,aAA6B2oE,EAA7B,KAGA,EAAKG,aAEE,EAAK9oE,KAfC,CAgBd,CAjBH,4BAmBE,WACE,OAAO2oE,CACR,EArBH,IAuBE,SAAUthE,GACR5H,OAAOo2B,eAAezqB,KAAM,OAAQ,CAClCkX,cAAc,EACd8hD,YAAY,EACZ/8D,MAAAA,EACAgvB,UAAU,GAEb,GA9BH,sBAgCE,WACE,MAAO,GAAP,OAAUjrB,KAAKpL,KAAf,aAAwB2oE,EAAxB,cAAiCv9D,KAAKK,QACvC,KAlCH,GAAsCo9D,EAoCvC,CA+BD,SAASE,EAAuBxmD,GAI9B,IAHA,IAAIhV,EAAM,GACNxJ,EAAIwe,EAAIvjB,OACNiJ,EAAmB,MAAXsa,EAAI,GAAa,EAAI,EAC5Bxe,GAAKkE,EAAQ,EAAGlE,GAAK,EAC1BwJ,EAAM,IAAH,OAAOgV,EAAIla,MAAMtE,EAAI,EAAGA,IAAxB,OAA6BwJ,GAElC,MAAO,GAAP,OAAUgV,EAAIla,MAAM,EAAGtE,IAAvB,OAA4BwJ,EAC7B,CAYD,SAASm4D,EAAYr+D,EAAO8C,EAAK0V,EAAKoK,EAAK3qB,EAAQmL,GACjD,GAAIpD,EAAQwY,GAAOxY,EAAQ8C,EAAK,CAC9B,IACIsjC,EADEvkC,EAAmB,kBAARiB,EAAmB,IAAM,GAY1C,MARIsjC,EAFAhjC,EAAa,EACH,IAARN,GAAaA,IAAQyC,OAAO,GACtB,OAAH,OAAU1D,EAAV,mBAAsBA,EAAtB,eAAiD,GAAlBuB,EAAa,IAA5C,OAAqDvB,GAElD,gBAASA,EAAT,eAAoC,GAAlBuB,EAAa,GAAS,GAAxC,OAA4CvB,EAA5C,2BACsB,GAAlBuB,EAAa,GAAS,GAD1B,OAC8BvB,GAGhC,MAAH,OAASiB,GAAT,OAAejB,EAAf,mBAA2B2W,GAA3B,OAAiC3W,GAElC,IAAIw/D,EAAOM,iBAAiB,QAASv7B,EAAOpmC,EACnD,EAtBH,SAAsB4iB,EAAK3qB,EAAQmL,GACjCo8D,EAAevnE,EAAQ,eACHoF,IAAhBulB,EAAI3qB,SAAsDoF,IAA7BulB,EAAI3qB,EAASmL,IAC5Cu8D,EAAY1nE,EAAQ2qB,EAAIjrB,QAAUyL,EAAa,GAElD,CAkBCw+D,CAAYh/C,EAAK3qB,EAAQmL,EAC1B,CAED,SAASo8D,EAAgBx/D,EAAOrH,GAC9B,GAAqB,kBAAVqH,EACT,MAAM,IAAIqhE,EAAOQ,qBAAqBlpE,EAAM,SAAUqH,EAEzD,CAED,SAAS2/D,EAAa3/D,EAAOrI,EAAQwlB,GACnC,GAAIjkB,KAAKC,MAAM6G,KAAWA,EAExB,MADAw/D,EAAex/D,EAAOmd,GAChB,IAAIkkD,EAAOM,iBAAiBxkD,GAAQ,SAAU,aAAcnd,GAGpE,GAAIrI,EAAS,EACX,MAAM,IAAI0pE,EAAOS,yBAGnB,MAAM,IAAIT,EAAOM,iBAAiBxkD,GAAQ,SAApC,aACkCA,EAAO,EAAI,EAD7C,mBACyDxlB,GAC7BqI,EACnC,CAvFDwN,EAAE,4BACA,SAAU7U,GACR,OAAIA,EACK,GAAP,OAAUA,EAAV,gCAGK,gDACR,GAAET,YACLsV,EAAE,wBACA,SAAU7U,EAAMggE,GACd,MAAO,QAAP,OAAehgE,EAAf,mEAA8EggE,EAC/E,GAAEthE,WACLmW,EAAE,oBACA,SAAU7J,EAAKyiC,EAAOxpB,GACpB,IAAInD,EAAM,iBAAH,OAAoB9V,EAApB,sBACHo+D,EAAWnlD,EAWf,OAVI7kB,OAAOC,UAAU4kB,IAAU1jB,KAAKyW,IAAIiN,GAAT1jB,KAAA,IAAkB,EAAK,IACpD6oE,EAAWL,EAAsBrgE,OAAOub,IACd,kBAAVA,IAChBmlD,EAAW1gE,OAAOub,IACdA,EAAQ,KAAH,IAAGrX,OAAO,GAAMA,OAAO,MAAOqX,GAAS,KAAD,IAAErX,OAAO,GAAMA,OAAO,QACnEw8D,EAAWL,EAAsBK,IAEnCA,GAAY,KAEdtoD,GAAO,eAAJ,OAAmB2sB,EAAnB,sBAAsC27B,EAE1C,GAAE7pE,YAiEL,IAAM8pE,EAAoB,oBAgB1B,SAASn+D,EAAawb,EAAQu8C,GAE5B,IAAII,EADJJ,EAAQA,GAASppB,IAMjB,IAJA,IAAM76C,EAAS0nB,EAAO1nB,OAClBsqE,EAAgB,KACdlgE,EAAQ,GAELrF,EAAI,EAAGA,EAAI/E,IAAU+E,EAAG,CAI/B,IAHAs/D,EAAY38C,EAAOuM,WAAWlvB,IAGd,OAAUs/D,EAAY,MAAQ,CAE5C,IAAKiG,EAAe,CAElB,GAAIjG,EAAY,MAAQ,EAEjBJ,GAAS,IAAM,GAAG75D,EAAMpF,KAAK,IAAM,IAAM,KAC9C,QACD,CAAM,GAAID,EAAI,IAAM/E,EAAQ,EAEtBikE,GAAS,IAAM,GAAG75D,EAAMpF,KAAK,IAAM,IAAM,KAC9C,QACD,CAGDslE,EAAgBjG,EAEhB,QACD,CAGD,GAAIA,EAAY,MAAQ,EACjBJ,GAAS,IAAM,GAAG75D,EAAMpF,KAAK,IAAM,IAAM,KAC9CslE,EAAgBjG,EAChB,QACD,CAGDA,EAAkE,OAArDiG,EAAgB,OAAU,GAAKjG,EAAY,MACzD,MAAUiG,IAEJrG,GAAS,IAAM,GAAG75D,EAAMpF,KAAK,IAAM,IAAM,KAMhD,GAHAslE,EAAgB,KAGZjG,EAAY,IAAM,CACpB,IAAKJ,GAAS,GAAK,EAAG,MACtB75D,EAAMpF,KAAKq/D,EACZ,MAAM,GAAIA,EAAY,KAAO,CAC5B,IAAKJ,GAAS,GAAK,EAAG,MACtB75D,EAAMpF,KACJq/D,GAAa,EAAM,IACP,GAAZA,EAAmB,IAEtB,MAAM,GAAIA,EAAY,MAAS,CAC9B,IAAKJ,GAAS,GAAK,EAAG,MACtB75D,EAAMpF,KACJq/D,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAEtB,KAAM,MAAIA,EAAY,SASrB,MAAM,IAAIljE,MAAM,sBARhB,IAAK8iE,GAAS,GAAK,EAAG,MACtB75D,EAAMpF,KACJq/D,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,IAItB,CACF,CAED,OAAOj6D,CACR,CA2BD,SAAS+3D,EAAen2D,GACtB,OAAOw0D,EAAO+J,YAxHhB,SAAsBv+D,GAMpB,IAFAA,GAFAA,EAAMA,EAAI9I,MAAM,KAAK,IAEX4iE,OAAOxY,QAAQ+c,EAAmB,KAEpCrqE,OAAS,EAAG,MAAO,GAE3B,KAAOgM,EAAIhM,OAAS,IAAM,GACxBgM,GAAY,IAEd,OAAOA,CACR,CA4G2Bw+D,CAAYx+D,GACvC,CAED,SAAS43D,EAAYniE,EAAKgpE,EAAKnqE,EAAQN,GACrC,IAAI+E,EACJ,IAAKA,EAAI,EAAGA,EAAI/E,KACT+E,EAAIzE,GAAUmqE,EAAIzqE,QAAY+E,GAAKtD,EAAIzB,UADpB+E,EAExB0lE,EAAI1lE,EAAIzE,GAAUmB,EAAIsD,GAExB,OAAOA,CACR,CAKD,SAASs8D,GAAYp4B,EAAKzjB,GACxB,OAAOyjB,aAAezjB,GACZ,MAAPyjB,GAAkC,MAAnBA,EAAItoC,aAA+C,MAAxBsoC,EAAItoC,YAAYK,MACzDioC,EAAItoC,YAAYK,OAASwkB,EAAKxkB,IACnC,CACD,SAAS4gE,GAAa34B,GAEpB,OAAOA,IAAQA,CAChB,CAID,IAAMo9B,GAAuB,WAG3B,IAFA,IAAMqE,EAAW,mBACXC,EAAQ,IAAIplE,MAAM,KACfR,EAAI,EAAGA,EAAI,KAAMA,EAExB,IADA,IAAM6lE,EAAU,GAAJ7lE,EACHqZ,EAAI,EAAGA,EAAI,KAAMA,EACxBusD,EAAMC,EAAMxsD,GAAKssD,EAAS3lE,GAAK2lE,EAAStsD,GAG5C,OAAOusD,CACR,CAV4B,GAa7B,SAAS/C,GAAoBiD,GAC3B,MAAyB,qBAAXj9D,OAAyBk9D,GAAyBD,CACjE,CAED,SAASC,KACP,MAAM,IAAI3pE,MAAM,uBACjB,2iBCrjEK,SAAU4pE,EAAwBC,GACtC,OAAO,SAACC,EAA2B18D,EAA2B2W,EAA8B6nC,GAC1F,MAAmB,mBAAfke,EAAItxB,QACNprC,EAAIuP,OAASktD,EACNje,KAEF7nC,GALT,CAOD,CAEK,SAAUgmD,EAA+BC,GAC7C,OAAO,SACLF,EACA18D,EACA2W,EACA6nC,GAEA,MAAmB,2BAAfke,EAAItxB,QACNprC,EAAIuP,OAASqtD,EACNpe,KAEF7nC,GAVT,CAYD,CAEK,SAAUkmD,EAAuBD,GACrC,IAAQH,EAAYG,EAAZH,QAER,OAAOK,EAAAA,EAAAA,IAAgB,CAACN,EAAwBC,GAAUE,EAA+BC,IAC1F,CAEK,SAAUG,EAAoBH,GAIlC,IAAQI,EAAcJ,EAAdI,UACFj1B,GAAkBk1B,EAAAA,EAAAA,IAAsB,CAAED,UAAAA,IAEhD,MAAO,CAAEE,mBADiBJ,EAAAA,EAAAA,IAAgB,CAACD,EAAuBD,GAAiB70B,IACvDA,gBAAAA,EAC7B,CC7Be,SAAAo1B,EAA8FC,GAAA,IAAhEC,EAAgE,EAAhEA,YAC5C,OAAOC,EAAAA,EAAAA,IAAqB,yCAAC,WAAOpyB,EAAS7M,EAAU1nB,GAA1B,+EAEZ,gBADIu0B,EAAXE,OADmB,yCAEUz0B,KAFV,UAItB0mD,EAJsB,sBAIH,IAAIzqE,MAAM,oDAJP,uBAMJyqE,EAAYnyB,GANR,cAMrBvd,EANqB,OAO3B0Q,EAAS9uB,OAASoe,EAPS,uBAQpBx2B,GARoB,4CAAD,0DAU7B,CAEe,SAAAomE,EAIfC,GAAA,IAHCC,EAGD,EAHCA,gBAIA,OAAOH,EAAAA,EAAAA,IAAqB,yCAAC,WAAOpyB,EAAS7M,EAAU1nB,GAA1B,+EAEZ,oBADIu0B,EAAXE,OADmB,yCAEcz0B,KAFd,UAItB8mD,EAJsB,sBAIC,IAAI7qE,MAAM,wDAJX,uBAMJ6qE,EAAgBvyB,GANZ,cAMrBvd,EANqB,OAO3B0Q,EAAS9uB,OAASoe,EAPS,uBAQpBx2B,GARoB,4CAAD,0DAU7B,CAEe,SAAAumE,EACdC,EACAC,GAEA,OAAON,EAAAA,EAAAA,IAAqB,yCAAa,WAAOpyB,EAAS7M,EAAU1nB,GAA1B,+EACpBu0B,EAAXE,SACOuyB,EAFwB,yCAEHhnD,KAFG,UAIlCinD,EAJkC,sBAInB,IAAIhrE,MAAJ,6BAAgC+qE,EAAtC,kBAJyB,uBAMlBC,EAAQ1yB,GANU,cAMjC37B,EANiC,OAQvC8uB,EAAS9uB,OAASA,EARqB,uBAShCpY,GATgC,4CAAb,0DAW7B,CAEK,SAAU0mE,EAAuBC,GACrC,IAAQT,EACNS,EADMT,YAAaI,EACnBK,EADmBL,gBAAiBM,EACpCD,EADoCC,gBAAiBC,EACrDF,EADqDE,uBAAwBC,EAC7EH,EAD6EG,oBAAqBC,EAClGJ,EADkGI,YAAaC,EAC/GL,EAD+GK,cAAeC,EAC9HN,EAD8HM,aAGhI,OAAOtB,EAAAA,EAAAA,IAAgB,CACrBS,EAAgC,CAAEE,gBAAAA,IAClCN,EAA4B,CAAEE,YAAAA,IAC9BK,EAAmE,kBAAmBK,GACtFL,EAA6E,yBAA0BM,GACvGN,EAAuE,sBAAuBO,GAC9FP,EAAiE,cAAeQ,GAChFR,EAA0C,mBAAoBS,GAC9DT,EAA0C,kBAAmBU,IAEhE,0kBCnEqBC,EAAAA,SAAAA,iCACpBjsE,SAAAA,EAAwFgrE,IAAA,mBAA1ExoC,EAA0E,EAA1EA,OAAQ9Z,EAAkE,EAAlEA,MAAkE,mBAChF,CAAE8Z,OAAQ,CAAE0pC,YAAa,EAAF,KAAO1pC,EAAO0pC,aAAd,IAA2BC,eAAgBC,EAAAA,GAAAA,UAA6B1jD,MAAAA,GACtG,oFAEuB,WAACsT,GAAD,+FACfiI,QAAQC,WADO,sKAIE,WAACmoC,GAAD,6FAClBC,EAAS,IAAIC,EAAAA,GAEbb,EAAmBjgE,KAAK+gE,oBAAoBH,GAC5CI,EAAmBhB,EAAuBC,GAChDY,EAAOjoE,KAAKooE,GAENC,EAAmBjC,EAAuBh/D,KAAK+2B,OAAO0pC,aAC5DI,EAAOjoE,KAAKqoE,IAENC,EAAwBlhE,KAAKmhE,yBAAyBP,KAE1DC,EAAOjoE,KAAKsoE,GAGRE,GAAWC,EAAAA,EAAAA,IAAmBR,GACpC7gE,KAAKshE,0BAA0BF,GAhBP,UAiBlBphE,KAAKuhE,gBAjBa,4KAoBG,gGACnBd,EAAgBzgE,KAAK+2B,OAArB0pC,YACRzgE,KAAKM,OAAO,CACVs+D,QAAS6B,EAAY7B,UAHI,kBAKpB6B,EAAY7B,SAAW,IALH,4IAQnBuC,SAAyB5wC,GAElC,OAvCmBiwC,CAAgCgB,EAAAA,ICAzCC,EAA2Bb,SAAAA,GACtC,IAAMX,EAAsC,CAC1CL,gBAAiB,WAAF,8BAAE,4GACRgB,EAAiBrrD,UAAY,CAAC2T,IAAAA,OAAY03C,EAAiBrrD,UAAU7V,YAAc,IAD3E,2CAAF,kDAAE,GAGjB8/D,YAAa,WAAF,8BAAE,4GAAaoB,EAAiBrrD,UAAY,CAAC2T,IAAAA,OAAY03C,EAAiBrrD,UAAU7V,YAAc,IAAhG,2CAAF,kDAAE,GACb4gE,cAAe,WAAF,8BAAE,yFACPoB,EAAAA,UAAAA,IAAAA,qBADO,2CAAF,kDAAE,GAGfnB,aAAc,WAAF,8BAAE,yFACNmB,EAAAA,UAAAA,IAAAA,qBADM,2CAAF,kDAAE,GAGdxB,gBAAiB,WAAF,8BAAE,WAAOrB,GAAP,4FACW+B,EAAiBV,gBAAgBrB,EAAInkC,OAAOr6B,SADvD,cACT8wB,EADS,yBAERA,GAFQ,2CAAF,mDAAE,GAIjBkvC,YAAa,WAAF,8BAAE,WAAOxB,GAAP,4FACW+B,EAAiBP,YAAYxB,EAAInkC,OAAOr6B,QAASw+D,EAAInkC,OAAOinC,SADvE,cACLC,EADK,yBAEJA,EAAQx+C,WAFJ,2CAAF,mDAAE,GAIbg9C,oBAAqB,WAAF,8BAAE,WAAOvB,GAAP,mFACd,QAAD,EAACA,EAAInkC,cAAJmnC,IAAAA,GAAAA,EAAYxhE,SAAY,QAAD,EAACw+D,EAAInkC,cAAJonC,IAAAA,GAAAA,EAAYzhE,QAAQzM,OAD9B,sBAEX8tE,EAAAA,UAAAA,IAAAA,cAA4B,WAFjB,uBAIOd,EAAiBR,oBAAoBvB,EAAInkC,OAAOr6B,SAJvD,cAIb8wB,EAJa,yBAKZA,GALY,2CAAF,mDAAE,GAOrBgvC,uBAAwB,WAAF,8BAAE,WAAOtB,GAAP,4FACF+B,EAAiBT,uBAAuBtB,EAAInkC,OAAOr6B,SADjD,cAChB0hE,EADgB,yBAEf,CAAE3+C,UAAW2+C,EAAM3+C,YAFJ,2CAAF,mDAAE,IAK1B,OAAO68C,CAhCF,ukBCJD,SAAU+B,EAAsCZ,GACpD,OAAO3B,EAAAA,EAAAA,IAAqB,yCAAC,WAAOZ,EAA6B18D,EAA4B8/D,GAAhE,4FACNb,EAAS/zB,QAAT+zB,EAAAA,CAAAA,EAChBvC,IAFsB,OACrBntD,EADqB,OAI3BvP,EAAIuP,OAASA,EAJc,2CAAD,0DAM7B,KCHYwwD,EAAAA,SAAAA,8IACDnB,SAAoBH,GAC5B,OAAOa,EAAwBb,EAChC,yCAESO,SAAyBP,GACjC,OAAOoB,EAAsCpB,EAC9C,OAPUsB,CAAgC1B,GCHhC2B,EAAAA,SAAAA,8IACDpB,SAAoBH,GAC5B,OCE4B,SAACA,EAAkCwB,GACjE,IAAMnC,EAAsC,CAC1CL,gBAAiB,WAAF,8BAAE,2GACQgB,EAAiBxrB,UADzB,uBACPz1C,EADO,EACPA,KADO,kBAER,CAACA,EAAK4V,YAFE,2CAAF,kDAAE,GAIjBiqD,YAAa,WAAF,8BAAE,2GACYoB,EAAiBxrB,UAD7B,uBACHz1C,EADG,EACHA,KADG,kBAEJ,CAACA,EAAK4V,YAFF,2CAAF,kDAAE,GAIb+qD,cAAe,WAAF,8BAAE,yFACPoB,EAAAA,UAAAA,IAAAA,qBADO,2CAAF,kDAAE,GAGfnB,aAAc,WAAF,8BAAE,yFACNmB,EAAAA,UAAAA,IAAAA,qBADM,2CAAF,kDAAE,GAGdxB,gBAAiB,WAAF,8BAAE,WAAOrB,GAAP,uFACTwD,EAAYxD,EAAInkC,OAAOr6B,QADd,sBAEOqhE,EAAAA,UAAAA,IAAAA,eAA6B,CAAErhE,QAAS,gCAF/C,uBAGQugE,EAAiBV,gBAAgBh3C,IAAAA,OAAYm5C,EAAUrsC,qBAH/D,oBAGPr2B,EAHO,EAGPA,MACE4V,WAAc5V,EAAKyjB,UAJd,sBAI+B,IAAIruB,MAAM,uCAJzC,cAKTwgB,EAAY,IAAIuT,EAAAA,GAAUnpB,EAAK4V,WAC/B6N,EAAY8F,IAAAA,OAAYvpB,EAAKyjB,WACnCi/C,EAAU3rC,aAAanhB,EAAW6N,GAPnB,kBAQRi/C,GARQ,4CAAF,mDAAE,GAUjBhC,YAAa,WAAF,8BAAE,WAAOxB,GAAP,4FACY+B,EAAiBP,YAAYxB,EAAInkC,OAAOr6B,SADpD,cACLmgC,EADK,yBAEJtX,IAAAA,OAAYsX,EAAS7gC,KAAKyjB,YAFtB,2CAAF,mDAAE,GAIb+8C,uBAAwB,WAAF,8BAAE,WAAOtB,GAAP,+FAChBuC,EAAWgB,IADK,sBAEDV,EAAAA,UAAAA,SAAAA,OAA0B,CAAErhE,QAAS,8BAA+Bk+B,KAAM,OAFzE,UAGhB8jC,EAAYxD,EAAInkC,OAAOr6B,QAHP,sBAIAqhE,EAAAA,UAAAA,IAAAA,eAA6B,CAAErhE,QAAS,gCAJxC,uBAKCugE,EAAiBV,gBAAgBh3C,IAAAA,OAAYm5C,EAAUrsC,qBALxD,oBAKdr2B,EALc,EAKdA,MACE4V,WAAc5V,EAAKyjB,UANP,uBAMwB,IAAIruB,MAAM,uCANlC,eAOhBwgB,EAAY,IAAIuT,EAAAA,GAAUnpB,EAAK4V,WAC/B6N,EAAY8F,IAAAA,OAAYvpB,EAAKyjB,WACnCi/C,EAAU3rC,aAAanhB,EAAW6N,GATZ,UAUKg+C,EAAS/zB,QAA2B,CAAEE,OAAQ,yBAA0B7S,OAAQ,KAVrF,eAUhB+lC,EAVgB,OAWhB6B,EAAO,IAAIx4B,EAAAA,GAAW22B,EAAYtB,WAXlB,UAYJmD,EAAK1tB,mBAAmBytB,EAAU75C,aAZ9B,eAYhBrmB,EAZgB,yBAaf,CAAEihB,UAAWjhB,IAbE,4CAAF,mDAAE,GAexBi+D,oBAAqB,WAAF,8BAAE,WAAOvB,GAAP,qGACd,QAAD,EAACA,EAAInkC,cAAJmnC,IAAAA,GAAAA,EAAYxhE,SAAY,QAAD,EAACw+D,EAAInkC,cAAJonC,IAAAA,GAAAA,EAAYzhE,QAAQzM,OAD9B,sBAEX8tE,EAAAA,UAAAA,IAAAA,cAA4B,WAFjB,OAUnB,IALMa,EAAU1D,EAAInkC,OAAOr6B,QACnBzM,EAAW2uE,EAAX3uE,OAEF4uE,EAAa,GAEV7pE,EAAI,EAAGA,EAAI/E,EAAQ+E,IAC1B6pE,EAAW5pE,KAAKswB,IAAAA,OAAY21C,EAAInkC,OAAOr6B,QAAQ1H,GAAGq9B,qBAXjC,gBAaS4qC,EAAiBR,oBAAoBoC,GAb9C,mBAaX9sD,EAbW,EAaXA,KAAK/V,EAbM,EAaNA,MAEH4V,YAAa,UAAA5V,EAAKy0B,kBAAL,eAAiBxgC,UAAWA,EAfhC,uBAe8C,IAAImB,MAAM2gB,GAfxD,QAmBnB,IAFMH,EAAY,IAAIuT,EAAAA,GAAUnpB,EAAK4V,WAE5B5c,EAAI,EAAGA,EAAI/E,EAAQ+E,IACpByqB,EAAY8F,IAAAA,OAAYvpB,EAAKy0B,WAAWz7B,IAC9C4pE,EAAQ5pE,GAAG+9B,aAAanhB,EAAW6N,GArBlB,yBAwBZm/C,GAxBY,4CAAF,mDAAE,IA2BvB,OAAOtC,CAxEF,CDFIwC,CAAiB7B,EAAkB5gE,KAAKoiE,uBAAuBxnE,KAAKoF,MAC5E,OAHUmiE,CAAmC3B,GEAnCkC,EAAAA,SAAAA,8IACD3B,SAAoBH,GAC5B,OCE+B,SAACA,EAAkCwB,GACpE,IAAMO,EAA2BlB,EAAwBb,GAUzD,OATA+B,EAAyBxC,uBAAzBwC,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MAAkD,WAAO9D,GAAP,uFAC1CuC,EAAWgB,IAD+B,sBAE3BV,EAAAA,UAAAA,SAAAA,OAA0B,CAAErhE,QAAS,8BAA+Bk+B,KAAM,OAF/C,uBAGtBqiC,EAAiBV,gBAAgBrB,EAAInkC,OAAOr6B,SAHtB,cAG1C8wB,EAH0C,gBAIrBiwC,EAAS/zB,QAA2B,CAAEE,OAAQ,yBAA0B7S,OAAQ,KAJ3D,cAI1C+lC,EAJ0C,OAK1C6B,EAAO,IAAIx4B,EAAAA,GAAW22B,EAAYtB,WALQ,UAM9BmD,EAAK1tB,mBAAmBzjB,EAAY3I,aANN,eAM1CrmB,EAN0C,yBAOzC,CAAEihB,UAAWjhB,IAP4B,4CAAlDwgE,OAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,CAAAA,GASOA,CAXF,CDFIC,CAAoBhC,EAAkB5gE,KAAKoiE,uBAAuBxnE,KAAKoF,MAC/E,OAHU0iE,CAAiClC,GECjCqC,EAAAA,SAAAA,8IACD9B,SAAoBH,GAC5B,OCE6B,SAACA,EAAgCwB,GAChE,IAAMnC,EAAmBwB,EAAwBb,GAcjD,OAbAX,EAAiBI,YAAjBJ,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MAA+B,WAAOpB,GAAP,8FACD+B,EAAiB5qD,KAAK6oD,EAAInkC,OAAOr6B,QAAS,QADzC,uBACrB+iB,EADqB,EACrBA,UADqB,kBAEtBA,GAFsB,2CAA/B68C,OAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,CAAAA,GAIAA,EAAiBE,uBAAjBF,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MAA0C,WAAOpB,GAAP,uFAClCuC,EAAWgB,IADuB,sBAEnBV,EAAAA,UAAAA,SAAAA,OAA0B,CAAErhE,QAAS,8BAA+Bk+B,KAAM,OAFvD,uBAGdqiC,EAAiBV,gBAAgBrB,EAAInkC,OAAOr6B,SAH9B,cAGlC8wB,EAHkC,gBAIbiwC,EAAS/zB,QAA2B,CAAEE,OAAQ,yBAA0B7S,OAAQ,KAJnE,cAIlC+lC,EAJkC,OAKlC6B,EAAO,IAAIx4B,EAAAA,GAAW22B,EAAYtB,WALA,UAMtBmD,EAAK1tB,mBAAmBzjB,EAAY3I,aANd,eAMlCrmB,EANkC,yBAOjC,CAAEihB,UAAWjhB,IAPoB,4CAA1C89D,OAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,CAAAA,GASOA,CAfF,CDFI6C,CAAkBlC,EAAkB5gE,KAAKoiE,uBAAuBxnE,KAAKoF,MAC7E,OAHU6iE,CAA+BrC,GEC/BuC,EAAoBnC,SAAAA,GAC/B,IAAMX,EAAsC,CAC1CL,gBAAiB,WAAF,8BAAE,yGACQgB,EAAiBvzB,QAAkB,CACxDE,OAAQ,yBACR7S,OAAQ,CAAC,IAHI,cACT5K,EADS,yBAKRA,GALQ,2CAAF,kDAAE,GAQjB0vC,YAAa,WAAF,8BAAE,yGACYoB,EAAiBvzB,QAAkB,CACxDE,OAAQ,yBACR7S,OAAQ,CAAC,IAHA,cACL5K,EADK,yBAKJA,GALI,2CAAF,kDAAE,GAQbwwC,cAAe,WAAF,8BAAE,yFACPoB,EAAAA,UAAAA,IAAAA,qBADO,2CAAF,kDAAE,GAGfnB,aAAc,WAAF,8BAAE,yFACNmB,EAAAA,UAAAA,IAAAA,qBADM,2CAAF,kDAAE,GAGdrB,YAAa,WAAF,8BAAE,WAAOxB,GAAP,iFACP,UAACA,EAAInkC,cAAL,OAACmnC,EAAYxhE,QADN,sBAEHqhE,EAAAA,UAAAA,IAAAA,cAA4B,WAFzB,uBAIWd,EAAiBP,YAAYxB,EAAInkC,OAAOr6B,SAJnD,cAILA,EAJK,yBAKJA,GALI,2CAAF,mDAAE,GAQb6/D,gBAAiB,WAAF,8BAAE,WAAOrB,GAAP,mFACX,UAACA,EAAInkC,cAAL,OAAConC,EAAYzhE,QADF,sBAEPqhE,EAAAA,UAAAA,IAAAA,cAA4B,WAFrB,cAITW,EAAYxD,EAAInkC,OAAOr6B,QAJd,SAKQugE,EAAiBV,gBAAgBmC,GALzC,cAKT7hC,EALS,yBAMRA,GANQ,2CAAF,mDAAE,GASjB2/B,uBAAwB,WAAF,8BAAE,WAAOtB,GAAP,mFAClB,UAACA,EAAInkC,cAAL,OAACsoC,EAAY3iE,QADK,sBAEdqhE,EAAAA,UAAAA,IAAAA,cAA4B,WAFd,cAIhBW,EAAYxD,EAAInkC,OAAOr6B,QAJP,SAKCugE,EAAiBzoC,gBAAgBkqC,GALlC,cAKhB7hC,EALgB,yBAMf,CAAEpd,UAAWod,IANE,2CAAF,mDAAE,GASxB4/B,oBAAqB,WAAF,8BAAE,WAAOvB,GAAP,qFACd,QAAD,EAACA,EAAInkC,cAAJuoC,IAAAA,GAAAA,EAAY5iE,SAAY,QAAD,EAACw+D,EAAInkC,cAAJwoC,IAAAA,GAAAA,EAAY7iE,QAAQzM,OAD9B,sBAEX8tE,EAAAA,UAAAA,IAAAA,cAA4B,WAFjB,cAIbnlC,EAAesiC,EAAInkC,OAAOr6B,QAJb,SAKIugE,EAAiBR,oBAAoB7jC,GALzC,cAKbiE,EALa,yBAMZA,GANY,2CAAF,mDAAE,IASvB,OAAOy/B,CA3DF,2kBCIMkD,EAAAA,SAAAA,iCACX5uE,SAAAA,EAAwFgrE,IAAA,mBAA1ExoC,EAA0E,EAA1EA,OAAQ9Z,EAAkE,EAAlEA,MAAkE,mBAChF,CAAE8Z,OAAQ,CAAE0pC,YAAa,EAAF,KAAO1pC,EAAO0pC,aAAd,IAA2BC,eAAgBC,EAAAA,GAAAA,UAA6B1jD,MAAAA,GACtG,oFAEuB,WAACsT,GAAD,+FACfiI,QAAQC,WADO,sKAIE,WAACmoC,GAAD,6EACxB5gE,KAAKojE,6BAA6BxC,GADV,SAElB5gE,KAAKqjE,YAAYzC,GAFC,2KAKG,gGACtB5gE,KAAKohE,SADiB,sBACDM,EAAAA,UAAAA,SAAAA,OAA0B,CAAErhE,QAAS,2CAA4Ck+B,KAAM,OADtF,cAEnBqgC,EAAY5+D,KAAK+2B,OAAO0pC,YAAxB7B,QAFmB,SAII5+D,KAAKohE,SAAS/zB,QAAyB,CACpEE,OAAQ,mBALiB,UAIrB+1B,EAJqB,OAQrBC,GAAsBC,EAAAA,EAAAA,IAAYF,EAAiBlmE,YAAckmE,EAA3CE,KAAAA,OAAmErxD,SAASmxD,EAAkB,IAAIlmE,SAAS,KACnIwhE,IAAY2E,EATW,sBAUnBE,EAAAA,GAAAA,mBAAiFF,oCAAAA,OAAAA,EAAkC3E,gBAAAA,OAAAA,IAVhG,cAY3B5+D,KAAKM,OAAO,CAAEs+D,QAAS2E,IACvBvjE,KAAKohE,SAASsC,KAAK,UAAW,CAAE9E,QAAS5+D,KAAKid,MAAM2hD,UACpD5+D,KAAKohE,SAASsC,KAAK,eAAgB1jE,KAAKid,MAAM2hD,SAdnB,kBAepB5+D,KAAKid,MAAM2hD,SAfS,yKAkBJ,WAACgC,GAAD,2FACjBX,EAAmB8C,EAAiBnC,GACpCI,EAAmBhB,EAAuBC,GAC1CiB,EAAwBc,EAAsCpB,IAC9DC,EAAS,IAAIC,EAAAA,IACZloE,KAAKooE,GACZH,EAAOjoE,KAAKsoE,GACNE,GAAWC,EAAAA,EAAAA,IAAmBR,GACpC7gE,KAAKshE,0BAA0BF,GARR,UASjBphE,KAAKuhE,gBATY,2LAYiB,WAACX,GAAD,iFACxCA,EAAiBlyB,GAAG,kBAApBkyB,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MAAuC,WAAO9wC,GAAP,sEACrC,EAAKsxC,SAASsC,KAAK,kBAAmB5zC,GADD,2CAAvC8wC,OAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,CAAAA,IAGAA,EAAiBlyB,GAAG,eAApBkyB,WAAAA,IAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,KAAAA,MAAoC,WAAOhC,GAAP,mFAC5B2E,GAAsBC,EAAAA,EAAAA,IAAY5E,GAAWA,EAAvB4E,KAAAA,OAAsCrxD,SAASysD,EAAS,IAAIxhE,SAAS,KAEjG,EAAKumE,UAAU,CACblD,YAAkBmD,EAAAA,EAAAA,CAAAA,EAAAA,EAAK7sC,OAAO0pC,aAAnB,IAAgC7B,QAAS2E,MAJpB,SAM5B,EAAKM,cAAcjD,GANS,2CAApCA,OAAAA,SAAAA,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,CAAAA,IAJwC,sGA5C/BuC,CAA8B3B,EAAAA,aCFrBT,EAAoB,gFAAnC,WAMNxB,GANM,uFACL1lB,EAKD0lB,EALC1lB,QACAuoB,EAID7C,EAJC6C,uBAKM0B,EAAmB,WACvB,OAAO5sB,EAAAA,GAAAA,cAAsB5uB,OAAO70B,KAAKomD,EAAS,OADpD,EAGuB,kBAAZA,EAVN,sBAUkC4pB,EAAAA,GAAAA,cAAwC,4BAV1E,cAWCM,EAAUD,IACV7D,EAAsC,CAC1CL,gBAAiB,WAAF,8BAAE,4GACR,CAACmE,EAAQxuD,UAAU8T,aADX,2CAAF,kDAAE,GAGjBm2C,YAAa,WAAF,8BAAE,4GAAY,CAACuE,EAAQxuD,UAAU8T,aAA/B,2CAAF,kDAAE,GAEbi3C,cAAe,WAAF,8BAAE,4GAAYzmB,GAAZ,2CAAF,kDAAE,GACf0mB,aAAc,WAAF,8BAAE,4GAAYr3C,IAAAA,OAAY66C,EAAQ57C,YAAhC,2CAAF,kDAAE,GAEd+3C,gBAAiB,WAAF,8BAAE,WAAOrB,GAAP,iFACX,UAACA,EAAInkC,cAAL,OAACmnC,EAAYxhE,QADF,sBAEPqhE,EAAAA,UAAAA,IAAAA,cAA4B,WAFrB,cAITvwC,EAAc0tC,EAAInkC,OAAOr6B,SACnBm2B,YAAYutC,GALT,kBAMR5yC,GANQ,2CAAF,mDAAE,GASjBkvC,YAAa,WAAF,8BAAE,WAAOxB,GAAP,iFACP,UAACA,EAAInkC,cAAL,OAAConC,EAAYzhE,QADN,sBAEHqhE,EAAAA,UAAAA,IAAAA,cAA4B,WAFzB,cAILsC,EAAYC,IAAAA,KAAAA,SAAmBpF,EAAInkC,OAAOr6B,QAAS0jE,EAAQ57C,WAJtD,kBAKJ67C,GALI,2CAAF,mDAAE,GAQb7D,uBAAwB,WAAF,8BAAE,WAAOtB,GAAP,qFAClB,UAACA,EAAInkC,cAAL,OAACsoC,EAAY3iE,QADK,sBAEdqhE,EAAAA,UAAAA,IAAAA,cAA4B,WAFd,UAIhBwC,EAAuB9B,IAJP,sBAKWV,EAAAA,UAAAA,SAAAA,OAA0B,CAAErhE,QAAS,8BAA+Bk+B,KAAM,OALrF,cAOhBpN,EAAc0tC,EAAInkC,OAAOr6B,SACnB2V,KAAK+tD,GARK,SAUJG,EAAqB72B,QAAgB,CACrDE,OAAQ,kBACR7S,OAAQ,CAACxR,IAAAA,OAAYiI,EAAY3I,gBAZb,cAUhBlT,EAVgB,yBAcf,CAAE8N,UAAW9N,IAdE,4CAAF,mDAAE,GAiBxB8qD,oBAAqB,WAAF,8BAAE,WAAOvB,GAAP,2FACd,QAAD,EAACA,EAAInkC,cAAJuoC,IAAAA,GAAAA,EAAY5iE,SAAY,QAAD,EAACw+D,EAAInkC,cAAJwoC,IAAAA,GAAAA,EAAY7iE,QAAQzM,OAD9B,sBAEX8tE,EAAAA,UAAAA,IAAAA,cAA4B,WAFjB,OAKbyC,EAAI,QAAGtF,EAAAA,EAAInkC,cAAP0pC,IAAAA,OAAA,EAAGvF,EAAYx+D,QALN,UAMF8jE,GAAQ,IANN,IAMnB,IAAK,EAAL,qBAAWE,EAAkB,QACPA,EACR7tC,YAAYutC,EARP,wDAUZI,GAVY,2CAAF,mDAAE,IAvDlB,kBAqEElE,GArEF,4oBCcMqE,EAAAA,SAAAA,iCACX/vE,SAAAA,EAAiGgrE,IAAA,mBAAnFxoC,EAAmF,EAAnFA,OAAQ9Z,EAA2E,EAA3EA,MAA2E,mBACzF,CAAE8Z,OAAQ,CAAE0pC,YAAa,EAAF,KAAO1pC,EAAO0pC,aAAd,IAA2BC,eAAgBC,EAAAA,GAAAA,UAA6B1jD,MAAAA,GACtG,+EAWkB,sFACZjd,KAAKid,MAAMjM,WADC,sBAET0wD,EAAAA,UAAAA,SAAAA,OAA0B,CAAErhE,QAAS,4EAA6Ek+B,KAAM,OAF/G,uBAGXv+B,KAAK6jE,cAAc7jE,KAAKid,MAAMjM,YAHnB,gCAIVhR,KAAKkkE,qBAAqB72B,QAA2B,CAAEE,OAAQ,kBAJrD,0KAOO,WAACsM,GAAD,sGACOknB,EAAoB,CAAElnB,QAAAA,EAASuoB,uBAAwBpiE,KAAKoiE,uBAAuBxnE,KAAKoF,QAD/F,cAClBigE,EADkB,OAGlBe,EAAmBhB,EAAuBC,GAE1CY,EAAS,IAAIC,EAAAA,GALK,EAMM5B,EAAoBl/D,KAAK+2B,OAAO0pC,aAAtDpB,EANgB,EAMhBA,kBACRwB,EAAOjoE,KAAKoH,KAAKukE,4BACjB1D,EAAOjoE,KAAKoH,KAAKwkE,wBACjB3D,EAAOjoE,KAAKooE,GACZH,EAAOjoE,KAAKymE,GAEN+B,GAAWC,EAAAA,EAAAA,IAAmBR,GAEpC7gE,KAAKshE,0BAA0BF,GAdP,UAgBlBphE,KAAKuhE,gBAhBa,4KAmBA,WAAC7mC,GAAD,yEACnB16B,KAAKkkE,qBADc,sBACcxC,EAAAA,UAAAA,SAAAA,OAA0B,CAAErhE,QAAS,8BAA+Bk+B,KAAM,OADxF,uBAEEv+B,KAAKkkE,qBAAqB72B,QAAyB,CAAEE,OAAQ,qBAF/D,mBAGJ7S,EAAO1pB,WAHH,iCAIhBhR,KAAK6jE,cAAcnpC,EAAO1pB,YAJV,mBAKtBhR,KAAKkkE,qBALiB,UAMJlkE,KAAKkkE,qBAAqB72B,QAA2B,CAAEE,OAAQ,oBAN3D,0BAMpBzd,SANoB,WAKI4zC,KALJ,UAKS,kBALT,gLAWF,WAAChpC,GAAD,iFACjB16B,KAAKkkE,qBADY,sBACgBxC,EAAAA,UAAAA,SAAAA,OAA0B,CAAErhE,QAAS,8BAA+Bk+B,KAAM,OAD1F,cAEhBkiC,EAAczgE,KAAKykE,eAAe/pC,EAAOkkC,SAC/C5+D,KAAKM,OAAO,CACVs+D,QAAS,YAEX5+D,KAAK2jE,UAAU,CAAElD,YAAAA,IANK,SAOAzgE,KAAKkkE,qBAAqB72B,QAAyB,CAAEE,OAAQ,qBAP7D,cAOhBsM,EAPgB,iBAQhB75C,KAAK6jE,cAAchqB,GARH,4KAWK,8FACtB75C,KAAKkkE,qBADiB,sBACWxC,EAAAA,UAAAA,SAAAA,OAA0B,CAAErhE,QAAS,8BAA+Bk+B,KAAM,OADrF,uBAENv+B,KAAKkkE,qBAAqB72B,QAAyB,CACtEE,OAAQ,YACR7S,OAAQ,KAJiB,UAErBgqC,EAFqB,OAMnBjE,EAAgBzgE,KAAK+2B,OAArB0pC,YACO,OAAXiE,EAPuB,sBAQnBjB,EAAAA,GAAAA,mBAAmGhD,sDAAAA,OAAAA,EAAYtB,YAR5F,cAS3Bn/D,KAAKM,OAAO,CAAEs+D,QAAS6B,EAAY7B,UAC/B5+D,KAAKid,MAAM2hD,UAAY6B,EAAY7B,UACrC5+D,KAAKohE,SAASsC,KAAK,eAAgB1jE,KAAKid,MAAM2hD,SAC9C5+D,KAAKohE,SAASsC,KAAK,UAAW,CAAE9E,QAAS5+D,KAAKid,MAAM2hD,WAZ3B,kBAcpB5+D,KAAKid,MAAM2hD,SAdS,6IAiBrB2F,WAAwB,WACxBI,EAA4C,CAChDC,kBAAmB,WAAF,8BAAE,WAAO/F,GAAP,yFACZA,EAAInkC,OADQ,sBACMgnC,EAAAA,UAAAA,IAAAA,cAA4B,0BADlC,YAE0D7C,EAAInkC,OAAvEkkC,EAFS,EAETA,QAASiG,EAFA,EAEAA,UAAWC,EAFX,EAEWA,QAASC,EAFpB,EAEoBA,kBAAmBC,EAFvC,EAEuCA,eAEnDpG,EAJY,sBAIG8C,EAAAA,UAAAA,IAAAA,cAA4B,kCAJ/B,UAKZoD,GAA8B,IAAnBA,EAAQlxE,OALP,sBAK2B8tE,EAAAA,UAAAA,IAAAA,cAA4B,kCALvD,UAMZsD,EANY,sBAMUtD,EAAAA,UAAAA,IAAAA,cAA4B,yCANtC,OAOjB,EAAKuD,SAAS,CACZvE,eAAgBC,EAAAA,GAAAA,OAChB/B,QAAAA,EACAsG,QAAsB,OAAdF,QAAA,IAAAA,OAAA,EAAAA,EAAgBG,SAAU,MAClCC,YAA0B,OAAdJ,QAAA,IAAAA,OAAA,EAAAA,EAAgBpwE,OAAQ,SACpCywE,YAAaR,EACb1F,UAAW2F,EAAQ,GACnBQ,eAAgC,OAAjBP,QAAA,IAAAA,OAAA,EAAAA,EAAoB,KAAM,KAd1B,4CAAF,mDAAE,GAiBnBQ,kBAAmB,WAAF,8BAAE,WAAO1G,GAAP,yEACZA,EAAInkC,OADQ,sBACMgnC,EAAAA,UAAAA,IAAAA,cAA4B,0BADlC,UAEZ7C,EAAInkC,OAAOkkC,QAFC,sBAEc8C,EAAAA,UAAAA,IAAAA,cAA4B,mBAF1C,uBAGX,EAAK8D,YAAY3G,EAAInkC,QAHV,2CAAF,mDAAE,IAOrB,gBdpCsG+qC,GAAA,IAA5Db,EAA4D,EAA5DA,kBAAmBW,EAAyC,EAAzCA,kBAC/D,OAAOtG,EAAAA,EAAAA,IAAgB,CACrBY,EAA2D,iBAAkB+E,GAC7E/E,EAAuD,oBAAqB0F,IAE/E,Cc8BiCG,CAA4Bf,EAE3D,qCAEOH,WAAoB,WACpBmB,EAAoC,CACxCC,iBAAkB,WAAF,8BAAE,WAAO/G,GAAP,+EACXA,EAAInkC,OADO,sBACOgnC,EAAAA,UAAAA,IAAAA,cAA4B,0BADnC,UAEX7C,EAAInkC,OAAO1pB,WAFA,sBAEkB0wD,EAAAA,UAAAA,IAAAA,cAA4B,sBAF9C,cAGR1wD,EAAe6tD,EAAInkC,OAAnB1pB,WAHQ,SAIV,EAAK60D,cAAc,CAAE70D,WAAAA,IAJX,2CAAF,mDAAE,IAOpB,OdtCY,SAA8D80D,GAAA,IAApCF,EAAoC,EAApCA,iBACxC,OAAO3G,EAAAA,EAAAA,IAAgB,CAACY,EAA0D,gBAAiB+F,IACpG,CcoCUG,CAAwBJ,EAChC,OAtHUrB,CAAiC9C,EAAAA,YAAjC8C,EAAAA,sBAAAA,yCAKyB,WAAO5pC,GAAP,mFAI5BsrC,EAAkB,IAAI1B,EAAyB,CAAEvtC,OAAQ,CAAE0pC,YAAa/lC,EAAO+lC,eAJnD,SAK5BuF,EAAgBnC,cAAcnpC,EAAOmf,SALT,gCAM3BmsB,GAN2B,8FALzB1B,QClBA2B,EAAAA,WAGX1xE,SAAAA,EAAY6sE,IAAkC,gBAAA8E,EAAAA,EAAAA,GAAAA,KAAAA,gBAAAA,GAC5ClmE,KAAKohE,SAAWA,CACjB,wFAE2B,yGACHphE,KAAKohE,SAAS/zB,QAAkB,CACrDE,OAAQ,kBACR7S,OAAQ,CAAC,IAHe,cACpB5K,EADoB,yBAKnBA,GALmB,mLAQO,WAACqB,GAAD,8FACLnxB,KAAKohE,SAAS/zB,QAA+B,CACvEE,OAAQ,yBACR7S,OAAQ,CACNr6B,QAAS8wB,KAJoB,uBACzB/N,EADyB,EACzBA,UADyB,kBAO1B,CAAEA,UAAAA,IAPwB,6KAUP,WAAC+N,GAAD,4FACOnxB,KAAKohE,SAAS/zB,QAAQ,CACrDE,OAAQ,kBACR7S,OAAQ,CACNr6B,QAAS8wB,KAJa,cACpBg1C,EADoB,yBAOnBA,GAPmB,iLAUI,WAAC5pC,GAAD,4FACIv8B,KAAKohE,SAAS/zB,QAAQ,CACtDE,OAAQ,sBACR7S,OAAQ,CACNr6B,QAASk8B,KAJiB,cACxB6pC,EADwB,yBAOvBA,GAPuB,yKAUR,WAACzmE,GAAD,4FACCK,KAAKohE,SAAS/zB,QAAoB,CACvDE,OAAQ,cACR7S,OAAQ,CACNr6B,QAASV,KAJS,cAChB6gC,EADgB,yBAOfA,GAPe,qKAUJ,WAAI/Q,GAAJ,4FACGzvB,KAAKohE,SAAS/zB,QAAW5d,GAD5B,cACZ/d,EADY,yBAEXA,GAFW,2GAvDTu0D,uCCEb,IAAIhoB,EAAUC,EAAAA,OAAAA,OA+GdC,EAAOvgD,QA9GP,SAAewgD,GACb,GAAIA,EAASxqD,QAAU,IAAO,MAAM,IAAIN,UAAU,qBAElD,IADA,IAAI+qD,EAAW,IAAIhrD,WAAW,KACrB2e,EAAI,EAAGA,EAAIqsC,EAASzqD,OAAQoe,IACnCqsC,EAASrsC,GAAK,IAEhB,IAAK,IAAIrZ,EAAI,EAAGA,EAAIylD,EAASxqD,OAAQ+E,IAAK,CACxC,IAAIwP,EAAIi2C,EAASE,OAAO3lD,GACpB4lD,EAAKp2C,EAAE0f,WAAW,GACtB,GAAqB,MAAjBw2B,EAASE,GAAe,MAAM,IAAIjrD,UAAU6U,EAAI,iBACpDk2C,EAASE,GAAM5lD,CAChB,CACD,IAAIiS,EAAOwzC,EAASxqD,OAChB4qD,EAASJ,EAASE,OAAO,GACzBG,EAAStpD,KAAK04C,IAAIjjC,GAAQzV,KAAK04C,IAAI,KACnC6Q,EAAUvpD,KAAK04C,IAAI,KAAO14C,KAAK04C,IAAIjjC,GAyCvC,SAAS+zC,EAAcrX,GACrB,GAAsB,kBAAXA,EAAuB,MAAM,IAAIh0C,UAAU,mBACtD,GAAsB,IAAlBg0C,EAAO1zC,OAAgB,OAAOqqD,EAAQzxB,MAAM,GAKhD,IAJA,IAAIoyB,EAAM,EAENC,EAAS,EACTjrD,EAAS,EACN0zC,EAAOsX,KAASJ,GACrBK,IACAD,IAMF,IAHA,IAAI9xB,GAAUwa,EAAO1zC,OAASgrD,GAAOH,EAAU,IAAO,EAClDK,EAAO,IAAIzrD,WAAWy5B,GAEnBwa,EAAOsX,IAAM,CAElB,IAAIG,EAAQV,EAAS/W,EAAOzf,WAAW+2B,IAEvC,GAAc,MAAVG,EAAiB,OAErB,IADA,IAAIpmD,EAAI,EACCqmD,EAAMlyB,EAAO,GAAc,IAAViyB,GAAepmD,EAAI/E,KAAqB,IAATorD,EAAaA,IAAOrmD,IAC3EomD,GAAUn0C,EAAOk0C,EAAKE,KAAU,EAChCF,EAAKE,GAAQD,EAAQ,MAAS,EAC9BA,EAASA,EAAQ,MAAS,EAE5B,GAAc,IAAVA,EAAe,MAAM,IAAIhqD,MAAM,kBACnCnB,EAAS+E,EACTimD,GACD,CAGD,IADA,IAAIK,EAAMnyB,EAAOl5B,EACVqrD,IAAQnyB,GAAsB,IAAdgyB,EAAKG,IAC1BA,IAEF,IAAIC,EAAMjB,EAAQkB,YAAYN,GAAU/xB,EAAOmyB,IAC/CC,EAAI79C,KAAK,EAAM,EAAGw9C,GAElB,IADA,IAAI7sC,EAAI6sC,EACDI,IAAQnyB,GACboyB,EAAIltC,KAAO8sC,EAAKG,KAElB,OAAOC,CACR,CAMD,MAAO,CACLvpD,OAzFF,SAAiB2xC,GAEf,IADInuC,MAAMC,QAAQkuC,IAAWA,aAAkBj0C,cAAci0C,EAAS2W,EAAQxqD,KAAK6zC,KAC9E2W,EAAQmB,SAAS9X,GAAW,MAAM,IAAIh0C,UAAU,mBACrD,GAAsB,IAAlBg0C,EAAO1zC,OAAgB,MAAO,GAMlC,IAJA,IAAIirD,EAAS,EACTjrD,EAAS,EACTyrD,EAAS,EACTC,EAAOhY,EAAO1zC,OACXyrD,IAAWC,GAA2B,IAAnBhY,EAAO+X,IAC/BA,IACAR,IAMF,IAHA,IAAI/xB,GAASwyB,EAAOD,GAAUX,EAAU,IAAO,EAC3Ca,EAAM,IAAIlsD,WAAWy5B,GAElBuyB,IAAWC,GAAM,CAItB,IAHA,IAAIP,EAAQzX,EAAO+X,GAEf1mD,EAAI,EACC6mD,EAAM1yB,EAAO,GAAc,IAAViyB,GAAepmD,EAAI/E,KAAqB,IAAT4rD,EAAaA,IAAO7mD,IAC3EomD,GAAU,IAAMQ,EAAIC,KAAU,EAC9BD,EAAIC,GAAQT,EAAQn0C,IAAU,EAC9Bm0C,EAASA,EAAQn0C,IAAU,EAE7B,GAAc,IAAVm0C,EAAe,MAAM,IAAIhqD,MAAM,kBACnCnB,EAAS+E,EACT0mD,GACD,CAGD,IADA,IAAII,EAAM3yB,EAAOl5B,EACV6rD,IAAQ3yB,GAAqB,IAAbyyB,EAAIE,IACzBA,IAIF,IADA,IAAI7/C,EAAM4+C,EAAOkB,OAAOb,GACjBY,EAAM3yB,IAAQ2yB,EAAO7/C,GAAOw+C,EAASE,OAAOiB,EAAIE,IACvD,OAAO7/C,CACR,EAmDC++C,aAAcA,EACdjpD,OARF,SAAiB4lB,GACf,IAAI5nB,EAASirD,EAAarjC,GAC1B,GAAI5nB,EAAU,OAAOA,EACrB,MAAM,IAAIqB,MAAM,WAAa6V,EAAO,aACrC,EAMF,wBCrHD,IAAIupD,EAAQjW,EAAQ,OAGpBC,EAAOvgD,QAAUu2D,EAFF,gGCoBfv2D,EAAQ,GAZR,SAAoBihB,GAEZ,IAAMwnD,EAAW/9C,OAAO70B,KAAKorB,GAC7BwnD,EAAS/zD,UACT,IAAMjD,EAAMg3D,EAASjpE,SAAS,OAC9B,OAAmB,IAAfiS,EAAIzb,OACG4N,OAAO,GAEXA,OAAO,KAAD,OAAM6N,GAG1B,EAkCDzR,EAAQ,GAVR,SAAoB+O,EAAKk3C,GAEjB,IAAMx0C,EAAM1C,EAAIvP,SAAS,IACnB1J,EAAS40B,OAAO70B,KAAK4b,EAAI5P,SAAiB,EAARokD,EAAW,KAAK5mD,MAAM,EAAW,EAAR4mD,GAAY,OAE7E,OADAnwD,EAAO4e,UACA5e,CAId,iMCpDG4yE,EAAmBtmE,MAAQA,KAAKsmE,kBAAqBjyE,OAAOC,OAAU,SAASsxD,EAAGjzC,EAAGiD,EAAG2K,QAC7EjnB,IAAPinB,IAAkBA,EAAK3K,GAC3BvhB,OAAOo2B,eAAem7B,EAAGrlC,EAAI,CAAEy4C,YAAY,EAAMh3D,IAAK,WAAa,OAAO2Q,EAAEiD,EAAK,GACpF,EAAK,SAASgwC,EAAGjzC,EAAGiD,EAAG2K,QACTjnB,IAAPinB,IAAkBA,EAAK3K,GAC3BgwC,EAAErlC,GAAM5N,EAAEiD,EACb,GACG2wD,EAAsBvmE,MAAQA,KAAKumE,qBAAwBlyE,OAAOC,OAAU,SAASsxD,EAAG7sD,GACxF1E,OAAOo2B,eAAem7B,EAAG,UAAW,CAAEoT,YAAY,EAAM/8D,MAAOlD,GAClE,EAAI,SAAS6sD,EAAG7sD,GACb6sD,EAAC,QAAc7sD,CAClB,GACGytE,EAAcxmE,MAAQA,KAAKwmE,YAAe,SAAUC,EAAY9M,EAAQ/kD,EAAK8xD,GAC7E,IAA2Hl/D,EAAvHkH,EAAImnD,UAAUjiE,OAAQ4a,EAAIE,EAAI,EAAIirD,EAAkB,OAAT+M,EAAgBA,EAAOryE,OAAOsyE,yBAAyBhN,EAAQ/kD,GAAO8xD,EACrH,GAAuB,kBAAZE,SAAoD,oBAArBA,QAAQC,SAAyBr4D,EAAIo4D,QAAQC,SAASJ,EAAY9M,EAAQ/kD,EAAK8xD,QACpH,IAAK,IAAI/tE,EAAI8tE,EAAW7yE,OAAS,EAAG+E,GAAK,EAAGA,KAAS6O,EAAIi/D,EAAW9tE,MAAI6V,GAAKE,EAAI,EAAIlH,EAAEgH,GAAKE,EAAI,EAAIlH,EAAEmyD,EAAQ/kD,EAAKpG,GAAKhH,EAAEmyD,EAAQ/kD,KAASpG,GAChJ,OAAOE,EAAI,GAAKF,GAAKna,OAAOo2B,eAAekvC,EAAQ/kD,EAAKpG,GAAIA,CAC/D,EACGs4D,EAAgB9mE,MAAQA,KAAK8mE,cAAiB,SAAU99D,GACxD,GAAIA,GAAOA,EAAI+9D,WAAY,OAAO/9D,EAClC,IAAI0I,EAAS,CAAC,EACd,GAAW,MAAP1I,EAAa,IAAK,IAAI4M,KAAK5M,EAAe,YAAN4M,GAAmBvhB,OAAO6G,eAAeC,KAAK6N,EAAK4M,IAAI0wD,EAAgB50D,EAAQ1I,EAAK4M,GAE5H,OADA2wD,EAAmB70D,EAAQ1I,GACpB0I,CACV,EACGs1D,EAAmBhnE,MAAQA,KAAKgnE,iBAAoB,SAAUh+D,GAC9D,OAAQA,GAAOA,EAAI+9D,WAAc/9D,EAAM,CAAE,QAAWA,EACvD,EACD3U,OAAOo2B,eAAe7sB,EAAS,aAAc,CAAE3B,OAAO,IACtD2B,EAAQ+qB,qBAAuB/qB,EAAQ8qB,YAAc9qB,EAAQ4qB,UAAY5qB,EAAQqpE,aAAerpE,EAAQspE,aAAetpE,EAAQupE,WAAavpE,EAAQwpE,WAAaxpE,EAAQypE,gBAAa,EACtL,IAAMC,EAAUN,EAAgB9oB,EAAQ,QAClCqpB,EAASP,EAAgB9oB,EAAQ,QAEjC7N,EAAWy2B,EAAa5oB,EAAQ,QAEhCspB,EAAc,IAD+B,oBAAhBC,YAA6Bp3B,EAASo3B,YAAcA,aAC3C,QAAS,CAAEC,OAAO,IAO9D9pE,EAAQypE,WANR,SAAoBprE,GAIhB,MAHqB,kBAAVA,IACPA,EAAQqsB,OAAO70B,KAAKwI,EAAO,SAExBsrE,EAAOl9C,QAAQ10B,OAAO2yB,OAAO70B,KAAKwI,GAC5C,EAKD2B,EAAQwpE,WAHR,SAAoBnrE,GAChB,OAAOqsB,OAAO70B,KAAK8zE,EAAOl9C,QAAQ30B,OAAOuG,GAC5C,EAED,IAAM0rE,EAAiB,KACjBR,EAAAA,SAAAA,qBACF,WAAY9mE,GAAS,wBACjB,cAAMA,IACDunE,UAAY,GACjB,EAAKC,gBAAkBxnE,EAHN,CAIpB,yCACD,SAAeynE,GACX9nE,KAAK4nE,UAAUh0C,OAAO,EAAG,EAAGk0C,GAE5B9nE,KAAKK,QAAUL,KAAK6nE,gBAAkB,KAAO7nE,KAAK4nE,UAAUxvD,KAAK,IACpE,OAVC+uD,GAAmBpyE,QAYzB6I,EAAQupE,WAAaA,MAEfD,EAAAA,WACF,aAAc,UACVlnE,KAAK6e,IAAMyJ,OAAOkE,MAAMm7C,GACxB3nE,KAAKpM,OAAS,CACjB,sCACD,WACQoM,KAAK6e,IAAIjrB,OAAS,GAAKoM,KAAKpM,SAC5BoM,KAAK6e,IAAMyJ,OAAO2B,OAAO,CAACjqB,KAAK6e,IAAKyJ,OAAOkE,MAAMm7C,KAExD,wBACD,SAAQ1rE,GACJ+D,KAAK+nE,cACL/nE,KAAK6e,IAAIy9C,WAAWrgE,EAAO+D,KAAKpM,QAChCoM,KAAKpM,QAAU,CAClB,yBACD,SAASqI,GACL+D,KAAK+nE,cACL/nE,KAAK6e,IAAI29C,cAAcvgE,EAAO+D,KAAKpM,QACnCoM,KAAKpM,QAAU,CAClB,yBACD,SAASqI,GACL+D,KAAK+nE,cACL/nE,KAAK6e,IAAI9nB,cAAckF,EAAO+D,KAAKpM,QACnCoM,KAAKpM,QAAU,CAClB,yBACD,SAASqI,GACL+D,KAAK+nE,cACL/nE,KAAKgoE,YAAY1/C,OAAO70B,KAAK,IAAI6zE,EAAQj9C,QAAQpuB,GAAOolD,QAAQ,KAAM,IACzE,0BACD,SAAUplD,GACN+D,KAAK+nE,cACL/nE,KAAKgoE,YAAY1/C,OAAO70B,KAAK,IAAI6zE,EAAQj9C,QAAQpuB,GAAOolD,QAAQ,KAAM,KACzE,0BACD,SAAUplD,GACN+D,KAAK+nE,cACL/nE,KAAKgoE,YAAY1/C,OAAO70B,KAAK,IAAI6zE,EAAQj9C,QAAQpuB,GAAOolD,QAAQ,KAAM,KACzE,0BACD,SAAUplD,GACN+D,KAAK+nE,cACL/nE,KAAKgoE,YAAY1/C,OAAO70B,KAAK,IAAI6zE,EAAQj9C,QAAQpuB,GAAOolD,QAAQ,KAAM,KACzE,4BACD,SAAY3tD,GAERsM,KAAK6e,IAAMyJ,OAAO2B,OAAO,CACrB3B,OAAO70B,KAAKuM,KAAK6e,IAAI5d,SAAS,EAAGjB,KAAKpM,SACtCF,EACA40B,OAAOkE,MAAMm7C,KAEjB3nE,KAAKpM,QAAUF,EAAOE,MACzB,4BACD,SAAYgM,GACRI,KAAK+nE,cACL,IAAM30E,EAAIk1B,OAAO70B,KAAKmM,EAAK,QAC3BI,KAAKioE,SAAS70E,EAAEQ,QAChBoM,KAAKgoE,YAAY50E,EACpB,gCACD,SAAgB2e,GACZ/R,KAAKgoE,YAAY1/C,OAAO70B,KAAKse,GAChC,2BACD,SAAWA,EAAO0sD,GACdz+D,KAAK+nE,cACL/nE,KAAKioE,SAASl2D,EAAMne,QAFF,UAGCme,GAHD,IAGlB,IAAK,EAAL,qBAA0B,KAAfgb,EAAe,QACtB/sB,KAAK+nE,cACLtJ,EAAG1xC,EACN,CANiB,+BAOrB,wBACD,WACI,OAAO/sB,KAAK6e,IAAI5d,SAAS,EAAGjB,KAAKpM,OACpC,OArECszE,GAwEN,SAASgB,EAAmBvO,EAAQwO,EAAaC,GAC7C,IAAMC,EAAiBD,EAAmBnsE,MAC1CmsE,EAAmBnsE,MAAQ,WACvB,IAAI,2BADgCwzB,EAChC,yBADgCA,EAChC,gBACA,OAAO44C,EAAe3P,MAAM14D,KAAMyvB,EAUrC,CARD,MAAOj2B,GACH,GAAIA,aAAarF,WAAY,CACzB,IAAMoqC,EAAO/kC,EAAE+kC,KACf,GAAI,CAAC,2BAA4B,oBAAoB3I,QAAQ2I,IAAS,EAClE,MAAM,IAAI4oC,EAAW,+CAE5B,CACD,MAAM3tE,CACT,CACJ,CACJ,CAjBDoE,EAAQspE,aAAeA,MAkBjBD,EAAAA,WACF,WAAYpoD,GAAK,UACb7e,KAAK6e,IAAMA,EACX7e,KAAK9L,OAAS,CACjB,iCACD,WACI,IAAM+H,EAAQ+D,KAAK6e,IAAIo8C,UAAUj7D,KAAK9L,QAEtC,OADA8L,KAAK9L,QAAU,EACR+H,CACV,wBACD,WACI,IAAMA,EAAQ+D,KAAK6e,IAAIs8C,aAAan7D,KAAK9L,QAEzC,OADA8L,KAAK9L,QAAU,EACR+H,CACV,wBACD,WACI,IAAMA,EAAQ+D,KAAK6e,IAAIhoB,aAAamJ,KAAK9L,QAEzC,OADA8L,KAAK9L,QAAU,EACR+H,CACV,wBACD,WACI,IAAM4iB,EAAM7e,KAAKsoE,WAAW,GAC5B,OAAO,IAAIhB,EAAQj9C,QAAQxL,EAAK,KACnC,yBACD,WACI,IAAMA,EAAM7e,KAAKsoE,WAAW,IAC5B,OAAO,IAAIhB,EAAQj9C,QAAQxL,EAAK,KACnC,yBACD,WACI,IAAMA,EAAM7e,KAAKsoE,WAAW,IAC5B,OAAO,IAAIhB,EAAQj9C,QAAQxL,EAAK,KACnC,yBACD,WACI,IAAMA,EAAM7e,KAAKsoE,WAAW,IAC5B,OAAO,IAAIhB,EAAQj9C,QAAQxL,EAAK,KACnC,2BACD,SAAW/d,GACP,GAAId,KAAK9L,OAAS4M,EAAMd,KAAK6e,IAAIjrB,OAC7B,MAAM,IAAIuzE,EAAJ,iCAAyCrmE,EAAzC,yBAEV,IAAM4Q,EAAS1R,KAAK6e,IAAI5hB,MAAM+C,KAAK9L,OAAQ8L,KAAK9L,OAAS4M,GAEzD,OADAd,KAAK9L,QAAU4M,EACR4Q,CACV,2BACD,WACI,IAAM5Q,EAAMd,KAAKuoE,UACX1pD,EAAM7e,KAAKsoE,WAAWxnE,GAC5B,IAEI,OAAO0mE,EAAY9xE,OAAOmpB,EAI7B,CAFD,MAAOrlB,GACH,MAAM,IAAI2tE,EAAJ,uCAA+C3tE,GACxD,CACJ,+BACD,SAAesH,GACX,OAAO,IAAIzN,WAAW2M,KAAKsoE,WAAWxnE,GACzC,0BACD,SAAU29D,GAGN,IAFA,IAAM39D,EAAMd,KAAKuoE,UACX72D,EAASvY,QACNR,EAAI,EAAGA,EAAImI,IAAOnI,EACvB+Y,EAAO9Y,KAAK6lE,KAEhB,OAAO/sD,CACV,OAjECu1D,GAkGN,SAASuB,EAAsBltD,GAC3B,OAAOA,EAAOgjC,OAAO,GAAGmqB,cAAgBntD,EAAOre,MAAM,EACxD,CACD,SAASyrE,EAAehvD,EAAQouD,EAAW7rE,EAAO0sE,EAAWC,GACzD,IAEI,GAAyB,kBAAdD,EACPC,EAAO,QAAD,OAASJ,EAAsBG,KAAc1sE,QAElD,GAAI0sE,aAAqBxvE,MAC1B,GAA4B,kBAAjBwvE,EAAU,GAAiB,CAClC,GAAI1sE,EAAMrI,SAAW+0E,EAAU,GAC3B,MAAM,IAAIxB,EAAJ,yCAAiDwB,EAAU,GAA3D,qBAA0E1sE,EAAMrI,OAAhF,WAEVg1E,EAAOC,gBAAgB5sE,EAC1B,MACI,GAAyB,IAArB0sE,EAAU/0E,QAAwC,kBAAjB+0E,EAAU,GAAiB,CACjE,GAAI1sE,EAAMrI,SAAW+0E,EAAU,GAC3B,MAAM,IAAIxB,EAAJ,yCAAiDwB,EAAU,GAA3D,qBAA0E1sE,EAAMrI,OAAhF,WAEV,IAAK,IAAI+E,EAAI,EAAGA,EAAIgwE,EAAU,GAAIhwE,IAC9B+vE,EAAehvD,EAAQ,KAAMzd,EAAMtD,GAAIgwE,EAAU,GAAIC,EAE5D,MAEGA,EAAOE,WAAW7sE,GAAO,SAAC0wB,GACtB+7C,EAAehvD,EAAQouD,EAAWn7C,EAAMg8C,EAAU,GAAIC,EACzD,SAGJ,QAAuBtvE,IAAnBqvE,EAAUr+C,KACf,OAAQq+C,EAAUr+C,MACd,IAAK,SACa,OAAVruB,QAA4B3C,IAAV2C,EAClB2sE,EAAOG,QAAQ,IAGfH,EAAOG,QAAQ,GACfL,EAAehvD,EAAQouD,EAAW7rE,EAAO0sE,EAAUvvD,KAAMwvD,IAE7D,MAEJ,IAAK,MACDA,EAAOX,SAAShsE,EAAM6wB,MACtB7wB,EAAMgG,SAAQ,SAACkV,EAAKvC,GAChB8zD,EAAehvD,EAAQouD,EAAWlzD,EAAK+zD,EAAU/zD,IAAKg0D,GACtDF,EAAehvD,EAAQouD,EAAW3wD,EAAKwxD,EAAU1sE,MAAO2sE,EAC3D,IACD,MAEJ,QACI,MAAM,IAAIzB,EAAJ,oBAA4BwB,EAA5B,uBAIdK,EAAgBtvD,EAAQzd,EAAO2sE,EAQtC,CALD,MAAOpuD,GAIH,MAHIA,aAAiB2sD,GACjB3sD,EAAMyuD,eAAenB,GAEnBttD,CACT,CACJ,CACD,SAASwuD,EAAgBtvD,EAAQmjB,EAAK+rC,GAClC,GAAkC,oBAAvB/rC,EAAIqsC,eAAf,CAIA,IAAMC,EAAezvD,EAAO1X,IAAI66B,EAAItoC,aACpC,IAAK40E,EACD,MAAM,IAAIhC,EAAJ,gBAAwBtqC,EAAItoC,YAAYK,KAAxC,0BAEV,GAA0B,WAAtBu0E,EAAa7+C,KACb6+C,EAAalwE,OAAO0L,KAAI,YAA4B,aAA1BmjE,EAA0B,KAAfa,EAAe,KAChDD,EAAehvD,EAAQouD,EAAWjrC,EAAIirC,GAAYa,EAAWC,EAChE,QAEA,IAA0B,SAAtBO,EAAa7+C,KAYlB,MAAM,IAAI68C,EAAJ,kCAA0CgC,EAAa7+C,KAAvD,gBAAmEuS,EAAItoC,YAAYK,OAVzF,IADA,IAAMA,EAAOioC,EAAIssC,EAAav8C,OACrBn0B,EAAM,EAAGA,EAAM0wE,EAAaz0E,OAAOd,SAAU6E,EAAK,CACvD,QAA+B0wE,EAAaz0E,OAAO+D,GAAnD,GAAOqvE,EAAP,KAAkBa,EAAlB,KACA,GAAIb,IAAclzE,EAAM,CACpBg0E,EAAOG,QAAQtwE,GACfiwE,EAAehvD,EAAQouD,EAAWjrC,EAAIirC,GAAYa,EAAWC,GAC7D,KACH,CACJ,CAIJ,CAvBA,MAFG/rC,EAAIqsC,eAAeN,EA0B1B,CASD,SAASQ,EAAiB1vD,EAAQouD,EAAWa,EAAWU,GACpD,IACI,GAAyB,kBAAdV,EACP,OAAOU,EAAO,OAAD,OAAQb,EAAsBG,OAE/C,GAAIA,aAAqBxvE,MAAO,CAC5B,GAA4B,kBAAjBwvE,EAAU,GACjB,OAAOU,EAAOC,eAAeX,EAAU,IAEtC,GAA4B,kBAAjBA,EAAU,GAAiB,CAEvC,IADA,IAAMxpE,EAAM,GACHxG,EAAI,EAAGA,EAAIgwE,EAAU,GAAIhwE,IAC9BwG,EAAIvG,KAAKwwE,EAAiB1vD,EAAQ,KAAMivD,EAAU,GAAIU,IAE1D,OAAOlqE,CACV,CAEG,OAAOkqE,EAAOE,WAAU,kBAAMH,EAAiB1vD,EAAQouD,EAAWa,EAAU,GAAIU,EAAxD,GAE/B,CACD,GAAuB,WAAnBV,EAAUr+C,KAEV,OADe++C,EAAOG,SAEXJ,EAAiB1vD,EAAQouD,EAAWa,EAAUvvD,KAAMiwD,QAE/D,EAEJ,GAAuB,QAAnBV,EAAUr+C,KAAgB,CAG1B,IAFA,IAAI3lB,EAAM,IAAIoV,IACRnmB,EAASy1E,EAAOd,UACb5vE,EAAI,EAAGA,EAAI/E,EAAQ+E,IAAK,CAC7B,IAAMic,EAAMw0D,EAAiB1vD,EAAQouD,EAAWa,EAAU/zD,IAAKy0D,GACzDlyD,EAAMiyD,EAAiB1vD,EAAQouD,EAAWa,EAAU1sE,MAAOotE,GACjE1kE,EAAI3D,IAAI4T,EAAKuC,EAChB,CACD,OAAOxS,CACV,CACD,OAAO8kE,EAAkB/vD,EAAQivD,EAAWU,EAO/C,CALD,MAAO7uD,GAIH,MAHIA,aAAiB2sD,GACjB3sD,EAAMyuD,eAAenB,GAEnBttD,CACT,CACJ,CACD,SAASivD,EAAkB/vD,EAAQgwD,EAAWL,GAC1C,GAA0C,oBAA/BK,EAAUC,iBACjB,OAAOD,EAAUC,iBAAiBN,GAEtC,IAAMF,EAAezvD,EAAO1X,IAAI0nE,GAChC,IAAKP,EACD,MAAM,IAAIhC,EAAJ,gBAAwBuC,EAAU90E,KAAlC,0BAEV,GAA0B,WAAtBu0E,EAAa7+C,KAAmB,CAChC,IADgC,EAC1B5Y,EAAS,CAAC,EADgB,IAEKgI,EAAO1X,IAAI0nE,GAAWzwE,QAF3B,IAEhC,IAAK,EAAL,qBAAmE,oBAAvD6uE,EAAuD,KAA5Ca,EAA4C,KAC/Dj3D,EAAOo2D,GAAasB,EAAiB1vD,EAAQouD,EAAWa,EAAWU,EACtE,CAJ+B,+BAKhC,OAAO,IAAIK,EAAUh4D,EACxB,CACD,GAA0B,SAAtBy3D,EAAa7+C,KAAiB,CAC9B,IAAM7xB,EAAM4wE,EAAOG,SACnB,GAAI/wE,GAAO0wE,EAAaz0E,OAAOd,OAC3B,MAAM,IAAIuzE,EAAJ,sBAA8B1uE,EAA9B,qBAEV,QAA+B0wE,EAAaz0E,OAAO+D,GAAnD,GAAOqvE,EAAP,KACM8B,EAAaR,EAAiB1vD,EAAQouD,EAD5C,KACkEuB,GAClE,OAAO,IAAIK,EAAJ,KAAiB5B,EAAY8B,GACvC,CACD,MAAM,IAAIzC,EAAJ,kCAA0CgC,EAAa7+C,KAAvD,gBAAmEo/C,EAAUn1E,YAAYK,MAClG,CA5MD4xE,EAAW,CACP0B,GACDjB,EAAazyE,UAAW,SAAU,MACrCgyE,EAAW,CACP0B,GACDjB,EAAazyE,UAAW,UAAW,MACtCgyE,EAAW,CACP0B,GACDjB,EAAazyE,UAAW,UAAW,MACtCgyE,EAAW,CACP0B,GACDjB,EAAazyE,UAAW,UAAW,MACtCgyE,EAAW,CACP0B,GACDjB,EAAazyE,UAAW,WAAY,MACvCgyE,EAAW,CACP0B,GACDjB,EAAazyE,UAAW,WAAY,MACvCgyE,EAAW,CACP0B,GACDjB,EAAazyE,UAAW,WAAY,MACvCgyE,EAAW,CACP0B,GACDjB,EAAazyE,UAAW,aAAc,MACzCgyE,EAAW,CACP0B,GACDjB,EAAazyE,UAAW,iBAAkB,MAC7CgyE,EAAW,CACP0B,GACDjB,EAAazyE,UAAW,YAAa,MACxCoJ,EAAQqpE,aAAeA,EAsGvBrpE,EAAQ4qB,UALR,SAAmB9O,EAAQmjB,GAA4B,IAAvBgtC,EAAuB,uDAAd3C,EAC/B0B,EAAS,IAAIiB,EAEnB,OADAb,EAAgBtvD,EAAQmjB,EAAK+rC,GACtBA,EAAOvnB,SACjB,EAmFDzjD,EAAQ8qB,YARR,SAAqBhP,EAAQgwD,EAAWh2E,GAA+B,IAAvBo2E,EAAuB,uDAAd7C,EAC/CoC,EAAS,IAAIS,EAAOp2E,GACpBge,EAAS+3D,EAAkB/vD,EAAQgwD,EAAWL,GACpD,GAAIA,EAAOn1E,OAASR,EAAOE,OACvB,MAAM,IAAIuzE,EAAJ,qBAA6BzzE,EAAOE,OAASy1E,EAAOn1E,OAApD,mCAEV,OAAOwd,CACV,EAOD9T,EAAQ+qB,qBAJR,SAA8BjP,EAAQgwD,EAAWh2E,GAA+B,IAAvBo2E,EAAuB,uDAAd7C,EACxDoC,EAAS,IAAIS,EAAOp2E,GAC1B,OAAO+1E,EAAkB/vD,EAAQgwD,EAAWL,EAC/C,sCC/aD,IAAIprB,EAAUC,EAAAA,OAAAA,OA+GdC,EAAOvgD,QA9GP,SAAewgD,GACb,GAAIA,EAASxqD,QAAU,IAAO,MAAM,IAAIN,UAAU,qBAElD,IADA,IAAI+qD,EAAW,IAAIhrD,WAAW,KACrB2e,EAAI,EAAGA,EAAIqsC,EAASzqD,OAAQoe,IACnCqsC,EAASrsC,GAAK,IAEhB,IAAK,IAAIrZ,EAAI,EAAGA,EAAIylD,EAASxqD,OAAQ+E,IAAK,CACxC,IAAIwP,EAAIi2C,EAASE,OAAO3lD,GACpB4lD,EAAKp2C,EAAE0f,WAAW,GACtB,GAAqB,MAAjBw2B,EAASE,GAAe,MAAM,IAAIjrD,UAAU6U,EAAI,iBACpDk2C,EAASE,GAAM5lD,CAChB,CACD,IAAIiS,EAAOwzC,EAASxqD,OAChB4qD,EAASJ,EAASE,OAAO,GACzBG,EAAStpD,KAAK04C,IAAIjjC,GAAQzV,KAAK04C,IAAI,KACnC6Q,EAAUvpD,KAAK04C,IAAI,KAAO14C,KAAK04C,IAAIjjC,GAyCvC,SAAS+zC,EAAcrX,GACrB,GAAsB,kBAAXA,EAAuB,MAAM,IAAIh0C,UAAU,mBACtD,GAAsB,IAAlBg0C,EAAO1zC,OAAgB,OAAOqqD,EAAQzxB,MAAM,GAKhD,IAJA,IAAIoyB,EAAM,EAENC,EAAS,EACTjrD,EAAS,EACN0zC,EAAOsX,KAASJ,GACrBK,IACAD,IAMF,IAHA,IAAI9xB,GAAUwa,EAAO1zC,OAASgrD,GAAOH,EAAU,IAAO,EAClDK,EAAO,IAAIzrD,WAAWy5B,GAEnBwa,EAAOsX,IAAM,CAElB,IAAIG,EAAQV,EAAS/W,EAAOzf,WAAW+2B,IAEvC,GAAc,MAAVG,EAAiB,OAErB,IADA,IAAIpmD,EAAI,EACCqmD,EAAMlyB,EAAO,GAAc,IAAViyB,GAAepmD,EAAI/E,KAAqB,IAATorD,EAAaA,IAAOrmD,IAC3EomD,GAAUn0C,EAAOk0C,EAAKE,KAAU,EAChCF,EAAKE,GAAQD,EAAQ,MAAS,EAC9BA,EAASA,EAAQ,MAAS,EAE5B,GAAc,IAAVA,EAAe,MAAM,IAAIhqD,MAAM,kBACnCnB,EAAS+E,EACTimD,GACD,CAGD,IADA,IAAIK,EAAMnyB,EAAOl5B,EACVqrD,IAAQnyB,GAAsB,IAAdgyB,EAAKG,IAC1BA,IAEF,IAAIC,EAAMjB,EAAQkB,YAAYN,GAAU/xB,EAAOmyB,IAC/CC,EAAI79C,KAAK,EAAM,EAAGw9C,GAElB,IADA,IAAI7sC,EAAI6sC,EACDI,IAAQnyB,GACboyB,EAAIltC,KAAO8sC,EAAKG,KAElB,OAAOC,CACR,CAMD,MAAO,CACLvpD,OAzFF,SAAiB2xC,GAEf,IADInuC,MAAMC,QAAQkuC,IAAWA,aAAkBj0C,cAAci0C,EAAS2W,EAAQxqD,KAAK6zC,KAC9E2W,EAAQmB,SAAS9X,GAAW,MAAM,IAAIh0C,UAAU,mBACrD,GAAsB,IAAlBg0C,EAAO1zC,OAAgB,MAAO,GAMlC,IAJA,IAAIirD,EAAS,EACTjrD,EAAS,EACTyrD,EAAS,EACTC,EAAOhY,EAAO1zC,OACXyrD,IAAWC,GAA2B,IAAnBhY,EAAO+X,IAC/BA,IACAR,IAMF,IAHA,IAAI/xB,GAASwyB,EAAOD,GAAUX,EAAU,IAAO,EAC3Ca,EAAM,IAAIlsD,WAAWy5B,GAElBuyB,IAAWC,GAAM,CAItB,IAHA,IAAIP,EAAQzX,EAAO+X,GAEf1mD,EAAI,EACC6mD,EAAM1yB,EAAO,GAAc,IAAViyB,GAAepmD,EAAI/E,KAAqB,IAAT4rD,EAAaA,IAAO7mD,IAC3EomD,GAAU,IAAMQ,EAAIC,KAAU,EAC9BD,EAAIC,GAAQT,EAAQn0C,IAAU,EAC9Bm0C,EAASA,EAAQn0C,IAAU,EAE7B,GAAc,IAAVm0C,EAAe,MAAM,IAAIhqD,MAAM,kBACnCnB,EAAS+E,EACT0mD,GACD,CAGD,IADA,IAAII,EAAM3yB,EAAOl5B,EACV6rD,IAAQ3yB,GAAqB,IAAbyyB,EAAIE,IACzBA,IAIF,IADA,IAAI7/C,EAAM4+C,EAAOkB,OAAOb,GACjBY,EAAM3yB,IAAQ2yB,EAAO7/C,GAAOw+C,EAASE,OAAOiB,EAAIE,IACvD,OAAO7/C,CACR,EAmDC++C,aAAcA,EACdjpD,OARF,SAAiB4lB,GACf,IAAI5nB,EAASirD,EAAarjC,GAC1B,GAAI5nB,EAAU,OAAOA,EACrB,MAAM,IAAIqB,MAAM,WAAa6V,EAAO,aACrC,EAMF,0BCrHD,SAAWuzC,EAAQvgD,GACjB,aAGA,SAASO,EAAQgZ,EAAKzB,GACpB,IAAKyB,EAAK,MAAM,IAAIpiB,MAAM2gB,GAAO,mBAClC,CAID,SAASiqC,EAAUC,EAAMC,GACvBD,EAAKE,OAASD,EACd,IAAIE,EAAW,WAAc,EAC7BA,EAASvrD,UAAYqrD,EAAUrrD,UAC/BorD,EAAKprD,UAAY,IAAIurD,EACrBH,EAAKprD,UAAUD,YAAcqrD,CAC9B,CAID,SAASz2B,EAAItrB,EAAQ2M,EAAMw1C,GACzB,GAAI72B,EAAG82B,KAAKpiD,GACV,OAAOA,EAGTmC,KAAKkgD,SAAW,EAChBlgD,KAAKmgD,MAAQ,KACbngD,KAAKpM,OAAS,EAGdoM,KAAKogD,IAAM,KAEI,OAAXviD,IACW,OAAT2M,GAA0B,OAATA,IACnBw1C,EAASx1C,EACTA,EAAO,IAGTxK,KAAKqgD,MAAMxiD,GAAU,EAAG2M,GAAQ,GAAIw1C,GAAU,MAEjD,CAUD,IAAI13B,EATkB,kBAAX61B,EACTA,EAAOvgD,QAAUurB,EAEjBvrB,EAAQurB,GAAKA,EAGfA,EAAGA,GAAKA,EACRA,EAAGm3B,SAAW,GAGd,IAEIh4B,EADoB,qBAAX7d,QAAmD,qBAAlBA,OAAO6d,OACxC7d,OAAO6d,OAEP41B,EAAAA,OAAAA,MAGZ,CADC,MAAO1kD,GACR,CA+HD,SAAS+mD,EAAejlC,EAAQ6P,GAC9B,IAAIzc,EAAI4M,EAAOuM,WAAWsD,GAE1B,OAAIzc,GAAK,IAAMA,GAAK,GACXA,EAAI,GAEFA,GAAK,IAAMA,GAAK,GAClBA,EAAI,GAEFA,GAAK,IAAMA,GAAK,IAClBA,EAAI,QAEXvQ,GAAO,EAAO,wBAA0Bmd,EAE3C,CAED,SAASklC,EAAcllC,EAAQmlC,EAAYt1B,GACzC,IAAI3c,EAAI+xC,EAAcjlC,EAAQ6P,GAI9B,OAHIA,EAAQ,GAAKs1B,IACfjyC,GAAK+xC,EAAcjlC,EAAQ6P,EAAQ,IAAM,GAEpC3c,CACR,CA6CD,SAASkyC,EAAW9gD,EAAK/C,EAAO8jD,EAAKC,GAInC,IAHA,IAAIpyC,EAAI,EACJpb,EAAI,EACJ0N,EAAM3L,KAAK4J,IAAIa,EAAIhM,OAAQ+sD,GACtBhoD,EAAIkE,EAAOlE,EAAImI,EAAKnI,IAAK,CAChC,IAAI+V,EAAI9O,EAAIioB,WAAWlvB,GAAK,GAE5B6V,GAAKoyC,EAIHxtD,EADEsb,GAAK,GACHA,EAAI,GAAK,GAGJA,GAAK,GACVA,EAAI,GAAK,GAITA,EAENvQ,EAAOuQ,GAAK,GAAKtb,EAAIwtD,EAAK,qBAC1BpyC,GAAKpb,CACN,CACD,OAAOob,CACR,CA2DD,SAASqyC,EAAMnnD,EAAMrE,GACnBqE,EAAKymD,MAAQ9qD,EAAI8qD,MACjBzmD,EAAK9F,OAASyB,EAAIzB,OAClB8F,EAAKwmD,SAAW7qD,EAAI6qD,SACpBxmD,EAAK0mD,IAAM/qD,EAAI+qD,GAChB,CAqCD,GA9TAj3B,EAAG82B,KAAO,SAAetzC,GACvB,OAAIA,aAAewc,GAIJ,OAARxc,GAA+B,kBAARA,GAC5BA,EAAIpY,YAAY+rD,WAAan3B,EAAGm3B,UAAYnnD,MAAMC,QAAQuT,EAAIwzC,MACjE,EAEDh3B,EAAG1U,IAAM,SAAc4M,EAAMy/B,GAC3B,OAAIz/B,EAAK0/B,IAAID,GAAS,EAAUz/B,EACzBy/B,CACR,EAED33B,EAAGpqB,IAAM,SAAcsiB,EAAMy/B,GAC3B,OAAIz/B,EAAK0/B,IAAID,GAAS,EAAUz/B,EACzBy/B,CACR,EAED33B,EAAG30B,UAAU6rD,MAAQ,SAAexiD,EAAQ2M,EAAMw1C,GAChD,GAAsB,kBAAXniD,EACT,OAAOmC,KAAKghD,YAAYnjD,EAAQ2M,EAAMw1C,GAGxC,GAAsB,kBAAXniD,EACT,OAAOmC,KAAKihD,WAAWpjD,EAAQ2M,EAAMw1C,GAG1B,QAATx1C,IACFA,EAAO,IAETrM,EAAOqM,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAGnD,IAAI3N,EAAQ,EACM,OAFlBgB,EAASA,EAAOT,WAAW8jD,QAAQ,OAAQ,KAEhC,KACTrkD,IACAmD,KAAKkgD,SAAW,GAGdrjD,EAAQgB,EAAOjK,SACJ,KAAT4W,EACFxK,KAAKmhD,UAAUtjD,EAAQhB,EAAOmjD,IAE9BhgD,KAAKohD,WAAWvjD,EAAQ2M,EAAM3N,GACf,OAAXmjD,GACFhgD,KAAKihD,WAAWjhD,KAAKqhD,UAAW72C,EAAMw1C,IAI7C,EAED72B,EAAG30B,UAAUwsD,YAAc,SAAsBnjD,EAAQ2M,EAAMw1C,GACzDniD,EAAS,IACXmC,KAAKkgD,SAAW,EAChBriD,GAAUA,GAERA,EAAS,UACXmC,KAAKmgD,MAAQ,CAAU,SAATtiD,GACdmC,KAAKpM,OAAS,GACLiK,EAAS,kBAClBmC,KAAKmgD,MAAQ,CACF,SAATtiD,EACCA,EAAS,SAAa,UAEzBmC,KAAKpM,OAAS,IAEduK,EAAON,EAAS,kBAChBmC,KAAKmgD,MAAQ,CACF,SAATtiD,EACCA,EAAS,SAAa,SACvB,GAEFmC,KAAKpM,OAAS,GAGD,OAAXosD,GAGJhgD,KAAKihD,WAAWjhD,KAAKqhD,UAAW72C,EAAMw1C,EACvC,EAED72B,EAAG30B,UAAUysD,WAAa,SAAqBpjD,EAAQ2M,EAAMw1C,GAG3D,GADA7hD,EAAgC,kBAAlBN,EAAOjK,QACjBiK,EAAOjK,QAAU,EAGnB,OAFAoM,KAAKmgD,MAAQ,CAAC,GACdngD,KAAKpM,OAAS,EACPoM,KAGTA,KAAKpM,OAASuB,KAAKwmC,KAAK99B,EAAOjK,OAAS,GACxCoM,KAAKmgD,MAAQ,IAAIhnD,MAAM6G,KAAKpM,QAC5B,IAAK,IAAI+E,EAAI,EAAGA,EAAIqH,KAAKpM,OAAQ+E,IAC/BqH,KAAKmgD,MAAMxnD,GAAK,EAGlB,IAAIqZ,EAAGsvC,EACHC,EAAM,EACV,GAAe,OAAXvB,EACF,IAAKrnD,EAAIkF,EAAOjK,OAAS,EAAGoe,EAAI,EAAGrZ,GAAK,EAAGA,GAAK,EAC9C2oD,EAAIzjD,EAAOlF,GAAMkF,EAAOlF,EAAI,IAAM,EAAMkF,EAAOlF,EAAI,IAAM,GACzDqH,KAAKmgD,MAAMnuC,IAAOsvC,GAAKC,EAAO,SAC9BvhD,KAAKmgD,MAAMnuC,EAAI,GAAMsvC,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACPvvC,UAGC,GAAe,OAAXguC,EACT,IAAKrnD,EAAI,EAAGqZ,EAAI,EAAGrZ,EAAIkF,EAAOjK,OAAQ+E,GAAK,EACzC2oD,EAAIzjD,EAAOlF,GAAMkF,EAAOlF,EAAI,IAAM,EAAMkF,EAAOlF,EAAI,IAAM,GACzDqH,KAAKmgD,MAAMnuC,IAAOsvC,GAAKC,EAAO,SAC9BvhD,KAAKmgD,MAAMnuC,EAAI,GAAMsvC,IAAO,GAAKC,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACPvvC,KAIN,OAAOhS,KAAKwhD,QACb,EA0BDr4B,EAAG30B,UAAU2sD,UAAY,SAAoBtjD,EAAQhB,EAAOmjD,GAE1DhgD,KAAKpM,OAASuB,KAAKwmC,MAAM99B,EAAOjK,OAASiJ,GAAS,GAClDmD,KAAKmgD,MAAQ,IAAIhnD,MAAM6G,KAAKpM,QAC5B,IAAK,IAAI+E,EAAI,EAAGA,EAAIqH,KAAKpM,OAAQ+E,IAC/BqH,KAAKmgD,MAAMxnD,GAAK,EAIlB,IAGI2oD,EAHAC,EAAM,EACNvvC,EAAI,EAGR,GAAe,OAAXguC,EACF,IAAKrnD,EAAIkF,EAAOjK,OAAS,EAAG+E,GAAKkE,EAAOlE,GAAK,EAC3C2oD,EAAId,EAAa3iD,EAAQhB,EAAOlE,IAAM4oD,EACtCvhD,KAAKmgD,MAAMnuC,IAAU,SAAJsvC,EACbC,GAAO,IACTA,GAAO,GACPvvC,GAAK,EACLhS,KAAKmgD,MAAMnuC,IAAMsvC,IAAM,IAEvBC,GAAO,OAKX,IAAK5oD,GADakF,EAAOjK,OAASiJ,GACX,IAAM,EAAIA,EAAQ,EAAIA,EAAOlE,EAAIkF,EAAOjK,OAAQ+E,GAAK,EAC1E2oD,EAAId,EAAa3iD,EAAQhB,EAAOlE,IAAM4oD,EACtCvhD,KAAKmgD,MAAMnuC,IAAU,SAAJsvC,EACbC,GAAO,IACTA,GAAO,GACPvvC,GAAK,EACLhS,KAAKmgD,MAAMnuC,IAAMsvC,IAAM,IAEvBC,GAAO,EAKbvhD,KAAKwhD,QACN,EA6BDr4B,EAAG30B,UAAU4sD,WAAa,SAAqBvjD,EAAQ2M,EAAM3N,GAE3DmD,KAAKmgD,MAAQ,CAAC,GACdngD,KAAKpM,OAAS,EAGd,IAAK,IAAI6tD,EAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAWl3C,EAClEi3C,IAEFA,IACAC,EAAWA,EAAUl3C,EAAQ,EAO7B,IALA,IAAIs4B,EAAQjlC,EAAOjK,OAASiJ,EACxBmM,EAAM85B,EAAQ2e,EACdd,EAAMxrD,KAAK4J,IAAI+jC,EAAOA,EAAQ95B,GAAOnM,EAErCd,EAAO,EACFpD,EAAIkE,EAAOlE,EAAIgoD,EAAKhoD,GAAK8oD,EAChC1lD,EAAO2kD,EAAU7iD,EAAQlF,EAAGA,EAAI8oD,EAASj3C,GAEzCxK,KAAK2hD,MAAMD,GACP1hD,KAAKmgD,MAAM,GAAKpkD,EAAO,SACzBiE,KAAKmgD,MAAM,IAAMpkD,EAEjBiE,KAAK4hD,OAAO7lD,GAIhB,GAAY,IAARiN,EAAW,CACb,IAAIzS,EAAM,EAGV,IAFAwF,EAAO2kD,EAAU7iD,EAAQlF,EAAGkF,EAAOjK,OAAQ4W,GAEtC7R,EAAI,EAAGA,EAAIqQ,EAAKrQ,IACnBpC,GAAOiU,EAGTxK,KAAK2hD,MAAMprD,GACPyJ,KAAKmgD,MAAM,GAAKpkD,EAAO,SACzBiE,KAAKmgD,MAAM,IAAMpkD,EAEjBiE,KAAK4hD,OAAO7lD,EAEf,CAEDiE,KAAKwhD,QACN,EAEDr4B,EAAG30B,UAAUgJ,KAAO,SAAe9D,GACjCA,EAAKymD,MAAQ,IAAIhnD,MAAM6G,KAAKpM,QAC5B,IAAK,IAAI+E,EAAI,EAAGA,EAAIqH,KAAKpM,OAAQ+E,IAC/Be,EAAKymD,MAAMxnD,GAAKqH,KAAKmgD,MAAMxnD,GAE7Be,EAAK9F,OAASoM,KAAKpM,OACnB8F,EAAKwmD,SAAWlgD,KAAKkgD,SACrBxmD,EAAK0mD,IAAMpgD,KAAKogD,GACjB,EASDj3B,EAAG30B,UAAUqtD,MAAQ,SAAgBnoD,GACnCmnD,EAAKnnD,EAAMsG,KACZ,EAEDmpB,EAAG30B,UAAUstD,MAAQ,WACnB,IAAItzC,EAAI,IAAI2a,EAAG,MAEf,OADAnpB,KAAKxC,KAAKgR,GACHA,CACR,EAED2a,EAAG30B,UAAUutD,QAAU,SAAkBj1B,GACvC,KAAO9sB,KAAKpM,OAASk5B,GACnB9sB,KAAKmgD,MAAMngD,KAAKpM,UAAY,EAE9B,OAAOoM,IACR,EAGDmpB,EAAG30B,UAAUgtD,OAAS,WACpB,KAAOxhD,KAAKpM,OAAS,GAAqC,IAAhCoM,KAAKmgD,MAAMngD,KAAKpM,OAAS,IACjDoM,KAAKpM,SAEP,OAAOoM,KAAKgiD,WACb,EAED74B,EAAG30B,UAAUwtD,UAAY,WAKvB,OAHoB,IAAhBhiD,KAAKpM,QAAkC,IAAlBoM,KAAKmgD,MAAM,KAClCngD,KAAKkgD,SAAW,GAEXlgD,IACR,EAIqB,qBAAXuY,QAAgD,oBAAfA,OAAO0pC,IACjD,IACE94B,EAAG30B,UAAU+jB,OAAO0pC,IAAI,+BAAiCC,CAG1D,CAFC,MAAO1oD,GACP2vB,EAAG30B,UAAU0tD,QAAUA,CACxB,MAED/4B,EAAG30B,UAAU0tD,QAAUA,EAGzB,SAASA,IACP,OAAQliD,KAAKogD,IAAM,UAAY,SAAWpgD,KAAK5C,SAAS,IAAM,GAC/D,CAgCD,IAAI+kD,EAAQ,CACV,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGEC,EAAa,CACf,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,EAAa,CACf,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAG9Dl5B,EAAG30B,UAAU4I,SAAW,SAAmBoN,EAAM2uC,GAI/C,IAAIr6C,EACJ,GAHAq6C,EAAoB,EAAVA,GAAe,EAGZ,MAJb3uC,EAAOA,GAAQ,KAIa,QAATA,EAAgB,CACjC1L,EAAM,GAGN,IAFA,IAAIyiD,EAAM,EACNxC,EAAQ,EACHpmD,EAAI,EAAGA,EAAIqH,KAAKpM,OAAQ+E,IAAK,CACpC,IAAI2oD,EAAIthD,KAAKmgD,MAAMxnD,GACfoD,GAA+B,UAArBulD,GAAKC,EAAOxC,IAAmB3hD,SAAS,IACtD2hD,EAASuC,IAAO,GAAKC,EAAQ,UAC7BA,GAAO,IACI,KACTA,GAAO,GACP5oD,KAGAmG,EADY,IAAVigD,GAAepmD,IAAMqH,KAAKpM,OAAS,EAC/BuuD,EAAM,EAAIpmD,EAAKnI,QAAUmI,EAAO+C,EAEhC/C,EAAO+C,CAEhB,CAID,IAHc,IAAVigD,IACFjgD,EAAMigD,EAAM3hD,SAAS,IAAM0B,GAEtBA,EAAIlL,OAASulD,IAAY,GAC9Br6C,EAAM,IAAMA,EAKd,OAHsB,IAAlBkB,KAAKkgD,WACPphD,EAAM,IAAMA,GAEPA,CACR,CAED,GAAI0L,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAElD,IAAI83C,EAAYF,EAAW53C,GAEvB+3C,EAAYF,EAAW73C,GAC3B1L,EAAM,GACN,IAAI4P,EAAI1O,KAAK8hD,QAEb,IADApzC,EAAEwxC,SAAW,GACLxxC,EAAE8zC,UAAU,CAClB,IAAIh0C,EAAIE,EAAE+zC,MAAMF,GAAWnlD,SAASoN,GAMlC1L,GALF4P,EAAIA,EAAEg0C,MAAMH,IAELC,SAGCh0C,EAAI1P,EAFJqjD,EAAMG,EAAY9zC,EAAE5a,QAAU4a,EAAI1P,CAI3C,CAID,IAHIkB,KAAKwiD,WACP1jD,EAAM,IAAMA,GAEPA,EAAIlL,OAASulD,IAAY,GAC9Br6C,EAAM,IAAMA,EAKd,OAHsB,IAAlBkB,KAAKkgD,WACPphD,EAAM,IAAMA,GAEPA,CACR,CAEDX,GAAO,EAAO,kCACf,EAEDgrB,EAAG30B,UAAUmuD,SAAW,WACtB,IAAIC,EAAM5iD,KAAKmgD,MAAM,GASrB,OARoB,IAAhBngD,KAAKpM,OACPgvD,GAAuB,SAAhB5iD,KAAKmgD,MAAM,GACO,IAAhBngD,KAAKpM,QAAkC,IAAlBoM,KAAKmgD,MAAM,GAEzCyC,GAAO,iBAAoC,SAAhB5iD,KAAKmgD,MAAM,GAC7BngD,KAAKpM,OAAS,GACvBuK,GAAO,EAAO,8CAEU,IAAlB6B,KAAKkgD,UAAmB0C,EAAMA,CACvC,EAEDz5B,EAAG30B,UAAU80B,OAAS,WACpB,OAAOtpB,KAAK5C,SAAS,GAAI,EAC1B,EAEGkrB,IACFa,EAAG30B,UAAU6zB,SAAW,SAAmB23B,EAAQpsD,GACjD,OAAOoM,KAAKupB,YAAYjB,EAAQ03B,EAAQpsD,EACzC,GAGHu1B,EAAG30B,UAAU6sD,QAAU,SAAkBrB,EAAQpsD,GAC/C,OAAOoM,KAAKupB,YAAYpwB,MAAO6mD,EAAQpsD,EACxC,EA2gBD,SAASivD,EAAY5jD,EAAM0N,EAAK7N,GAC9BA,EAAIohD,SAAWvzC,EAAIuzC,SAAWjhD,EAAKihD,SACnC,IAAIp/C,EAAO7B,EAAKrL,OAAS+Y,EAAI/Y,OAAU,EACvCkL,EAAIlL,OAASkN,EACbA,EAAOA,EAAM,EAAK,EAGlB,IAAIyG,EAAoB,EAAhBtI,EAAKkhD,MAAM,GACf/sD,EAAmB,EAAfuZ,EAAIwzC,MAAM,GACd3xC,EAAIjH,EAAInU,EAERyB,EAAS,SAAJ2Z,EACLuwC,EAASvwC,EAAI,SAAa,EAC9B1P,EAAIqhD,MAAM,GAAKtrD,EAEf,IAAK,IAAI+gB,EAAI,EAAGA,EAAI9U,EAAK8U,IAAK,CAM5B,IAHA,IAAIktC,EAAS/D,IAAU,GACnBgE,EAAgB,SAARhE,EACRiE,EAAO7tD,KAAK4J,IAAI6W,EAAGjJ,EAAI/Y,OAAS,GAC3Boe,EAAI7c,KAAKsf,IAAI,EAAGmB,EAAI3W,EAAKrL,OAAS,GAAIoe,GAAKgxC,EAAMhxC,IAAK,CAC7D,IAAIrZ,EAAKid,EAAI5D,EAAK,EAIlB8wC,IADAt0C,GAFAjH,EAAoB,EAAhBtI,EAAKkhD,MAAMxnD,KACfvF,EAAmB,EAAfuZ,EAAIwzC,MAAMnuC,IACF+wC,GACG,SAAa,EAC5BA,EAAY,SAAJv0C,CACT,CACD1P,EAAIqhD,MAAMvqC,GAAa,EAARmtC,EACfhE,EAAiB,EAAT+D,CACT,CAOD,OANc,IAAV/D,EACFjgD,EAAIqhD,MAAMvqC,GAAa,EAARmpC,EAEfjgD,EAAIlL,SAGCkL,EAAI0iD,QACZ,CAziBDr4B,EAAG30B,UAAU+0B,YAAc,SAAsB05B,EAAWjD,EAAQpsD,GAClEoM,KAAKwhD,SAEL,IAAIniD,EAAaW,KAAKX,aAClB6jD,EAAYtvD,GAAUuB,KAAKsf,IAAI,EAAGpV,GACtClB,EAAOkB,GAAc6jD,EAAW,yCAChC/kD,EAAO+kD,EAAY,EAAG,+BAEtB,IAAI/gD,EAfS,SAAmB8gD,EAAWn2B,GAC3C,OAAIm2B,EAAU9D,YACL8D,EAAU9D,YAAYryB,GAExB,IAAIm2B,EAAUn2B,EACtB,CAUWqP,CAAS8mB,EAAWC,GAG9B,OADAljD,KAAK,gBADoB,OAAXggD,EAAkB,KAAO,OACR79C,EAAK9C,GAC7B8C,CACR,EAEDgnB,EAAG30B,UAAU2uD,eAAiB,SAAyBhhD,EAAK9C,GAI1D,IAHA,IAAI+jD,EAAW,EACXrE,EAAQ,EAEHpmD,EAAI,EAAGqB,EAAQ,EAAGrB,EAAIqH,KAAKpM,OAAQ+E,IAAK,CAC/C,IAAIoD,EAAQiE,KAAKmgD,MAAMxnD,IAAMqB,EAAS+kD,EAEtC58C,EAAIihD,KAAqB,IAAPrnD,EACdqnD,EAAWjhD,EAAIvO,SACjBuO,EAAIihD,KAAernD,GAAQ,EAAK,KAE9BqnD,EAAWjhD,EAAIvO,SACjBuO,EAAIihD,KAAernD,GAAQ,GAAM,KAGrB,IAAV/B,GACEopD,EAAWjhD,EAAIvO,SACjBuO,EAAIihD,KAAernD,GAAQ,GAAM,KAEnCgjD,EAAQ,EACR/kD,EAAQ,IAER+kD,EAAQhjD,IAAS,GACjB/B,GAAS,EAEZ,CAED,GAAIopD,EAAWjhD,EAAIvO,OAGjB,IAFAuO,EAAIihD,KAAcrE,EAEXqE,EAAWjhD,EAAIvO,QACpBuO,EAAIihD,KAAc,CAGvB,EAEDj6B,EAAG30B,UAAU6uD,eAAiB,SAAyBlhD,EAAK9C,GAI1D,IAHA,IAAI+jD,EAAWjhD,EAAIvO,OAAS,EACxBmrD,EAAQ,EAEHpmD,EAAI,EAAGqB,EAAQ,EAAGrB,EAAIqH,KAAKpM,OAAQ+E,IAAK,CAC/C,IAAIoD,EAAQiE,KAAKmgD,MAAMxnD,IAAMqB,EAAS+kD,EAEtC58C,EAAIihD,KAAqB,IAAPrnD,EACdqnD,GAAY,IACdjhD,EAAIihD,KAAernD,GAAQ,EAAK,KAE9BqnD,GAAY,IACdjhD,EAAIihD,KAAernD,GAAQ,GAAM,KAGrB,IAAV/B,GACEopD,GAAY,IACdjhD,EAAIihD,KAAernD,GAAQ,GAAM,KAEnCgjD,EAAQ,EACR/kD,EAAQ,IAER+kD,EAAQhjD,IAAS,GACjB/B,GAAS,EAEZ,CAED,GAAIopD,GAAY,EAGd,IAFAjhD,EAAIihD,KAAcrE,EAEXqE,GAAY,GACjBjhD,EAAIihD,KAAc,CAGvB,EAEGjuD,KAAKmuD,MACPn6B,EAAG30B,UAAU+uD,WAAa,SAAqBjC,GAC7C,OAAO,GAAKnsD,KAAKmuD,MAAMhC,EACxB,EAEDn4B,EAAG30B,UAAU+uD,WAAa,SAAqBjC,GAC7C,IAAIh5C,EAAIg5C,EACJ9yC,EAAI,EAiBR,OAhBIlG,GAAK,OACPkG,GAAK,GACLlG,KAAO,IAELA,GAAK,KACPkG,GAAK,EACLlG,KAAO,GAELA,GAAK,IACPkG,GAAK,EACLlG,KAAO,GAELA,GAAK,IACPkG,GAAK,EACLlG,KAAO,GAEFkG,EAAIlG,CACZ,EAGH6gB,EAAG30B,UAAUgvD,UAAY,SAAoBlC,GAE3C,GAAU,IAANA,EAAS,OAAO,GAEpB,IAAIh5C,EAAIg5C,EACJ9yC,EAAI,EAoBR,OAnBqB,KAAZ,KAAJlG,KACHkG,GAAK,GACLlG,KAAO,IAEU,KAAV,IAAJA,KACHkG,GAAK,EACLlG,KAAO,GAES,KAAT,GAAJA,KACHkG,GAAK,EACLlG,KAAO,GAES,KAAT,EAAJA,KACHkG,GAAK,EACLlG,KAAO,GAES,KAAT,EAAJA,IACHkG,IAEKA,CACR,EAGD2a,EAAG30B,UAAUivD,UAAY,WACvB,IAAInC,EAAIthD,KAAKmgD,MAAMngD,KAAKpM,OAAS,GAC7B8vD,EAAK1jD,KAAKujD,WAAWjC,GACzB,OAA2B,IAAnBthD,KAAKpM,OAAS,GAAU8vD,CACjC,EAgBDv6B,EAAG30B,UAAUmvD,SAAW,WACtB,GAAI3jD,KAAKwiD,SAAU,OAAO,EAG1B,IADA,IAAIh0C,EAAI,EACC7V,EAAI,EAAGA,EAAIqH,KAAKpM,OAAQ+E,IAAK,CACpC,IAAIvF,EAAI4M,KAAKwjD,UAAUxjD,KAAKmgD,MAAMxnD,IAElC,GADA6V,GAAKpb,EACK,KAANA,EAAU,KACf,CACD,OAAOob,CACR,EAED2a,EAAG30B,UAAU6K,WAAa,WACxB,OAAOlK,KAAKwmC,KAAK37B,KAAKyjD,YAAc,EACrC,EAEDt6B,EAAG30B,UAAUovD,OAAS,SAAiBC,GACrC,OAAsB,IAAlB7jD,KAAKkgD,SACAlgD,KAAK4L,MAAMk4C,MAAMD,GAAOE,MAAM,GAEhC/jD,KAAK8hD,OACb,EAED34B,EAAG30B,UAAUwvD,SAAW,SAAmBH,GACzC,OAAI7jD,KAAKikD,MAAMJ,EAAQ,GACd7jD,KAAKkkD,KAAKL,GAAOE,MAAM,GAAGI,OAE5BnkD,KAAK8hD,OACb,EAED34B,EAAG30B,UAAU4vD,MAAQ,WACnB,OAAyB,IAAlBpkD,KAAKkgD,QACb,EAGD/2B,EAAG30B,UAAU6vD,IAAM,WACjB,OAAOrkD,KAAK8hD,QAAQqC,MACrB,EAEDh7B,EAAG30B,UAAU2vD,KAAO,WAKlB,OAJKnkD,KAAKwiD,WACRxiD,KAAKkgD,UAAY,GAGZlgD,IACR,EAGDmpB,EAAG30B,UAAU8vD,KAAO,SAAe33C,GACjC,KAAO3M,KAAKpM,OAAS+Y,EAAI/Y,QACvBoM,KAAKmgD,MAAMngD,KAAKpM,UAAY,EAG9B,IAAK,IAAI+E,EAAI,EAAGA,EAAIgU,EAAI/Y,OAAQ+E,IAC9BqH,KAAKmgD,MAAMxnD,GAAKqH,KAAKmgD,MAAMxnD,GAAKgU,EAAIwzC,MAAMxnD,GAG5C,OAAOqH,KAAKwhD,QACb,EAEDr4B,EAAG30B,UAAU+vD,IAAM,SAAc53C,GAE/B,OADAxO,EAA0C,KAAlC6B,KAAKkgD,SAAWvzC,EAAIuzC,WACrBlgD,KAAKskD,KAAK33C,EAClB,EAGDwc,EAAG30B,UAAUgwD,GAAK,SAAa73C,GAC7B,OAAI3M,KAAKpM,OAAS+Y,EAAI/Y,OAAeoM,KAAK8hD,QAAQyC,IAAI53C,GAC/CA,EAAIm1C,QAAQyC,IAAIvkD,KACxB,EAEDmpB,EAAG30B,UAAUiwD,IAAM,SAAc93C,GAC/B,OAAI3M,KAAKpM,OAAS+Y,EAAI/Y,OAAeoM,KAAK8hD,QAAQwC,KAAK33C,GAChDA,EAAIm1C,QAAQwC,KAAKtkD,KACzB,EAGDmpB,EAAG30B,UAAUkwD,MAAQ,SAAgB/3C,GAEnC,IAAIvZ,EAEFA,EADE4M,KAAKpM,OAAS+Y,EAAI/Y,OAChB+Y,EAEA3M,KAGN,IAAK,IAAIrH,EAAI,EAAGA,EAAIvF,EAAEQ,OAAQ+E,IAC5BqH,KAAKmgD,MAAMxnD,GAAKqH,KAAKmgD,MAAMxnD,GAAKgU,EAAIwzC,MAAMxnD,GAK5C,OAFAqH,KAAKpM,OAASR,EAAEQ,OAEToM,KAAKwhD,QACb,EAEDr4B,EAAG30B,UAAUmwD,KAAO,SAAeh4C,GAEjC,OADAxO,EAA0C,KAAlC6B,KAAKkgD,SAAWvzC,EAAIuzC,WACrBlgD,KAAK0kD,MAAM/3C,EACnB,EAGDwc,EAAG30B,UAAUowD,IAAM,SAAcj4C,GAC/B,OAAI3M,KAAKpM,OAAS+Y,EAAI/Y,OAAeoM,KAAK8hD,QAAQ6C,KAAKh4C,GAChDA,EAAIm1C,QAAQ6C,KAAK3kD,KACzB,EAEDmpB,EAAG30B,UAAUqwD,KAAO,SAAel4C,GACjC,OAAI3M,KAAKpM,OAAS+Y,EAAI/Y,OAAeoM,KAAK8hD,QAAQ4C,MAAM/3C,GACjDA,EAAIm1C,QAAQ4C,MAAM1kD,KAC1B,EAGDmpB,EAAG30B,UAAUswD,MAAQ,SAAgBn4C,GAEnC,IAAIpF,EACAnU,EACA4M,KAAKpM,OAAS+Y,EAAI/Y,QACpB2T,EAAIvH,KACJ5M,EAAIuZ,IAEJpF,EAAIoF,EACJvZ,EAAI4M,MAGN,IAAK,IAAIrH,EAAI,EAAGA,EAAIvF,EAAEQ,OAAQ+E,IAC5BqH,KAAKmgD,MAAMxnD,GAAK4O,EAAE44C,MAAMxnD,GAAKvF,EAAE+sD,MAAMxnD,GAGvC,GAAIqH,OAASuH,EACX,KAAO5O,EAAI4O,EAAE3T,OAAQ+E,IACnBqH,KAAKmgD,MAAMxnD,GAAK4O,EAAE44C,MAAMxnD,GAM5B,OAFAqH,KAAKpM,OAAS2T,EAAE3T,OAEToM,KAAKwhD,QACb,EAEDr4B,EAAG30B,UAAUuwD,KAAO,SAAep4C,GAEjC,OADAxO,EAA0C,KAAlC6B,KAAKkgD,SAAWvzC,EAAIuzC,WACrBlgD,KAAK8kD,MAAMn4C,EACnB,EAGDwc,EAAG30B,UAAUwwD,IAAM,SAAcr4C,GAC/B,OAAI3M,KAAKpM,OAAS+Y,EAAI/Y,OAAeoM,KAAK8hD,QAAQiD,KAAKp4C,GAChDA,EAAIm1C,QAAQiD,KAAK/kD,KACzB,EAEDmpB,EAAG30B,UAAUywD,KAAO,SAAet4C,GACjC,OAAI3M,KAAKpM,OAAS+Y,EAAI/Y,OAAeoM,KAAK8hD,QAAQgD,MAAMn4C,GACjDA,EAAIm1C,QAAQgD,MAAM9kD,KAC1B,EAGDmpB,EAAG30B,UAAUsvD,MAAQ,SAAgBD,GACnC1lD,EAAwB,kBAAV0lD,GAAsBA,GAAS,GAE7C,IAAIqB,EAAsC,EAAxB/vD,KAAKwmC,KAAKkoB,EAAQ,IAChCsB,EAAWtB,EAAQ,GAGvB7jD,KAAK+hD,QAAQmD,GAETC,EAAW,GACbD,IAIF,IAAK,IAAIvsD,EAAI,EAAGA,EAAIusD,EAAavsD,IAC/BqH,KAAKmgD,MAAMxnD,GAAsB,UAAhBqH,KAAKmgD,MAAMxnD,GAS9B,OALIwsD,EAAW,IACbnlD,KAAKmgD,MAAMxnD,IAAMqH,KAAKmgD,MAAMxnD,GAAM,UAAc,GAAKwsD,GAIhDnlD,KAAKwhD,QACb,EAEDr4B,EAAG30B,UAAU0vD,KAAO,SAAeL,GACjC,OAAO7jD,KAAK8hD,QAAQgC,MAAMD,EAC3B,EAGD16B,EAAG30B,UAAU4wD,KAAO,SAAeC,EAAKluC,GACtChZ,EAAsB,kBAARknD,GAAoBA,GAAO,GAEzC,IAAI9D,EAAO8D,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAUjB,OARArlD,KAAK+hD,QAAQR,EAAM,GAGjBvhD,KAAKmgD,MAAMoB,GADTpqC,EACgBnX,KAAKmgD,MAAMoB,GAAQ,GAAK+D,EAExBtlD,KAAKmgD,MAAMoB,KAAS,GAAK+D,GAGtCtlD,KAAKwhD,QACb,EAGDr4B,EAAG30B,UAAU+wD,KAAO,SAAe54C,GACjC,IAAI6B,EAkBAjH,EAAGnU,EAfP,GAAsB,IAAlB4M,KAAKkgD,UAAmC,IAAjBvzC,EAAIuzC,SAI7B,OAHAlgD,KAAKkgD,SAAW,EAChB1xC,EAAIxO,KAAKwlD,KAAK74C,GACd3M,KAAKkgD,UAAY,EACVlgD,KAAKgiD,YAGP,GAAsB,IAAlBhiD,KAAKkgD,UAAmC,IAAjBvzC,EAAIuzC,SAIpC,OAHAvzC,EAAIuzC,SAAW,EACf1xC,EAAIxO,KAAKwlD,KAAK74C,GACdA,EAAIuzC,SAAW,EACR1xC,EAAEwzC,YAKPhiD,KAAKpM,OAAS+Y,EAAI/Y,QACpB2T,EAAIvH,KACJ5M,EAAIuZ,IAEJpF,EAAIoF,EACJvZ,EAAI4M,MAIN,IADA,IAAI++C,EAAQ,EACHpmD,EAAI,EAAGA,EAAIvF,EAAEQ,OAAQ+E,IAC5B6V,GAAkB,EAAbjH,EAAE44C,MAAMxnD,KAAwB,EAAbvF,EAAE+sD,MAAMxnD,IAAUomD,EAC1C/+C,KAAKmgD,MAAMxnD,GAAS,SAAJ6V,EAChBuwC,EAAQvwC,IAAM,GAEhB,KAAiB,IAAVuwC,GAAepmD,EAAI4O,EAAE3T,OAAQ+E,IAClC6V,GAAkB,EAAbjH,EAAE44C,MAAMxnD,IAAUomD,EACvB/+C,KAAKmgD,MAAMxnD,GAAS,SAAJ6V,EAChBuwC,EAAQvwC,IAAM,GAIhB,GADAxO,KAAKpM,OAAS2T,EAAE3T,OACF,IAAVmrD,EACF/+C,KAAKmgD,MAAMngD,KAAKpM,QAAUmrD,EAC1B/+C,KAAKpM,cAEA,GAAI2T,IAAMvH,KACf,KAAOrH,EAAI4O,EAAE3T,OAAQ+E,IACnBqH,KAAKmgD,MAAMxnD,GAAK4O,EAAE44C,MAAMxnD,GAI5B,OAAOqH,IACR,EAGDmpB,EAAG30B,UAAUmP,IAAM,SAAcgJ,GAC/B,IAAIxK,EACJ,OAAqB,IAAjBwK,EAAIuzC,UAAoC,IAAlBlgD,KAAKkgD,UAC7BvzC,EAAIuzC,SAAW,EACf/9C,EAAMnC,KAAKylD,IAAI94C,GACfA,EAAIuzC,UAAY,EACT/9C,GACmB,IAAjBwK,EAAIuzC,UAAoC,IAAlBlgD,KAAKkgD,UACpClgD,KAAKkgD,SAAW,EAChB/9C,EAAMwK,EAAI84C,IAAIzlD,MACdA,KAAKkgD,SAAW,EACT/9C,GAGLnC,KAAKpM,OAAS+Y,EAAI/Y,OAAeoM,KAAK8hD,QAAQyD,KAAK54C,GAEhDA,EAAIm1C,QAAQyD,KAAKvlD,KACzB,EAGDmpB,EAAG30B,UAAUgxD,KAAO,SAAe74C,GAEjC,GAAqB,IAAjBA,EAAIuzC,SAAgB,CACtBvzC,EAAIuzC,SAAW,EACf,IAAI1xC,EAAIxO,KAAKulD,KAAK54C,GAElB,OADAA,EAAIuzC,SAAW,EACR1xC,EAAEwzC,WAGV,CAAM,GAAsB,IAAlBhiD,KAAKkgD,SAId,OAHAlgD,KAAKkgD,SAAW,EAChBlgD,KAAKulD,KAAK54C,GACV3M,KAAKkgD,SAAW,EACTlgD,KAAKgiD,YAId,IAWIz6C,EAAGnU,EAXH2tD,EAAM/gD,KAAK+gD,IAAIp0C,GAGnB,GAAY,IAARo0C,EAIF,OAHA/gD,KAAKkgD,SAAW,EAChBlgD,KAAKpM,OAAS,EACdoM,KAAKmgD,MAAM,GAAK,EACTngD,KAKL+gD,EAAM,GACRx5C,EAAIvH,KACJ5M,EAAIuZ,IAEJpF,EAAIoF,EACJvZ,EAAI4M,MAIN,IADA,IAAI++C,EAAQ,EACHpmD,EAAI,EAAGA,EAAIvF,EAAEQ,OAAQ+E,IAE5BomD,GADAvwC,GAAkB,EAAbjH,EAAE44C,MAAMxnD,KAAwB,EAAbvF,EAAE+sD,MAAMxnD,IAAUomD,IAC7B,GACb/+C,KAAKmgD,MAAMxnD,GAAS,SAAJ6V,EAElB,KAAiB,IAAVuwC,GAAepmD,EAAI4O,EAAE3T,OAAQ+E,IAElComD,GADAvwC,GAAkB,EAAbjH,EAAE44C,MAAMxnD,IAAUomD,IACV,GACb/+C,KAAKmgD,MAAMxnD,GAAS,SAAJ6V,EAIlB,GAAc,IAAVuwC,GAAepmD,EAAI4O,EAAE3T,QAAU2T,IAAMvH,KACvC,KAAOrH,EAAI4O,EAAE3T,OAAQ+E,IACnBqH,KAAKmgD,MAAMxnD,GAAK4O,EAAE44C,MAAMxnD,GAU5B,OANAqH,KAAKpM,OAASuB,KAAKsf,IAAIzU,KAAKpM,OAAQ+E,GAEhC4O,IAAMvH,OACRA,KAAKkgD,SAAW,GAGXlgD,KAAKwhD,QACb,EAGDr4B,EAAG30B,UAAUixD,IAAM,SAAc94C,GAC/B,OAAO3M,KAAK8hD,QAAQ0D,KAAK74C,EAC1B,EA8CD,IAAI+4C,EAAc,SAAsBzmD,EAAM0N,EAAK7N,GACjD,IAIIjK,EACA8wD,EACAjC,EANAn8C,EAAItI,EAAKkhD,MACT/sD,EAAIuZ,EAAIwzC,MACRyF,EAAI9mD,EAAIqhD,MACRzxC,EAAI,EAIJm3C,EAAY,EAAPt+C,EAAE,GACPu+C,EAAW,KAALD,EACNE,EAAMF,IAAO,GACb7gC,EAAY,EAAPzd,EAAE,GACPy+C,EAAW,KAALhhC,EACNihC,EAAMjhC,IAAO,GACbC,EAAY,EAAP1d,EAAE,GACP2+C,EAAW,KAALjhC,EACNkhC,EAAMlhC,IAAO,GACbmhC,EAAY,EAAP7+C,EAAE,GACP8+C,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPh/C,EAAE,GACPi/C,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPn/C,EAAE,GACPo/C,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPt/C,EAAE,GACPu/C,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPz/C,EAAE,GACP0/C,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP5/C,EAAE,GACP6/C,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP//C,EAAE,GACPggD,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPr0D,EAAE,GACPs0D,EAAW,KAALD,EACNE,EAAMF,IAAO,GACb33C,EAAY,EAAP1c,EAAE,GACPw0D,EAAW,KAAL93C,EACN+3C,EAAM/3C,IAAO,GACbC,EAAY,EAAP3c,EAAE,GACP00D,EAAW,KAAL/3C,EACNg4C,EAAMh4C,IAAO,GACbkS,EAAY,EAAP7uB,EAAE,GACP40D,EAAW,KAAL/lC,EACNgmC,EAAMhmC,IAAO,GACb5O,EAAY,EAAPjgB,EAAE,GACP80D,EAAW,KAAL70C,EACN80C,GAAM90C,IAAO,GACbC,GAAY,EAAPlgB,EAAE,GACPg1D,GAAW,KAAL90C,GACN+0C,GAAM/0C,KAAO,GACb4O,GAAY,EAAP9uB,EAAE,GACPk1D,GAAW,KAALpmC,GACNqmC,GAAMrmC,KAAO,GACbsmC,GAAY,EAAPp1D,EAAE,GACPq1D,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPv1D,EAAE,GACPw1D,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbxmC,GAAY,EAAP/uB,EAAE,GACP01D,GAAW,KAAL3mC,GACN4mC,GAAM5mC,KAAO,GAEjBrjB,EAAIohD,SAAWjhD,EAAKihD,SAAWvzC,EAAIuzC,SACnCphD,EAAIlL,OAAS,GAMb,IAAIo1D,IAAQt6C,GAJZ7Z,EAAKM,KAAK8zD,KAAKnD,EAAK4B,IAIE,KAAa,MAFnC/B,GADAA,EAAMxwD,KAAK8zD,KAAKnD,EAAK6B,IACRxyD,KAAK8zD,KAAKlD,EAAK2B,GAAQ,KAEU,IAAO,EACrDh5C,IAFAg1C,EAAKvuD,KAAK8zD,KAAKlD,EAAK4B,KAEPhC,IAAQ,IAAO,IAAMqD,KAAO,IAAO,EAChDA,IAAM,SAENn0D,EAAKM,KAAK8zD,KAAKjD,EAAK0B,GAEpB/B,GADAA,EAAMxwD,KAAK8zD,KAAKjD,EAAK2B,IACRxyD,KAAK8zD,KAAKhD,EAAKyB,GAAQ,EACpChE,EAAKvuD,KAAK8zD,KAAKhD,EAAK0B,GAKpB,IAAIuB,IAAQx6C,GAJZ7Z,EAAMA,EAAKM,KAAK8zD,KAAKnD,EAAK8B,GAAQ,GAIZ,KAAa,MAFnCjC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnD,EAAK+B,GAAQ,GACvB1yD,KAAK8zD,KAAKlD,EAAK6B,GAAQ,KAEU,IAAO,EACrDl5C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKlD,EAAK8B,GAAQ,IAErBlC,IAAQ,IAAO,IAAMuD,KAAO,IAAO,EAChDA,IAAM,SAENr0D,EAAKM,KAAK8zD,KAAK/C,EAAKwB,GAEpB/B,GADAA,EAAMxwD,KAAK8zD,KAAK/C,EAAKyB,IACRxyD,KAAK8zD,KAAK9C,EAAKuB,GAAQ,EACpChE,EAAKvuD,KAAK8zD,KAAK9C,EAAKwB,GACpB9yD,EAAMA,EAAKM,KAAK8zD,KAAKjD,EAAK4B,GAAQ,EAElCjC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKjD,EAAK6B,GAAQ,GACvB1yD,KAAK8zD,KAAKhD,EAAK2B,GAAQ,EACpClE,EAAMA,EAAKvuD,KAAK8zD,KAAKhD,EAAK4B,GAAQ,EAKlC,IAAIsB,IAAQz6C,GAJZ7Z,EAAMA,EAAKM,KAAK8zD,KAAKnD,EAAKgC,GAAQ,GAIZ,KAAa,MAFnCnC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnD,EAAKiC,GAAQ,GACvB5yD,KAAK8zD,KAAKlD,EAAK+B,GAAQ,KAEU,IAAO,EACrDp5C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKlD,EAAKgC,GAAQ,IAErBpC,IAAQ,IAAO,IAAMwD,KAAO,IAAO,EAChDA,IAAM,SAENt0D,EAAKM,KAAK8zD,KAAK5C,EAAKqB,GAEpB/B,GADAA,EAAMxwD,KAAK8zD,KAAK5C,EAAKsB,IACRxyD,KAAK8zD,KAAK3C,EAAKoB,GAAQ,EACpChE,EAAKvuD,KAAK8zD,KAAK3C,EAAKqB,GACpB9yD,EAAMA,EAAKM,KAAK8zD,KAAK/C,EAAK0B,GAAQ,EAElCjC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK/C,EAAK2B,GAAQ,GACvB1yD,KAAK8zD,KAAK9C,EAAKyB,GAAQ,EACpClE,EAAMA,EAAKvuD,KAAK8zD,KAAK9C,EAAK0B,GAAQ,EAClChzD,EAAMA,EAAKM,KAAK8zD,KAAKjD,EAAK8B,GAAQ,EAElCnC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKjD,EAAK+B,GAAQ,GACvB5yD,KAAK8zD,KAAKhD,EAAK6B,GAAQ,EACpCpE,EAAMA,EAAKvuD,KAAK8zD,KAAKhD,EAAK8B,GAAQ,EAKlC,IAAIqB,IAAQ16C,GAJZ7Z,EAAMA,EAAKM,KAAK8zD,KAAKnD,EAAKkC,GAAQ,GAIZ,KAAa,MAFnCrC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnD,EAAKmC,GAAQ,GACvB9yD,KAAK8zD,KAAKlD,EAAKiC,GAAQ,KAEU,IAAO,EACrDt5C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKlD,EAAKkC,GAAQ,IAErBtC,IAAQ,IAAO,IAAMyD,KAAO,IAAO,EAChDA,IAAM,SAENv0D,EAAKM,KAAK8zD,KAAKzC,EAAKkB,GAEpB/B,GADAA,EAAMxwD,KAAK8zD,KAAKzC,EAAKmB,IACRxyD,KAAK8zD,KAAKxC,EAAKiB,GAAQ,EACpChE,EAAKvuD,KAAK8zD,KAAKxC,EAAKkB,GACpB9yD,EAAMA,EAAKM,KAAK8zD,KAAK5C,EAAKuB,GAAQ,EAElCjC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK5C,EAAKwB,GAAQ,GACvB1yD,KAAK8zD,KAAK3C,EAAKsB,GAAQ,EACpClE,EAAMA,EAAKvuD,KAAK8zD,KAAK3C,EAAKuB,GAAQ,EAClChzD,EAAMA,EAAKM,KAAK8zD,KAAK/C,EAAK4B,GAAQ,EAElCnC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK/C,EAAK6B,GAAQ,GACvB5yD,KAAK8zD,KAAK9C,EAAK2B,GAAQ,EACpCpE,EAAMA,EAAKvuD,KAAK8zD,KAAK9C,EAAK4B,GAAQ,EAClClzD,EAAMA,EAAKM,KAAK8zD,KAAKjD,EAAKgC,GAAQ,EAElCrC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKjD,EAAKiC,GAAQ,GACvB9yD,KAAK8zD,KAAKhD,EAAK+B,GAAQ,EACpCtE,EAAMA,EAAKvuD,KAAK8zD,KAAKhD,EAAKgC,GAAQ,EAKlC,IAAIoB,IAAQ36C,GAJZ7Z,EAAMA,EAAKM,KAAK8zD,KAAKnD,EAAKoC,GAAQ,GAIZ,KAAa,MAFnCvC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnD,EAAKqC,IAAQ,GACvBhzD,KAAK8zD,KAAKlD,EAAKmC,GAAQ,KAEU,IAAO,EACrDx5C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKlD,EAAKoC,IAAQ,IAErBxC,IAAQ,IAAO,IAAM0D,KAAO,IAAO,EAChDA,IAAM,SAENx0D,EAAKM,KAAK8zD,KAAKtC,EAAKe,GAEpB/B,GADAA,EAAMxwD,KAAK8zD,KAAKtC,EAAKgB,IACRxyD,KAAK8zD,KAAKrC,EAAKc,GAAQ,EACpChE,EAAKvuD,KAAK8zD,KAAKrC,EAAKe,GACpB9yD,EAAMA,EAAKM,KAAK8zD,KAAKzC,EAAKoB,GAAQ,EAElCjC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKzC,EAAKqB,GAAQ,GACvB1yD,KAAK8zD,KAAKxC,EAAKmB,GAAQ,EACpClE,EAAMA,EAAKvuD,KAAK8zD,KAAKxC,EAAKoB,GAAQ,EAClChzD,EAAMA,EAAKM,KAAK8zD,KAAK5C,EAAKyB,GAAQ,EAElCnC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK5C,EAAK0B,GAAQ,GACvB5yD,KAAK8zD,KAAK3C,EAAKwB,GAAQ,EACpCpE,EAAMA,EAAKvuD,KAAK8zD,KAAK3C,EAAKyB,GAAQ,EAClClzD,EAAMA,EAAKM,KAAK8zD,KAAK/C,EAAK8B,GAAQ,EAElCrC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK/C,EAAK+B,GAAQ,GACvB9yD,KAAK8zD,KAAK9C,EAAK6B,GAAQ,EACpCtE,EAAMA,EAAKvuD,KAAK8zD,KAAK9C,EAAK8B,GAAQ,EAClCpzD,EAAMA,EAAKM,KAAK8zD,KAAKjD,EAAKkC,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKjD,EAAKmC,IAAQ,GACvBhzD,KAAK8zD,KAAKhD,EAAKiC,GAAQ,EACpCxE,EAAMA,EAAKvuD,KAAK8zD,KAAKhD,EAAKkC,IAAQ,EAKlC,IAAImB,IAAQ56C,GAJZ7Z,EAAMA,EAAKM,KAAK8zD,KAAKnD,EAAKsC,IAAQ,GAIZ,KAAa,MAFnCzC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnD,EAAKuC,IAAQ,GACvBlzD,KAAK8zD,KAAKlD,EAAKqC,IAAQ,KAEU,IAAO,EACrD15C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKlD,EAAKsC,IAAQ,IAErB1C,IAAQ,IAAO,IAAM2D,KAAO,IAAO,EAChDA,IAAM,SAENz0D,EAAKM,KAAK8zD,KAAKnC,EAAKY,GAEpB/B,GADAA,EAAMxwD,KAAK8zD,KAAKnC,EAAKa,IACRxyD,KAAK8zD,KAAKlC,EAAKW,GAAQ,EACpChE,EAAKvuD,KAAK8zD,KAAKlC,EAAKY,GACpB9yD,EAAMA,EAAKM,KAAK8zD,KAAKtC,EAAKiB,GAAQ,EAElCjC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKtC,EAAKkB,GAAQ,GACvB1yD,KAAK8zD,KAAKrC,EAAKgB,GAAQ,EACpClE,EAAMA,EAAKvuD,KAAK8zD,KAAKrC,EAAKiB,GAAQ,EAClChzD,EAAMA,EAAKM,KAAK8zD,KAAKzC,EAAKsB,GAAQ,EAElCnC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKzC,EAAKuB,GAAQ,GACvB5yD,KAAK8zD,KAAKxC,EAAKqB,GAAQ,EACpCpE,EAAMA,EAAKvuD,KAAK8zD,KAAKxC,EAAKsB,GAAQ,EAClClzD,EAAMA,EAAKM,KAAK8zD,KAAK5C,EAAK2B,GAAQ,EAElCrC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK5C,EAAK4B,GAAQ,GACvB9yD,KAAK8zD,KAAK3C,EAAK0B,GAAQ,EACpCtE,EAAMA,EAAKvuD,KAAK8zD,KAAK3C,EAAK2B,GAAQ,EAClCpzD,EAAMA,EAAKM,KAAK8zD,KAAK/C,EAAKgC,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK/C,EAAKiC,IAAQ,GACvBhzD,KAAK8zD,KAAK9C,EAAK+B,GAAQ,EACpCxE,EAAMA,EAAKvuD,KAAK8zD,KAAK9C,EAAKgC,IAAQ,EAClCtzD,EAAMA,EAAKM,KAAK8zD,KAAKjD,EAAKoC,IAAQ,EAElCzC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKjD,EAAKqC,IAAQ,GACvBlzD,KAAK8zD,KAAKhD,EAAKmC,IAAQ,EACpC1E,EAAMA,EAAKvuD,KAAK8zD,KAAKhD,EAAKoC,IAAQ,EAKlC,IAAIkB,IAAQ76C,GAJZ7Z,EAAMA,EAAKM,KAAK8zD,KAAKnD,EAAKwC,IAAQ,GAIZ,KAAa,MAFnC3C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnD,EAAKyC,IAAQ,GACvBpzD,KAAK8zD,KAAKlD,EAAKuC,IAAQ,KAEU,IAAO,EACrD55C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKlD,EAAKwC,IAAQ,IAErB5C,IAAQ,IAAO,IAAM4D,KAAO,IAAO,EAChDA,IAAM,SAEN10D,EAAKM,KAAK8zD,KAAKhC,EAAKS,GAEpB/B,GADAA,EAAMxwD,KAAK8zD,KAAKhC,EAAKU,IACRxyD,KAAK8zD,KAAK/B,EAAKQ,GAAQ,EACpChE,EAAKvuD,KAAK8zD,KAAK/B,EAAKS,GACpB9yD,EAAMA,EAAKM,KAAK8zD,KAAKnC,EAAKc,GAAQ,EAElCjC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnC,EAAKe,GAAQ,GACvB1yD,KAAK8zD,KAAKlC,EAAKa,GAAQ,EACpClE,EAAMA,EAAKvuD,KAAK8zD,KAAKlC,EAAKc,GAAQ,EAClChzD,EAAMA,EAAKM,KAAK8zD,KAAKtC,EAAKmB,GAAQ,EAElCnC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKtC,EAAKoB,GAAQ,GACvB5yD,KAAK8zD,KAAKrC,EAAKkB,GAAQ,EACpCpE,EAAMA,EAAKvuD,KAAK8zD,KAAKrC,EAAKmB,GAAQ,EAClClzD,EAAMA,EAAKM,KAAK8zD,KAAKzC,EAAKwB,GAAQ,EAElCrC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKzC,EAAKyB,GAAQ,GACvB9yD,KAAK8zD,KAAKxC,EAAKuB,GAAQ,EACpCtE,EAAMA,EAAKvuD,KAAK8zD,KAAKxC,EAAKwB,GAAQ,EAClCpzD,EAAMA,EAAKM,KAAK8zD,KAAK5C,EAAK6B,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK5C,EAAK8B,IAAQ,GACvBhzD,KAAK8zD,KAAK3C,EAAK4B,GAAQ,EACpCxE,EAAMA,EAAKvuD,KAAK8zD,KAAK3C,EAAK6B,IAAQ,EAClCtzD,EAAMA,EAAKM,KAAK8zD,KAAK/C,EAAKkC,IAAQ,EAElCzC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK/C,EAAKmC,IAAQ,GACvBlzD,KAAK8zD,KAAK9C,EAAKiC,IAAQ,EACpC1E,EAAMA,EAAKvuD,KAAK8zD,KAAK9C,EAAKkC,IAAQ,EAClCxzD,EAAMA,EAAKM,KAAK8zD,KAAKjD,EAAKsC,IAAQ,EAElC3C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKjD,EAAKuC,IAAQ,GACvBpzD,KAAK8zD,KAAKhD,EAAKqC,IAAQ,EACpC5E,EAAMA,EAAKvuD,KAAK8zD,KAAKhD,EAAKsC,IAAQ,EAKlC,IAAIiB,IAAQ96C,GAJZ7Z,EAAMA,EAAKM,KAAK8zD,KAAKnD,EAAK2C,IAAQ,GAIZ,KAAa,MAFnC9C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnD,EAAK4C,IAAQ,GACvBvzD,KAAK8zD,KAAKlD,EAAK0C,IAAQ,KAEU,IAAO,EACrD/5C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKlD,EAAK2C,IAAQ,IAErB/C,IAAQ,IAAO,IAAM6D,KAAO,IAAO,EAChDA,IAAM,SAEN30D,EAAKM,KAAK8zD,KAAK7B,EAAKM,GAEpB/B,GADAA,EAAMxwD,KAAK8zD,KAAK7B,EAAKO,IACRxyD,KAAK8zD,KAAK5B,EAAKK,GAAQ,EACpChE,EAAKvuD,KAAK8zD,KAAK5B,EAAKM,GACpB9yD,EAAMA,EAAKM,KAAK8zD,KAAKhC,EAAKW,GAAQ,EAElCjC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKhC,EAAKY,GAAQ,GACvB1yD,KAAK8zD,KAAK/B,EAAKU,GAAQ,EACpClE,EAAMA,EAAKvuD,KAAK8zD,KAAK/B,EAAKW,GAAQ,EAClChzD,EAAMA,EAAKM,KAAK8zD,KAAKnC,EAAKgB,GAAQ,EAElCnC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnC,EAAKiB,GAAQ,GACvB5yD,KAAK8zD,KAAKlC,EAAKe,GAAQ,EACpCpE,EAAMA,EAAKvuD,KAAK8zD,KAAKlC,EAAKgB,GAAQ,EAClClzD,EAAMA,EAAKM,KAAK8zD,KAAKtC,EAAKqB,GAAQ,EAElCrC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKtC,EAAKsB,GAAQ,GACvB9yD,KAAK8zD,KAAKrC,EAAKoB,GAAQ,EACpCtE,EAAMA,EAAKvuD,KAAK8zD,KAAKrC,EAAKqB,GAAQ,EAClCpzD,EAAMA,EAAKM,KAAK8zD,KAAKzC,EAAK0B,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKzC,EAAK2B,IAAQ,GACvBhzD,KAAK8zD,KAAKxC,EAAKyB,GAAQ,EACpCxE,EAAMA,EAAKvuD,KAAK8zD,KAAKxC,EAAK0B,IAAQ,EAClCtzD,EAAMA,EAAKM,KAAK8zD,KAAK5C,EAAK+B,IAAQ,EAElCzC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK5C,EAAKgC,IAAQ,GACvBlzD,KAAK8zD,KAAK3C,EAAK8B,IAAQ,EACpC1E,EAAMA,EAAKvuD,KAAK8zD,KAAK3C,EAAK+B,IAAQ,EAClCxzD,EAAMA,EAAKM,KAAK8zD,KAAK/C,EAAKoC,IAAQ,EAElC3C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK/C,EAAKqC,IAAQ,GACvBpzD,KAAK8zD,KAAK9C,EAAKmC,IAAQ,EACpC5E,EAAMA,EAAKvuD,KAAK8zD,KAAK9C,EAAKoC,IAAQ,EAClC1zD,EAAMA,EAAKM,KAAK8zD,KAAKjD,EAAKyC,IAAQ,EAElC9C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKjD,EAAK0C,IAAQ,GACvBvzD,KAAK8zD,KAAKhD,EAAKwC,IAAQ,EACpC/E,EAAMA,EAAKvuD,KAAK8zD,KAAKhD,EAAKyC,IAAQ,EAKlC,IAAIe,IAAQ/6C,GAJZ7Z,EAAMA,EAAKM,KAAK8zD,KAAKnD,EAAK8C,IAAQ,GAIZ,KAAa,MAFnCjD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnD,EAAK+C,IAAQ,GACvB1zD,KAAK8zD,KAAKlD,EAAK6C,IAAQ,KAEU,IAAO,EACrDl6C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKlD,EAAK8C,IAAQ,IAErBlD,IAAQ,IAAO,IAAM8D,KAAO,IAAO,EAChDA,IAAM,SAEN50D,EAAKM,KAAK8zD,KAAK1B,EAAKG,GAEpB/B,GADAA,EAAMxwD,KAAK8zD,KAAK1B,EAAKI,IACRxyD,KAAK8zD,KAAKzB,EAAKE,GAAQ,EACpChE,EAAKvuD,KAAK8zD,KAAKzB,EAAKG,GACpB9yD,EAAMA,EAAKM,KAAK8zD,KAAK7B,EAAKQ,GAAQ,EAElCjC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK7B,EAAKS,GAAQ,GACvB1yD,KAAK8zD,KAAK5B,EAAKO,GAAQ,EACpClE,EAAMA,EAAKvuD,KAAK8zD,KAAK5B,EAAKQ,GAAQ,EAClChzD,EAAMA,EAAKM,KAAK8zD,KAAKhC,EAAKa,GAAQ,EAElCnC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKhC,EAAKc,GAAQ,GACvB5yD,KAAK8zD,KAAK/B,EAAKY,GAAQ,EACpCpE,EAAMA,EAAKvuD,KAAK8zD,KAAK/B,EAAKa,GAAQ,EAClClzD,EAAMA,EAAKM,KAAK8zD,KAAKnC,EAAKkB,GAAQ,EAElCrC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnC,EAAKmB,GAAQ,GACvB9yD,KAAK8zD,KAAKlC,EAAKiB,GAAQ,EACpCtE,EAAMA,EAAKvuD,KAAK8zD,KAAKlC,EAAKkB,GAAQ,EAClCpzD,EAAMA,EAAKM,KAAK8zD,KAAKtC,EAAKuB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKtC,EAAKwB,IAAQ,GACvBhzD,KAAK8zD,KAAKrC,EAAKsB,GAAQ,EACpCxE,EAAMA,EAAKvuD,KAAK8zD,KAAKrC,EAAKuB,IAAQ,EAClCtzD,EAAMA,EAAKM,KAAK8zD,KAAKzC,EAAK4B,IAAQ,EAElCzC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKzC,EAAK6B,IAAQ,GACvBlzD,KAAK8zD,KAAKxC,EAAK2B,IAAQ,EACpC1E,EAAMA,EAAKvuD,KAAK8zD,KAAKxC,EAAK4B,IAAQ,EAClCxzD,EAAMA,EAAKM,KAAK8zD,KAAK5C,EAAKiC,IAAQ,EAElC3C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK5C,EAAKkC,IAAQ,GACvBpzD,KAAK8zD,KAAK3C,EAAKgC,IAAQ,EACpC5E,EAAMA,EAAKvuD,KAAK8zD,KAAK3C,EAAKiC,IAAQ,EAClC1zD,EAAMA,EAAKM,KAAK8zD,KAAK/C,EAAKuC,IAAQ,EAElC9C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK/C,EAAKwC,IAAQ,GACvBvzD,KAAK8zD,KAAK9C,EAAKsC,IAAQ,EACpC/E,EAAMA,EAAKvuD,KAAK8zD,KAAK9C,EAAKuC,IAAQ,EAClC7zD,EAAMA,EAAKM,KAAK8zD,KAAKjD,EAAK4C,IAAQ,EAElCjD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKjD,EAAK6C,IAAQ,GACvB1zD,KAAK8zD,KAAKhD,EAAK2C,IAAQ,EACpClF,EAAMA,EAAKvuD,KAAK8zD,KAAKhD,EAAK4C,IAAQ,EAKlC,IAAIa,IAAQh7C,GAJZ7Z,EAAMA,EAAKM,KAAK8zD,KAAKnD,EAAKgD,IAAQ,GAIZ,KAAa,MAFnCnD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnD,EAAKiD,IAAQ,GACvB5zD,KAAK8zD,KAAKlD,EAAK+C,IAAQ,KAEU,IAAO,EACrDp6C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKlD,EAAKgD,IAAQ,IAErBpD,IAAQ,IAAO,IAAM+D,KAAO,IAAO,EAChDA,IAAM,SAEN70D,EAAKM,KAAK8zD,KAAK1B,EAAKK,GAEpBjC,GADAA,EAAMxwD,KAAK8zD,KAAK1B,EAAKM,IACR1yD,KAAK8zD,KAAKzB,EAAKI,GAAQ,EACpClE,EAAKvuD,KAAK8zD,KAAKzB,EAAKK,GACpBhzD,EAAMA,EAAKM,KAAK8zD,KAAK7B,EAAKU,GAAQ,EAElCnC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK7B,EAAKW,GAAQ,GACvB5yD,KAAK8zD,KAAK5B,EAAKS,GAAQ,EACpCpE,EAAMA,EAAKvuD,KAAK8zD,KAAK5B,EAAKU,GAAQ,EAClClzD,EAAMA,EAAKM,KAAK8zD,KAAKhC,EAAKe,GAAQ,EAElCrC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKhC,EAAKgB,GAAQ,GACvB9yD,KAAK8zD,KAAK/B,EAAKc,GAAQ,EACpCtE,EAAMA,EAAKvuD,KAAK8zD,KAAK/B,EAAKe,GAAQ,EAClCpzD,EAAMA,EAAKM,KAAK8zD,KAAKnC,EAAKoB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnC,EAAKqB,IAAQ,GACvBhzD,KAAK8zD,KAAKlC,EAAKmB,GAAQ,EACpCxE,EAAMA,EAAKvuD,KAAK8zD,KAAKlC,EAAKoB,IAAQ,EAClCtzD,EAAMA,EAAKM,KAAK8zD,KAAKtC,EAAKyB,IAAQ,EAElCzC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKtC,EAAK0B,IAAQ,GACvBlzD,KAAK8zD,KAAKrC,EAAKwB,IAAQ,EACpC1E,EAAMA,EAAKvuD,KAAK8zD,KAAKrC,EAAKyB,IAAQ,EAClCxzD,EAAMA,EAAKM,KAAK8zD,KAAKzC,EAAK8B,IAAQ,EAElC3C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKzC,EAAK+B,IAAQ,GACvBpzD,KAAK8zD,KAAKxC,EAAK6B,IAAQ,EACpC5E,EAAMA,EAAKvuD,KAAK8zD,KAAKxC,EAAK8B,IAAQ,EAClC1zD,EAAMA,EAAKM,KAAK8zD,KAAK5C,EAAKoC,IAAQ,EAElC9C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK5C,EAAKqC,IAAQ,GACvBvzD,KAAK8zD,KAAK3C,EAAKmC,IAAQ,EACpC/E,EAAMA,EAAKvuD,KAAK8zD,KAAK3C,EAAKoC,IAAQ,EAClC7zD,EAAMA,EAAKM,KAAK8zD,KAAK/C,EAAK0C,IAAQ,EAElCjD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK/C,EAAK2C,IAAQ,GACvB1zD,KAAK8zD,KAAK9C,EAAKyC,IAAQ,EACpClF,EAAMA,EAAKvuD,KAAK8zD,KAAK9C,EAAK0C,IAAQ,EAKlC,IAAIc,IAASj7C,GAJb7Z,EAAMA,EAAKM,KAAK8zD,KAAKjD,EAAK8C,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKjD,EAAK+C,IAAQ,GACvB5zD,KAAK8zD,KAAKhD,EAAK6C,IAAQ,KAEW,IAAO,EACtDp6C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKhD,EAAK8C,IAAQ,IAErBpD,IAAQ,IAAO,IAAMgE,KAAQ,IAAO,EACjDA,IAAO,SAEP90D,EAAKM,KAAK8zD,KAAK1B,EAAKO,GAEpBnC,GADAA,EAAMxwD,KAAK8zD,KAAK1B,EAAKQ,IACR5yD,KAAK8zD,KAAKzB,EAAKM,GAAQ,EACpCpE,EAAKvuD,KAAK8zD,KAAKzB,EAAKO,GACpBlzD,EAAMA,EAAKM,KAAK8zD,KAAK7B,EAAKY,GAAQ,EAElCrC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK7B,EAAKa,GAAQ,GACvB9yD,KAAK8zD,KAAK5B,EAAKW,GAAQ,EACpCtE,EAAMA,EAAKvuD,KAAK8zD,KAAK5B,EAAKY,GAAQ,EAClCpzD,EAAMA,EAAKM,KAAK8zD,KAAKhC,EAAKiB,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKhC,EAAKkB,IAAQ,GACvBhzD,KAAK8zD,KAAK/B,EAAKgB,GAAQ,EACpCxE,EAAMA,EAAKvuD,KAAK8zD,KAAK/B,EAAKiB,IAAQ,EAClCtzD,EAAMA,EAAKM,KAAK8zD,KAAKnC,EAAKsB,IAAQ,EAElCzC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnC,EAAKuB,IAAQ,GACvBlzD,KAAK8zD,KAAKlC,EAAKqB,IAAQ,EACpC1E,EAAMA,EAAKvuD,KAAK8zD,KAAKlC,EAAKsB,IAAQ,EAClCxzD,EAAMA,EAAKM,KAAK8zD,KAAKtC,EAAK2B,IAAQ,EAElC3C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKtC,EAAK4B,IAAQ,GACvBpzD,KAAK8zD,KAAKrC,EAAK0B,IAAQ,EACpC5E,EAAMA,EAAKvuD,KAAK8zD,KAAKrC,EAAK2B,IAAQ,EAClC1zD,EAAMA,EAAKM,KAAK8zD,KAAKzC,EAAKiC,IAAQ,EAElC9C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKzC,EAAKkC,IAAQ,GACvBvzD,KAAK8zD,KAAKxC,EAAKgC,IAAQ,EACpC/E,EAAMA,EAAKvuD,KAAK8zD,KAAKxC,EAAKiC,IAAQ,EAClC7zD,EAAMA,EAAKM,KAAK8zD,KAAK5C,EAAKuC,IAAQ,EAElCjD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK5C,EAAKwC,IAAQ,GACvB1zD,KAAK8zD,KAAK3C,EAAKsC,IAAQ,EACpClF,EAAMA,EAAKvuD,KAAK8zD,KAAK3C,EAAKuC,IAAQ,EAKlC,IAAIe,IAASl7C,GAJb7Z,EAAMA,EAAKM,KAAK8zD,KAAK/C,EAAK4C,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK/C,EAAK6C,IAAQ,GACvB5zD,KAAK8zD,KAAK9C,EAAK2C,IAAQ,KAEW,IAAO,EACtDp6C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAK9C,EAAK4C,IAAQ,IAErBpD,IAAQ,IAAO,IAAMiE,KAAQ,IAAO,EACjDA,IAAO,SAEP/0D,EAAKM,KAAK8zD,KAAK1B,EAAKS,GAEpBrC,GADAA,EAAMxwD,KAAK8zD,KAAK1B,EAAKU,IACR9yD,KAAK8zD,KAAKzB,EAAKQ,GAAQ,EACpCtE,EAAKvuD,KAAK8zD,KAAKzB,EAAKS,GACpBpzD,EAAMA,EAAKM,KAAK8zD,KAAK7B,EAAKc,GAAQ,EAElCvC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK7B,EAAKe,IAAQ,GACvBhzD,KAAK8zD,KAAK5B,EAAKa,GAAQ,EACpCxE,EAAMA,EAAKvuD,KAAK8zD,KAAK5B,EAAKc,IAAQ,EAClCtzD,EAAMA,EAAKM,KAAK8zD,KAAKhC,EAAKmB,IAAQ,EAElCzC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKhC,EAAKoB,IAAQ,GACvBlzD,KAAK8zD,KAAK/B,EAAKkB,IAAQ,EACpC1E,EAAMA,EAAKvuD,KAAK8zD,KAAK/B,EAAKmB,IAAQ,EAClCxzD,EAAMA,EAAKM,KAAK8zD,KAAKnC,EAAKwB,IAAQ,EAElC3C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnC,EAAKyB,IAAQ,GACvBpzD,KAAK8zD,KAAKlC,EAAKuB,IAAQ,EACpC5E,EAAMA,EAAKvuD,KAAK8zD,KAAKlC,EAAKwB,IAAQ,EAClC1zD,EAAMA,EAAKM,KAAK8zD,KAAKtC,EAAK8B,IAAQ,EAElC9C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKtC,EAAK+B,IAAQ,GACvBvzD,KAAK8zD,KAAKrC,EAAK6B,IAAQ,EACpC/E,EAAMA,EAAKvuD,KAAK8zD,KAAKrC,EAAK8B,IAAQ,EAClC7zD,EAAMA,EAAKM,KAAK8zD,KAAKzC,EAAKoC,IAAQ,EAElCjD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKzC,EAAKqC,IAAQ,GACvB1zD,KAAK8zD,KAAKxC,EAAKmC,IAAQ,EACpClF,EAAMA,EAAKvuD,KAAK8zD,KAAKxC,EAAKoC,IAAQ,EAKlC,IAAIgB,IAASn7C,GAJb7Z,EAAMA,EAAKM,KAAK8zD,KAAK5C,EAAKyC,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK5C,EAAK0C,IAAQ,GACvB5zD,KAAK8zD,KAAK3C,EAAKwC,IAAQ,KAEW,IAAO,EACtDp6C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAK3C,EAAKyC,IAAQ,IAErBpD,IAAQ,IAAO,IAAMkE,KAAQ,IAAO,EACjDA,IAAO,SAEPh1D,EAAKM,KAAK8zD,KAAK1B,EAAKW,GAEpBvC,GADAA,EAAMxwD,KAAK8zD,KAAK1B,EAAKY,KACRhzD,KAAK8zD,KAAKzB,EAAKU,GAAQ,EACpCxE,EAAKvuD,KAAK8zD,KAAKzB,EAAKW,IACpBtzD,EAAMA,EAAKM,KAAK8zD,KAAK7B,EAAKgB,IAAQ,EAElCzC,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK7B,EAAKiB,IAAQ,GACvBlzD,KAAK8zD,KAAK5B,EAAKe,IAAQ,EACpC1E,EAAMA,EAAKvuD,KAAK8zD,KAAK5B,EAAKgB,IAAQ,EAClCxzD,EAAMA,EAAKM,KAAK8zD,KAAKhC,EAAKqB,IAAQ,EAElC3C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKhC,EAAKsB,IAAQ,GACvBpzD,KAAK8zD,KAAK/B,EAAKoB,IAAQ,EACpC5E,EAAMA,EAAKvuD,KAAK8zD,KAAK/B,EAAKqB,IAAQ,EAClC1zD,EAAMA,EAAKM,KAAK8zD,KAAKnC,EAAK2B,IAAQ,EAElC9C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnC,EAAK4B,IAAQ,GACvBvzD,KAAK8zD,KAAKlC,EAAK0B,IAAQ,EACpC/E,EAAMA,EAAKvuD,KAAK8zD,KAAKlC,EAAK2B,IAAQ,EAClC7zD,EAAMA,EAAKM,KAAK8zD,KAAKtC,EAAKiC,IAAQ,EAElCjD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKtC,EAAKkC,IAAQ,GACvB1zD,KAAK8zD,KAAKrC,EAAKgC,IAAQ,EACpClF,EAAMA,EAAKvuD,KAAK8zD,KAAKrC,EAAKiC,IAAQ,EAKlC,IAAIiB,IAASp7C,GAJb7Z,EAAMA,EAAKM,KAAK8zD,KAAKzC,EAAKsC,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKzC,EAAKuC,IAAQ,GACvB5zD,KAAK8zD,KAAKxC,EAAKqC,IAAQ,KAEW,IAAO,EACtDp6C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKxC,EAAKsC,IAAQ,IAErBpD,IAAQ,IAAO,IAAMmE,KAAQ,IAAO,EACjDA,IAAO,SAEPj1D,EAAKM,KAAK8zD,KAAK1B,EAAKa,IAEpBzC,GADAA,EAAMxwD,KAAK8zD,KAAK1B,EAAKc,KACRlzD,KAAK8zD,KAAKzB,EAAKY,IAAQ,EACpC1E,EAAKvuD,KAAK8zD,KAAKzB,EAAKa,IACpBxzD,EAAMA,EAAKM,KAAK8zD,KAAK7B,EAAKkB,IAAQ,EAElC3C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK7B,EAAKmB,IAAQ,GACvBpzD,KAAK8zD,KAAK5B,EAAKiB,IAAQ,EACpC5E,EAAMA,EAAKvuD,KAAK8zD,KAAK5B,EAAKkB,IAAQ,EAClC1zD,EAAMA,EAAKM,KAAK8zD,KAAKhC,EAAKwB,IAAQ,EAElC9C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKhC,EAAKyB,IAAQ,GACvBvzD,KAAK8zD,KAAK/B,EAAKuB,IAAQ,EACpC/E,EAAMA,EAAKvuD,KAAK8zD,KAAK/B,EAAKwB,IAAQ,EAClC7zD,EAAMA,EAAKM,KAAK8zD,KAAKnC,EAAK8B,IAAQ,EAElCjD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnC,EAAK+B,IAAQ,GACvB1zD,KAAK8zD,KAAKlC,EAAK6B,IAAQ,EACpClF,EAAMA,EAAKvuD,KAAK8zD,KAAKlC,EAAK8B,IAAQ,EAKlC,IAAIkB,IAASr7C,GAJb7Z,EAAMA,EAAKM,KAAK8zD,KAAKtC,EAAKmC,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKtC,EAAKoC,IAAQ,GACvB5zD,KAAK8zD,KAAKrC,EAAKkC,IAAQ,KAEW,IAAO,EACtDp6C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKrC,EAAKmC,IAAQ,IAErBpD,IAAQ,IAAO,IAAMoE,KAAQ,IAAO,EACjDA,IAAO,SAEPl1D,EAAKM,KAAK8zD,KAAK1B,EAAKe,IAEpB3C,GADAA,EAAMxwD,KAAK8zD,KAAK1B,EAAKgB,KACRpzD,KAAK8zD,KAAKzB,EAAKc,IAAQ,EACpC5E,EAAKvuD,KAAK8zD,KAAKzB,EAAKe,IACpB1zD,EAAMA,EAAKM,KAAK8zD,KAAK7B,EAAKqB,IAAQ,EAElC9C,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK7B,EAAKsB,IAAQ,GACvBvzD,KAAK8zD,KAAK5B,EAAKoB,IAAQ,EACpC/E,EAAMA,EAAKvuD,KAAK8zD,KAAK5B,EAAKqB,IAAQ,EAClC7zD,EAAMA,EAAKM,KAAK8zD,KAAKhC,EAAK2B,IAAQ,EAElCjD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKhC,EAAK4B,IAAQ,GACvB1zD,KAAK8zD,KAAK/B,EAAK0B,IAAQ,EACpClF,EAAMA,EAAKvuD,KAAK8zD,KAAK/B,EAAK2B,IAAQ,EAKlC,IAAImB,IAASt7C,GAJb7Z,EAAMA,EAAKM,KAAK8zD,KAAKnC,EAAKgC,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKnC,EAAKiC,IAAQ,GACvB5zD,KAAK8zD,KAAKlC,EAAK+B,IAAQ,KAEW,IAAO,EACtDp6C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAKlC,EAAKgC,IAAQ,IAErBpD,IAAQ,IAAO,IAAMqE,KAAQ,IAAO,EACjDA,IAAO,SAEPn1D,EAAKM,KAAK8zD,KAAK1B,EAAKkB,IAEpB9C,GADAA,EAAMxwD,KAAK8zD,KAAK1B,EAAKmB,KACRvzD,KAAK8zD,KAAKzB,EAAKiB,IAAQ,EACpC/E,EAAKvuD,KAAK8zD,KAAKzB,EAAKkB,IACpB7zD,EAAMA,EAAKM,KAAK8zD,KAAK7B,EAAKwB,IAAQ,EAElCjD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK7B,EAAKyB,IAAQ,GACvB1zD,KAAK8zD,KAAK5B,EAAKuB,IAAQ,EACpClF,EAAMA,EAAKvuD,KAAK8zD,KAAK5B,EAAKwB,IAAQ,EAKlC,IAAIoB,IAASv7C,GAJb7Z,EAAMA,EAAKM,KAAK8zD,KAAKhC,EAAK6B,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAKhC,EAAK8B,IAAQ,GACvB5zD,KAAK8zD,KAAK/B,EAAK4B,IAAQ,KAEW,IAAO,EACtDp6C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAK/B,EAAK6B,IAAQ,IAErBpD,IAAQ,IAAO,IAAMsE,KAAQ,IAAO,EACjDA,IAAO,SAEPp1D,EAAKM,KAAK8zD,KAAK1B,EAAKqB,IAEpBjD,GADAA,EAAMxwD,KAAK8zD,KAAK1B,EAAKsB,KACR1zD,KAAK8zD,KAAKzB,EAAKoB,IAAQ,EACpClF,EAAKvuD,KAAK8zD,KAAKzB,EAAKqB,IAKpB,IAAIqB,IAASx7C,GAJb7Z,EAAMA,EAAKM,KAAK8zD,KAAK7B,EAAK0B,IAAQ,GAIX,KAAa,MAFpCnD,GADAA,EAAOA,EAAMxwD,KAAK8zD,KAAK7B,EAAK2B,IAAQ,GACvB5zD,KAAK8zD,KAAK5B,EAAKyB,IAAQ,KAEW,IAAO,EACtDp6C,IAFAg1C,EAAMA,EAAKvuD,KAAK8zD,KAAK5B,EAAK0B,IAAQ,IAErBpD,IAAQ,IAAO,IAAMuE,KAAQ,IAAO,EACjDA,IAAO,SAMP,IAAIC,IAASz7C,GAJb7Z,EAAKM,KAAK8zD,KAAK1B,EAAKuB,KAIG,KAAa,MAFpCnD,GADAA,EAAMxwD,KAAK8zD,KAAK1B,EAAKwB,KACR5zD,KAAK8zD,KAAKzB,EAAKsB,IAAQ,KAEW,IAAO,EA0BtD,OAzBAp6C,IAFAg1C,EAAKvuD,KAAK8zD,KAAKzB,EAAKuB,MAEPpD,IAAQ,IAAO,IAAMwE,KAAQ,IAAO,EACjDA,IAAO,SACPvE,EAAE,GAAKoD,GACPpD,EAAE,GAAKsD,GACPtD,EAAE,GAAKuD,GACPvD,EAAE,GAAKwD,GACPxD,EAAE,GAAKyD,GACPzD,EAAE,GAAK0D,GACP1D,EAAE,GAAK2D,GACP3D,EAAE,GAAK4D,GACP5D,EAAE,GAAK6D,GACP7D,EAAE,GAAK8D,GACP9D,EAAE,IAAM+D,GACR/D,EAAE,IAAMgE,GACRhE,EAAE,IAAMiE,GACRjE,EAAE,IAAMkE,GACRlE,EAAE,IAAMmE,GACRnE,EAAE,IAAMoE,GACRpE,EAAE,IAAMqE,GACRrE,EAAE,IAAMsE,GACRtE,EAAE,IAAMuE,GACE,IAANz7C,IACFk3C,EAAE,IAAMl3C,EACR5P,EAAIlL,UAECkL,CACR,EAOD,SAASsrD,EAAUnrD,EAAM0N,EAAK7N,GAC5BA,EAAIohD,SAAWvzC,EAAIuzC,SAAWjhD,EAAKihD,SACnCphD,EAAIlL,OAASqL,EAAKrL,OAAS+Y,EAAI/Y,OAI/B,IAFA,IAAImrD,EAAQ,EACRsL,EAAU,EACLz0C,EAAI,EAAGA,EAAI9W,EAAIlL,OAAS,EAAGgiB,IAAK,CAGvC,IAAIktC,EAASuH,EACbA,EAAU,EAGV,IAFA,IAAItH,EAAgB,SAARhE,EACRiE,EAAO7tD,KAAK4J,IAAI6W,EAAGjJ,EAAI/Y,OAAS,GAC3Boe,EAAI7c,KAAKsf,IAAI,EAAGmB,EAAI3W,EAAKrL,OAAS,GAAIoe,GAAKgxC,EAAMhxC,IAAK,CAC7D,IAAIrZ,EAAIid,EAAI5D,EAGRxD,GAFoB,EAAhBvP,EAAKkhD,MAAMxnD,KACI,EAAfgU,EAAIwzC,MAAMnuC,IAGdnd,EAAS,SAAJ2Z,EAGTu0C,EAAa,UADbluD,EAAMA,EAAKkuD,EAAS,GAIpBsH,IAFAvH,GAHAA,EAAUA,GAAWt0C,EAAI,SAAa,GAAM,IAGxB3Z,IAAO,IAAO,KAEZ,GACtBiuD,GAAU,QACX,CACDhkD,EAAIqhD,MAAMvqC,GAAKmtC,EACfhE,EAAQ+D,EACRA,EAASuH,CACV,CAOD,OANc,IAAVtL,EACFjgD,EAAIqhD,MAAMvqC,GAAKmpC,EAEfjgD,EAAIlL,SAGCkL,EAAI0iD,QACZ,CAED,SAAS8I,EAAYrrD,EAAM0N,EAAK7N,GAI9B,OAAOsrD,EAASnrD,EAAM0N,EAAK7N,EAC5B,CAqBD,SAASyrD,EAAMpiD,EAAGC,GAChBpI,KAAKmI,EAAIA,EACTnI,KAAKoI,EAAIA,CACV,CA1EIjT,KAAK8zD,OACRvD,EAAc7C,GAmDhB15B,EAAG30B,UAAUg2D,MAAQ,SAAgB79C,EAAK7N,GACxC,IACIgC,EAAMd,KAAKpM,OAAS+Y,EAAI/Y,OAW5B,OAVoB,KAAhBoM,KAAKpM,QAAgC,KAAf+Y,EAAI/Y,OACtB8xD,EAAY1lD,KAAM2M,EAAK7N,GACpBgC,EAAM,GACT+hD,EAAW7iD,KAAM2M,EAAK7N,GACnBgC,EAAM,KACTspD,EAASpqD,KAAM2M,EAAK7N,GAEpBwrD,EAAWtqD,KAAM2M,EAAK7N,EAI/B,EAUDyrD,EAAK/1D,UAAUi2D,QAAU,SAAkBC,GAGzC,IAFA,IAAIpiD,EAAI,IAAInP,MAAMuxD,GACd7oD,EAAIsnB,EAAG30B,UAAU+uD,WAAWmH,GAAK,EAC5B/xD,EAAI,EAAGA,EAAI+xD,EAAG/xD,IACrB2P,EAAE3P,GAAKqH,KAAK2qD,OAAOhyD,EAAGkJ,EAAG6oD,GAG3B,OAAOpiD,CACR,EAGDiiD,EAAK/1D,UAAUm2D,OAAS,SAAiBxiD,EAAGtG,EAAG6oD,GAC7C,GAAU,IAANviD,GAAWA,IAAMuiD,EAAI,EAAG,OAAOviD,EAGnC,IADA,IAAIyiD,EAAK,EACAjyD,EAAI,EAAGA,EAAIkJ,EAAGlJ,IACrBiyD,IAAW,EAAJziD,IAAWtG,EAAIlJ,EAAI,EAC1BwP,IAAM,EAGR,OAAOyiD,CACR,EAIDL,EAAK/1D,UAAUq2D,QAAU,SAAkBC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GACpE,IAAK,IAAI/xD,EAAI,EAAGA,EAAI+xD,EAAG/xD,IACrBsyD,EAAKtyD,GAAKoyD,EAAID,EAAInyD,IAClBuyD,EAAKvyD,GAAKqyD,EAAIF,EAAInyD,GAErB,EAED4xD,EAAK/1D,UAAU22D,UAAY,SAAoBJ,EAAKC,EAAKC,EAAMC,EAAMR,EAAGI,GACtE9qD,KAAK6qD,QAAQC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GAExC,IAAK,IAAI3nD,EAAI,EAAGA,EAAI2nD,EAAG3nD,IAAM,EAM3B,IALA,IAAIlB,EAAIkB,GAAK,EAETqoD,EAAQj2D,KAAKk2D,IAAI,EAAIl2D,KAAKwoB,GAAK9b,GAC/BypD,EAAQn2D,KAAKo2D,IAAI,EAAIp2D,KAAKwoB,GAAK9b,GAE1B0I,EAAI,EAAGA,EAAImgD,EAAGngD,GAAK1I,EAI1B,IAHA,IAAI2pD,EAASJ,EACTK,EAASH,EAEJt5C,EAAI,EAAGA,EAAIjP,EAAGiP,IAAK,CAC1B,IAAI05C,EAAKT,EAAK1gD,EAAIyH,GACd25C,EAAKT,EAAK3gD,EAAIyH,GAEd45C,EAAKX,EAAK1gD,EAAIyH,EAAIjP,GAClB8oD,EAAKX,EAAK3gD,EAAIyH,EAAIjP,GAElB+oD,EAAKN,EAASI,EAAKH,EAASI,EAEhCA,EAAKL,EAASK,EAAKJ,EAASG,EAC5BA,EAAKE,EAELb,EAAK1gD,EAAIyH,GAAK05C,EAAKE,EACnBV,EAAK3gD,EAAIyH,GAAK25C,EAAKE,EAEnBZ,EAAK1gD,EAAIyH,EAAIjP,GAAK2oD,EAAKE,EACvBV,EAAK3gD,EAAIyH,EAAIjP,GAAK4oD,EAAKE,EAGnB75C,IAAMnQ,IACRiqD,EAAKV,EAAQI,EAASF,EAAQG,EAE9BA,EAASL,EAAQK,EAASH,EAAQE,EAClCA,EAASM,EAEZ,CAGN,EAEDvB,EAAK/1D,UAAUu3D,YAAc,SAAsBjuD,EAAG6U,GACpD,IAAI+3C,EAAqB,EAAjBv1D,KAAKsf,IAAI9B,EAAG7U,GAChBkuD,EAAU,EAAJtB,EACN/xD,EAAI,EACR,IAAK+xD,EAAIA,EAAI,EAAI,EAAGA,EAAGA,KAAU,EAC/B/xD,IAGF,OAAO,GAAKA,EAAI,EAAIqzD,CACrB,EAEDzB,EAAK/1D,UAAUy3D,UAAY,SAAoBlB,EAAKC,EAAKN,GACvD,KAAIA,GAAK,GAET,IAAK,IAAI/xD,EAAI,EAAGA,EAAI+xD,EAAI,EAAG/xD,IAAK,CAC9B,IAAI2P,EAAIyiD,EAAIpyD,GAEZoyD,EAAIpyD,GAAKoyD,EAAIL,EAAI/xD,EAAI,GACrBoyD,EAAIL,EAAI/xD,EAAI,GAAK2P,EAEjBA,EAAI0iD,EAAIryD,GAERqyD,EAAIryD,IAAMqyD,EAAIN,EAAI/xD,EAAI,GACtBqyD,EAAIN,EAAI/xD,EAAI,IAAM2P,CACnB,CACF,EAEDiiD,EAAK/1D,UAAU03D,aAAe,SAAuBC,EAAIzB,GAEvD,IADA,IAAI3L,EAAQ,EACHpmD,EAAI,EAAGA,EAAI+xD,EAAI,EAAG/xD,IAAK,CAC9B,IAAI2oD,EAAoC,KAAhCnsD,KAAKonB,MAAM4vC,EAAG,EAAIxzD,EAAI,GAAK+xD,GACjCv1D,KAAKonB,MAAM4vC,EAAG,EAAIxzD,GAAK+xD,GACvB3L,EAEFoN,EAAGxzD,GAAS,SAAJ2oD,EAGNvC,EADEuC,EAAI,SACE,EAEAA,EAAI,SAAY,CAE3B,CAED,OAAO6K,CACR,EAED5B,EAAK/1D,UAAU43D,WAAa,SAAqBD,EAAIrrD,EAAKiqD,EAAKL,GAE7D,IADA,IAAI3L,EAAQ,EACHpmD,EAAI,EAAGA,EAAImI,EAAKnI,IACvBomD,GAAyB,EAARoN,EAAGxzD,GAEpBoyD,EAAI,EAAIpyD,GAAa,KAARomD,EAAgBA,KAAkB,GAC/CgM,EAAI,EAAIpyD,EAAI,GAAa,KAARomD,EAAgBA,KAAkB,GAIrD,IAAKpmD,EAAI,EAAImI,EAAKnI,EAAI+xD,IAAK/xD,EACzBoyD,EAAIpyD,GAAK,EAGXwF,EAAiB,IAAV4gD,GACP5gD,EAA6B,MAAb,KAAR4gD,GACT,EAEDwL,EAAK/1D,UAAU63D,KAAO,SAAe3B,GAEnC,IADA,IAAI4B,EAAK,IAAInzD,MAAMuxD,GACV/xD,EAAI,EAAGA,EAAI+xD,EAAG/xD,IACrB2zD,EAAG3zD,GAAK,EAGV,OAAO2zD,CACR,EAED/B,EAAK/1D,UAAU+3D,KAAO,SAAepkD,EAAGC,EAAGtJ,GACzC,IAAI4rD,EAAI,EAAI1qD,KAAK+rD,YAAY5jD,EAAEvU,OAAQwU,EAAExU,QAErCk3D,EAAM9qD,KAAKyqD,QAAQC,GAEnBn6B,EAAIvwB,KAAKqsD,KAAK3B,GAEdK,EAAM,IAAI5xD,MAAMuxD,GAChB8B,EAAO,IAAIrzD,MAAMuxD,GACjB+B,EAAO,IAAItzD,MAAMuxD,GAEjBgC,EAAO,IAAIvzD,MAAMuxD,GACjBiC,EAAQ,IAAIxzD,MAAMuxD,GAClBkC,EAAQ,IAAIzzD,MAAMuxD,GAElBmC,EAAO/tD,EAAIqhD,MACf0M,EAAKj5D,OAAS82D,EAEd1qD,KAAKosD,WAAWjkD,EAAEg4C,MAAOh4C,EAAEvU,OAAQm3D,EAAKL,GACxC1qD,KAAKosD,WAAWhkD,EAAE+3C,MAAO/3C,EAAExU,OAAQ84D,EAAMhC,GAEzC1qD,KAAKmrD,UAAUJ,EAAKx6B,EAAGi8B,EAAMC,EAAM/B,EAAGI,GACtC9qD,KAAKmrD,UAAUuB,EAAMn8B,EAAGo8B,EAAOC,EAAOlC,EAAGI,GAEzC,IAAK,IAAInyD,EAAI,EAAGA,EAAI+xD,EAAG/xD,IAAK,CAC1B,IAAImzD,EAAKU,EAAK7zD,GAAKg0D,EAAMh0D,GAAK8zD,EAAK9zD,GAAKi0D,EAAMj0D,GAC9C8zD,EAAK9zD,GAAK6zD,EAAK7zD,GAAKi0D,EAAMj0D,GAAK8zD,EAAK9zD,GAAKg0D,EAAMh0D,GAC/C6zD,EAAK7zD,GAAKmzD,CACX,CASD,OAPA9rD,KAAKisD,UAAUO,EAAMC,EAAM/B,GAC3B1qD,KAAKmrD,UAAUqB,EAAMC,EAAMI,EAAMt8B,EAAGm6B,EAAGI,GACvC9qD,KAAKisD,UAAUY,EAAMt8B,EAAGm6B,GACxB1qD,KAAKksD,aAAaW,EAAMnC,GAExB5rD,EAAIohD,SAAW/3C,EAAE+3C,SAAW93C,EAAE83C,SAC9BphD,EAAIlL,OAASuU,EAAEvU,OAASwU,EAAExU,OACnBkL,EAAI0iD,QACZ,EAGDr4B,EAAG30B,UAAUosD,IAAM,SAAcj0C,GAC/B,IAAI7N,EAAM,IAAIqqB,EAAG,MAEjB,OADArqB,EAAIqhD,MAAQ,IAAIhnD,MAAM6G,KAAKpM,OAAS+Y,EAAI/Y,QACjCoM,KAAKwqD,MAAM79C,EAAK7N,EACxB,EAGDqqB,EAAG30B,UAAUs4D,KAAO,SAAengD,GACjC,IAAI7N,EAAM,IAAIqqB,EAAG,MAEjB,OADArqB,EAAIqhD,MAAQ,IAAIhnD,MAAM6G,KAAKpM,OAAS+Y,EAAI/Y,QACjC02D,EAAWtqD,KAAM2M,EAAK7N,EAC9B,EAGDqqB,EAAG30B,UAAUy0D,KAAO,SAAet8C,GACjC,OAAO3M,KAAK8hD,QAAQ0I,MAAM79C,EAAK3M,KAChC,EAEDmpB,EAAG30B,UAAUmtD,MAAQ,SAAgBh1C,GACnC,IAAIogD,EAAWpgD,EAAM,EACjBogD,IAAUpgD,GAAOA,GAErBxO,EAAsB,kBAARwO,GACdxO,EAAOwO,EAAM,UAIb,IADA,IAAIoyC,EAAQ,EACHpmD,EAAI,EAAGA,EAAIqH,KAAKpM,OAAQ+E,IAAK,CACpC,IAAI2oD,GAAqB,EAAhBthD,KAAKmgD,MAAMxnD,IAAUgU,EAC1B9X,GAAU,SAAJysD,IAA0B,SAARvC,GAC5BA,IAAU,GACVA,GAAUuC,EAAI,SAAa,EAE3BvC,GAASlqD,IAAO,GAChBmL,KAAKmgD,MAAMxnD,GAAU,SAAL9D,CACjB,CAOD,OALc,IAAVkqD,IACF/+C,KAAKmgD,MAAMxnD,GAAKomD,EAChB/+C,KAAKpM,UAGAm5D,EAAW/sD,KAAKmkD,OAASnkD,IACjC,EAEDmpB,EAAG30B,UAAUw4D,KAAO,SAAergD,GACjC,OAAO3M,KAAK8hD,QAAQH,MAAMh1C,EAC3B,EAGDwc,EAAG30B,UAAUy4D,IAAM,WACjB,OAAOjtD,KAAK4gD,IAAI5gD,KACjB,EAGDmpB,EAAG30B,UAAU04D,KAAO,WAClB,OAAOltD,KAAKipD,KAAKjpD,KAAK8hD,QACvB,EAGD34B,EAAG30B,UAAU+B,IAAM,SAAcoW,GAC/B,IAAI20C,EA7xCN,SAAqB30C,GAGnB,IAFA,IAAI20C,EAAI,IAAInoD,MAAMwT,EAAI82C,aAEb4B,EAAM,EAAGA,EAAM/D,EAAE1tD,OAAQyxD,IAAO,CACvC,IAAI9D,EAAO8D,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAEjB/D,EAAE+D,GAAQ14C,EAAIwzC,MAAMoB,KAAS+D,EAAQ,CACtC,CAED,OAAOhE,CACR,CAkxCS6L,CAAWxgD,GACnB,GAAiB,IAAb20C,EAAE1tD,OAAc,OAAO,IAAIu1B,EAAG,GAIlC,IADA,IAAIhnB,EAAMnC,KACDrH,EAAI,EAAGA,EAAI2oD,EAAE1tD,QACP,IAAT0tD,EAAE3oD,GADsBA,IAAKwJ,EAAMA,EAAI8qD,OAI7C,KAAMt0D,EAAI2oD,EAAE1tD,OACV,IAAK,IAAI8e,EAAIvQ,EAAI8qD,MAAOt0D,EAAI2oD,EAAE1tD,OAAQ+E,IAAK+Z,EAAIA,EAAEu6C,MAClC,IAAT3L,EAAE3oD,KAENwJ,EAAMA,EAAIy+C,IAAIluC,IAIlB,OAAOvQ,CACR,EAGDgnB,EAAG30B,UAAU44D,OAAS,SAAiBhxD,GACrC+B,EAAuB,kBAAT/B,GAAqBA,GAAQ,GAC3C,IAGIzD,EAHA6V,EAAIpS,EAAO,GACX2G,GAAK3G,EAAOoS,GAAK,GACjB6+C,EAAa,WAAe,GAAK7+C,GAAQ,GAAKA,EAGlD,GAAU,IAANA,EAAS,CACX,IAAIuwC,EAAQ,EAEZ,IAAKpmD,EAAI,EAAGA,EAAIqH,KAAKpM,OAAQ+E,IAAK,CAChC,IAAI20D,EAAWttD,KAAKmgD,MAAMxnD,GAAK00D,EAC3B3+C,GAAsB,EAAhB1O,KAAKmgD,MAAMxnD,IAAU20D,GAAa9+C,EAC5CxO,KAAKmgD,MAAMxnD,GAAK+V,EAAIqwC,EACpBA,EAAQuO,IAAc,GAAK9+C,CAC5B,CAEGuwC,IACF/+C,KAAKmgD,MAAMxnD,GAAKomD,EAChB/+C,KAAKpM,SAER,CAED,GAAU,IAANmP,EAAS,CACX,IAAKpK,EAAIqH,KAAKpM,OAAS,EAAG+E,GAAK,EAAGA,IAChCqH,KAAKmgD,MAAMxnD,EAAIoK,GAAK/C,KAAKmgD,MAAMxnD,GAGjC,IAAKA,EAAI,EAAGA,EAAIoK,EAAGpK,IACjBqH,KAAKmgD,MAAMxnD,GAAK,EAGlBqH,KAAKpM,QAAUmP,CAChB,CAED,OAAO/C,KAAKwhD,QACb,EAEDr4B,EAAG30B,UAAU+4D,MAAQ,SAAgBnxD,GAGnC,OADA+B,EAAyB,IAAlB6B,KAAKkgD,UACLlgD,KAAKotD,OAAOhxD,EACpB,EAKD+sB,EAAG30B,UAAUg5D,OAAS,SAAiBpxD,EAAMqxD,EAAMC,GAEjD,IAAI9rD,EADJzD,EAAuB,kBAAT/B,GAAqBA,GAAQ,GAGzCwF,EADE6rD,GACGA,EAAQA,EAAO,IAAO,GAEvB,EAGN,IAAIj/C,EAAIpS,EAAO,GACX2G,EAAI5N,KAAK4J,KAAK3C,EAAOoS,GAAK,GAAIxO,KAAKpM,QACnC0X,EAAO,SAAc,WAAckD,GAAMA,EACzCm/C,EAAcD,EAMlB,GAJA9rD,GAAKmB,EACLnB,EAAIzM,KAAKsf,IAAI,EAAG7S,GAGZ+rD,EAAa,CACf,IAAK,IAAIh1D,EAAI,EAAGA,EAAIoK,EAAGpK,IACrBg1D,EAAYxN,MAAMxnD,GAAKqH,KAAKmgD,MAAMxnD,GAEpCg1D,EAAY/5D,OAASmP,CACtB,CAED,GAAU,IAANA,QAEG,GAAI/C,KAAKpM,OAASmP,EAEvB,IADA/C,KAAKpM,QAAUmP,EACVpK,EAAI,EAAGA,EAAIqH,KAAKpM,OAAQ+E,IAC3BqH,KAAKmgD,MAAMxnD,GAAKqH,KAAKmgD,MAAMxnD,EAAIoK,QAGjC/C,KAAKmgD,MAAM,GAAK,EAChBngD,KAAKpM,OAAS,EAGhB,IAAImrD,EAAQ,EACZ,IAAKpmD,EAAIqH,KAAKpM,OAAS,EAAG+E,GAAK,IAAgB,IAAVomD,GAAepmD,GAAKiJ,GAAIjJ,IAAK,CAChE,IAAIoD,EAAuB,EAAhBiE,KAAKmgD,MAAMxnD,GACtBqH,KAAKmgD,MAAMxnD,GAAMomD,GAAU,GAAKvwC,EAAOzS,IAASyS,EAChDuwC,EAAQhjD,EAAOuP,CAChB,CAYD,OATIqiD,GAAyB,IAAV5O,IACjB4O,EAAYxN,MAAMwN,EAAY/5D,UAAYmrD,GAGxB,IAAhB/+C,KAAKpM,SACPoM,KAAKmgD,MAAM,GAAK,EAChBngD,KAAKpM,OAAS,GAGToM,KAAKwhD,QACb,EAEDr4B,EAAG30B,UAAUo5D,MAAQ,SAAgBxxD,EAAMqxD,EAAMC,GAG/C,OADAvvD,EAAyB,IAAlB6B,KAAKkgD,UACLlgD,KAAKwtD,OAAOpxD,EAAMqxD,EAAMC,EAChC,EAGDvkC,EAAG30B,UAAUq5D,KAAO,SAAezxD,GACjC,OAAO4D,KAAK8hD,QAAQyL,MAAMnxD,EAC3B,EAED+sB,EAAG30B,UAAUs5D,MAAQ,SAAgB1xD,GACnC,OAAO4D,KAAK8hD,QAAQsL,OAAOhxD,EAC5B,EAGD+sB,EAAG30B,UAAUu5D,KAAO,SAAe3xD,GACjC,OAAO4D,KAAK8hD,QAAQ8L,MAAMxxD,EAC3B,EAED+sB,EAAG30B,UAAUw5D,MAAQ,SAAgB5xD,GACnC,OAAO4D,KAAK8hD,QAAQ0L,OAAOpxD,EAC5B,EAGD+sB,EAAG30B,UAAUyvD,MAAQ,SAAgBoB,GACnClnD,EAAsB,kBAARknD,GAAoBA,GAAO,GACzC,IAAI72C,EAAI62C,EAAM,GACVtiD,GAAKsiD,EAAM72C,GAAK,GAChBkE,EAAI,GAAKlE,EAGb,QAAIxO,KAAKpM,QAAUmP,OAGX/C,KAAKmgD,MAAMp9C,GAEL2P,EACf,EAGDyW,EAAG30B,UAAUy5D,OAAS,SAAiB7xD,GACrC+B,EAAuB,kBAAT/B,GAAqBA,GAAQ,GAC3C,IAAIoS,EAAIpS,EAAO,GACX2G,GAAK3G,EAAOoS,GAAK,GAIrB,GAFArQ,EAAyB,IAAlB6B,KAAKkgD,SAAgB,2CAExBlgD,KAAKpM,QAAUmP,EACjB,OAAO/C,KAQT,GALU,IAANwO,GACFzL,IAEF/C,KAAKpM,OAASuB,KAAK4J,IAAIgE,EAAG/C,KAAKpM,QAErB,IAAN4a,EAAS,CACX,IAAIlD,EAAO,SAAc,WAAckD,GAAMA,EAC7CxO,KAAKmgD,MAAMngD,KAAKpM,OAAS,IAAM0X,CAChC,CAED,OAAOtL,KAAKwhD,QACb,EAGDr4B,EAAG30B,UAAU05D,MAAQ,SAAgB9xD,GACnC,OAAO4D,KAAK8hD,QAAQmM,OAAO7xD,EAC5B,EAGD+sB,EAAG30B,UAAUuvD,MAAQ,SAAgBp3C,GAGnC,OAFAxO,EAAsB,kBAARwO,GACdxO,EAAOwO,EAAM,UACTA,EAAM,EAAU3M,KAAKmuD,OAAOxhD,GAGV,IAAlB3M,KAAKkgD,SACa,IAAhBlgD,KAAKpM,SAAiC,EAAhBoM,KAAKmgD,MAAM,KAAWxzC,GAC9C3M,KAAKmgD,MAAM,GAAKxzC,GAAuB,EAAhB3M,KAAKmgD,MAAM,IAClCngD,KAAKkgD,SAAW,EACTlgD,OAGTA,KAAKkgD,SAAW,EAChBlgD,KAAKmuD,MAAMxhD,GACX3M,KAAKkgD,SAAW,EACTlgD,MAIFA,KAAK4hD,OAAOj1C,EACpB,EAEDwc,EAAG30B,UAAUotD,OAAS,SAAiBj1C,GACrC3M,KAAKmgD,MAAM,IAAMxzC,EAGjB,IAAK,IAAIhU,EAAI,EAAGA,EAAIqH,KAAKpM,QAAUoM,KAAKmgD,MAAMxnD,IAAM,SAAWA,IAC7DqH,KAAKmgD,MAAMxnD,IAAM,SACbA,IAAMqH,KAAKpM,OAAS,EACtBoM,KAAKmgD,MAAMxnD,EAAI,GAAK,EAEpBqH,KAAKmgD,MAAMxnD,EAAI,KAKnB,OAFAqH,KAAKpM,OAASuB,KAAKsf,IAAIzU,KAAKpM,OAAQ+E,EAAI,GAEjCqH,IACR,EAGDmpB,EAAG30B,UAAU25D,MAAQ,SAAgBxhD,GAGnC,GAFAxO,EAAsB,kBAARwO,GACdxO,EAAOwO,EAAM,UACTA,EAAM,EAAG,OAAO3M,KAAK+jD,OAAOp3C,GAEhC,GAAsB,IAAlB3M,KAAKkgD,SAIP,OAHAlgD,KAAKkgD,SAAW,EAChBlgD,KAAK+jD,MAAMp3C,GACX3M,KAAKkgD,SAAW,EACTlgD,KAKT,GAFAA,KAAKmgD,MAAM,IAAMxzC,EAEG,IAAhB3M,KAAKpM,QAAgBoM,KAAKmgD,MAAM,GAAK,EACvCngD,KAAKmgD,MAAM,IAAMngD,KAAKmgD,MAAM,GAC5BngD,KAAKkgD,SAAW,OAGhB,IAAK,IAAIvnD,EAAI,EAAGA,EAAIqH,KAAKpM,QAAUoM,KAAKmgD,MAAMxnD,GAAK,EAAGA,IACpDqH,KAAKmgD,MAAMxnD,IAAM,SACjBqH,KAAKmgD,MAAMxnD,EAAI,IAAM,EAIzB,OAAOqH,KAAKwhD,QACb,EAEDr4B,EAAG30B,UAAU45D,KAAO,SAAezhD,GACjC,OAAO3M,KAAK8hD,QAAQiC,MAAMp3C,EAC3B,EAEDwc,EAAG30B,UAAU65D,KAAO,SAAe1hD,GACjC,OAAO3M,KAAK8hD,QAAQqM,MAAMxhD,EAC3B,EAEDwc,EAAG30B,UAAU85D,KAAO,WAGlB,OAFAtuD,KAAKkgD,SAAW,EAETlgD,IACR,EAEDmpB,EAAG30B,UAAUoX,IAAM,WACjB,OAAO5L,KAAK8hD,QAAQwM,MACrB,EAEDnlC,EAAG30B,UAAU+5D,aAAe,SAAuB5hD,EAAKi0C,EAAK5mD,GAC3D,IACIrB,EAIA2oD,EALAxgD,EAAM6L,EAAI/Y,OAASoG,EAGvBgG,KAAK+hD,QAAQjhD,GAGb,IAAIi+C,EAAQ,EACZ,IAAKpmD,EAAI,EAAGA,EAAIgU,EAAI/Y,OAAQ+E,IAAK,CAC/B2oD,GAA6B,EAAxBthD,KAAKmgD,MAAMxnD,EAAIqB,IAAc+kD,EAClC,IAAI+B,GAAwB,EAAfn0C,EAAIwzC,MAAMxnD,IAAUioD,EAEjC7B,IADAuC,GAAa,SAARR,IACS,KAAQA,EAAQ,SAAa,GAC3C9gD,KAAKmgD,MAAMxnD,EAAIqB,GAAa,SAAJsnD,CACzB,CACD,KAAO3oD,EAAIqH,KAAKpM,OAASoG,EAAOrB,IAE9BomD,GADAuC,GAA6B,EAAxBthD,KAAKmgD,MAAMxnD,EAAIqB,IAAc+kD,IACrB,GACb/+C,KAAKmgD,MAAMxnD,EAAIqB,GAAa,SAAJsnD,EAG1B,GAAc,IAAVvC,EAAa,OAAO/+C,KAAKwhD,SAK7B,IAFArjD,GAAkB,IAAX4gD,GACPA,EAAQ,EACHpmD,EAAI,EAAGA,EAAIqH,KAAKpM,OAAQ+E,IAE3BomD,GADAuC,IAAsB,EAAhBthD,KAAKmgD,MAAMxnD,IAAUomD,IACd,GACb/+C,KAAKmgD,MAAMxnD,GAAS,SAAJ2oD,EAIlB,OAFAthD,KAAKkgD,SAAW,EAETlgD,KAAKwhD,QACb,EAEDr4B,EAAG30B,UAAUg6D,SAAW,SAAmB7hD,EAAK8hD,GAC9C,IAAIz0D,GAAQgG,KAAKpM,OAAS+Y,EAAI/Y,QAE1B2T,EAAIvH,KAAK8hD,QACT1uD,EAAIuZ,EAGJ+hD,EAA8B,EAAxBt7D,EAAE+sD,MAAM/sD,EAAEQ,OAAS,GAGf,KADdoG,EAAQ,GADMgG,KAAKujD,WAAWmL,MAG5Bt7D,EAAIA,EAAE06D,MAAM9zD,GACZuN,EAAE6lD,OAAOpzD,GACT00D,EAA8B,EAAxBt7D,EAAE+sD,MAAM/sD,EAAEQ,OAAS,IAI3B,IACI8e,EADAC,EAAIpL,EAAE3T,OAASR,EAAEQ,OAGrB,GAAa,QAAT66D,EAAgB,EAClB/7C,EAAI,IAAIyW,EAAG,OACTv1B,OAAS+e,EAAI,EACfD,EAAEytC,MAAQ,IAAIhnD,MAAMuZ,EAAE9e,QACtB,IAAK,IAAI+E,EAAI,EAAGA,EAAI+Z,EAAE9e,OAAQ+E,IAC5B+Z,EAAEytC,MAAMxnD,GAAK,CAEhB,CAED,IAAIg2D,EAAOpnD,EAAEu6C,QAAQyM,aAAan7D,EAAG,EAAGuf,GAClB,IAAlBg8C,EAAKzO,WACP34C,EAAIonD,EACAj8C,IACFA,EAAEytC,MAAMxtC,GAAK,IAIjB,IAAK,IAAIX,EAAIW,EAAI,EAAGX,GAAK,EAAGA,IAAK,CAC/B,IAAI48C,EAAmC,UAAL,EAAxBrnD,EAAE44C,MAAM/sD,EAAEQ,OAASoe,KACE,EAA5BzK,EAAE44C,MAAM/sD,EAAEQ,OAASoe,EAAI,IAO1B,IAHA48C,EAAKz5D,KAAK4J,IAAK6vD,EAAKF,EAAO,EAAG,UAE9BnnD,EAAEgnD,aAAan7D,EAAGw7D,EAAI58C,GACA,IAAfzK,EAAE24C,UACP0O,IACArnD,EAAE24C,SAAW,EACb34C,EAAEgnD,aAAan7D,EAAG,EAAG4e,GAChBzK,EAAEi7C,WACLj7C,EAAE24C,UAAY,GAGdxtC,IACFA,EAAEytC,MAAMnuC,GAAK48C,EAEhB,CAWD,OAVIl8C,GACFA,EAAE8uC,SAEJj6C,EAAEi6C,SAGW,QAATiN,GAA4B,IAAVz0D,GACpBuN,EAAEimD,OAAOxzD,GAGJ,CACL60D,IAAKn8C,GAAK,KACV1J,IAAKzB,EAER,EAMD4hB,EAAG30B,UAAUs6D,OAAS,SAAiBniD,EAAK8hD,EAAMM,GAGhD,OAFA5wD,GAAQwO,EAAI61C,UAERxiD,KAAKwiD,SACA,CACLqM,IAAK,IAAI1lC,EAAG,GACZngB,IAAK,IAAImgB,EAAG,IAKM,IAAlBnpB,KAAKkgD,UAAmC,IAAjBvzC,EAAIuzC,UAC7B/9C,EAAMnC,KAAKqkD,MAAMyK,OAAOniD,EAAK8hD,GAEhB,QAATA,IACFI,EAAM1sD,EAAI0sD,IAAIxK,OAGH,QAAToK,IACFzlD,EAAM7G,EAAI6G,IAAIq7C,MACV0K,GAA6B,IAAjB/lD,EAAIk3C,UAClBl3C,EAAIu8C,KAAK54C,IAIN,CACLkiD,IAAKA,EACL7lD,IAAKA,IAIa,IAAlBhJ,KAAKkgD,UAAmC,IAAjBvzC,EAAIuzC,UAC7B/9C,EAAMnC,KAAK8uD,OAAOniD,EAAI03C,MAAOoK,GAEhB,QAATA,IACFI,EAAM1sD,EAAI0sD,IAAIxK,OAGT,CACLwK,IAAKA,EACL7lD,IAAK7G,EAAI6G,MAI0B,KAAlChJ,KAAKkgD,SAAWvzC,EAAIuzC,WACvB/9C,EAAMnC,KAAKqkD,MAAMyK,OAAOniD,EAAI03C,MAAOoK,GAEtB,QAATA,IACFzlD,EAAM7G,EAAI6G,IAAIq7C,MACV0K,GAA6B,IAAjB/lD,EAAIk3C,UAClBl3C,EAAIw8C,KAAK74C,IAIN,CACLkiD,IAAK1sD,EAAI0sD,IACT7lD,IAAKA,IAOL2D,EAAI/Y,OAASoM,KAAKpM,QAAUoM,KAAK+gD,IAAIp0C,GAAO,EACvC,CACLkiD,IAAK,IAAI1lC,EAAG,GACZngB,IAAKhJ,MAKU,IAAf2M,EAAI/Y,OACO,QAAT66D,EACK,CACLI,IAAK7uD,KAAKgvD,KAAKriD,EAAIwzC,MAAM,IACzBn3C,IAAK,MAII,QAATylD,EACK,CACLI,IAAK,KACL7lD,IAAK,IAAImgB,EAAGnpB,KAAKyiD,MAAM91C,EAAIwzC,MAAM,MAI9B,CACL0O,IAAK7uD,KAAKgvD,KAAKriD,EAAIwzC,MAAM,IACzBn3C,IAAK,IAAImgB,EAAGnpB,KAAKyiD,MAAM91C,EAAIwzC,MAAM,MAI9BngD,KAAKwuD,SAAS7hD,EAAK8hD,GAlF1B,IAAII,EAAK7lD,EAAK7G,CAmFf,EAGDgnB,EAAG30B,UAAUq6D,IAAM,SAAcliD,GAC/B,OAAO3M,KAAK8uD,OAAOniD,EAAK,OAAO,GAAOkiD,GACvC,EAGD1lC,EAAG30B,UAAUwU,IAAM,SAAc2D,GAC/B,OAAO3M,KAAK8uD,OAAOniD,EAAK,OAAO,GAAO3D,GACvC,EAEDmgB,EAAG30B,UAAUy6D,KAAO,SAAetiD,GACjC,OAAO3M,KAAK8uD,OAAOniD,EAAK,OAAO,GAAM3D,GACtC,EAGDmgB,EAAG30B,UAAU06D,SAAW,SAAmBviD,GACzC,IAAIwiD,EAAKnvD,KAAK8uD,OAAOniD,GAGrB,GAAIwiD,EAAGnmD,IAAIw5C,SAAU,OAAO2M,EAAGN,IAE/B,IAAI7lD,EAA0B,IAApBmmD,EAAGN,IAAI3O,SAAiBiP,EAAGnmD,IAAIw8C,KAAK74C,GAAOwiD,EAAGnmD,IAEpDomD,EAAOziD,EAAIqhD,MAAM,GACjBr+C,EAAKhD,EAAI0iD,MAAM,GACftO,EAAM/3C,EAAI+3C,IAAIqO,GAGlB,OAAIrO,EAAM,GAAa,IAAPpxC,GAAoB,IAARoxC,EAAmBoO,EAAGN,IAGvB,IAApBM,EAAGN,IAAI3O,SAAiBiP,EAAGN,IAAIV,MAAM,GAAKgB,EAAGN,IAAI9K,MAAM,EAC/D,EAED56B,EAAG30B,UAAUiuD,MAAQ,SAAgB91C,GACnC,IAAIogD,EAAWpgD,EAAM,EACjBogD,IAAUpgD,GAAOA,GAErBxO,EAAOwO,GAAO,UAId,IAHA,IAAIpC,GAAK,GAAK,IAAMoC,EAEhBtT,EAAM,EACDV,EAAIqH,KAAKpM,OAAS,EAAG+E,GAAK,EAAGA,IACpCU,GAAOkR,EAAIlR,GAAuB,EAAhB2G,KAAKmgD,MAAMxnD,KAAWgU,EAG1C,OAAOogD,GAAY1zD,EAAMA,CAC1B,EAGD8vB,EAAG30B,UAAU86D,KAAO,SAAe3iD,GACjC,OAAO3M,KAAKyiD,MAAM91C,EACnB,EAGDwc,EAAG30B,UAAUkuD,MAAQ,SAAgB/1C,GACnC,IAAIogD,EAAWpgD,EAAM,EACjBogD,IAAUpgD,GAAOA,GAErBxO,EAAOwO,GAAO,UAGd,IADA,IAAIoyC,EAAQ,EACHpmD,EAAIqH,KAAKpM,OAAS,EAAG+E,GAAK,EAAGA,IAAK,CACzC,IAAI2oD,GAAqB,EAAhBthD,KAAKmgD,MAAMxnD,IAAkB,SAARomD,EAC9B/+C,KAAKmgD,MAAMxnD,GAAM2oD,EAAI30C,EAAO,EAC5BoyC,EAAQuC,EAAI30C,CACb,CAGD,OADA3M,KAAKwhD,SACEuL,EAAW/sD,KAAKmkD,OAASnkD,IACjC,EAEDmpB,EAAG30B,UAAUw6D,KAAO,SAAeriD,GACjC,OAAO3M,KAAK8hD,QAAQY,MAAM/1C,EAC3B,EAEDwc,EAAG30B,UAAU+6D,KAAO,SAAehlD,GACjCpM,EAAsB,IAAfoM,EAAE21C,UACT/hD,GAAQoM,EAAEi4C,UAEV,IAAIr6C,EAAInI,KACJoI,EAAImC,EAAEu3C,QAGR35C,EADiB,IAAfA,EAAE+3C,SACA/3C,EAAE8mD,KAAK1kD,GAEPpC,EAAE25C,QAaR,IATA,IAAI14C,EAAI,IAAI+f,EAAG,GACX9f,EAAI,IAAI8f,EAAG,GAGX7f,EAAI,IAAI6f,EAAG,GACX5f,EAAI,IAAI4f,EAAG,GAEXqmC,EAAI,EAEDrnD,EAAEsnD,UAAYrnD,EAAEqnD,UACrBtnD,EAAEqlD,OAAO,GACTplD,EAAEolD,OAAO,KACPgC,EAMJ,IAHA,IAAIE,EAAKtnD,EAAE05C,QACP6N,EAAKxnD,EAAE25C,SAEH35C,EAAEq6C,UAAU,CAClB,IAAK,IAAI7pD,EAAI,EAAGi3D,EAAK,EAAyB,KAArBznD,EAAEg4C,MAAM,GAAKyP,IAAaj3D,EAAI,KAAMA,EAAGi3D,IAAO,GACvE,GAAIj3D,EAAI,EAEN,IADAwP,EAAEqlD,OAAO70D,GACFA,KAAM,IACPyQ,EAAEymD,SAAWxmD,EAAEwmD,WACjBzmD,EAAEm8C,KAAKmK,GACPrmD,EAAEm8C,KAAKmK,IAGTvmD,EAAEokD,OAAO,GACTnkD,EAAEmkD,OAAO,GAIb,IAAK,IAAIx7C,EAAI,EAAG89C,EAAK,EAAyB,KAArB1nD,EAAE+3C,MAAM,GAAK2P,IAAa99C,EAAI,KAAMA,EAAG89C,IAAO,GACvE,GAAI99C,EAAI,EAEN,IADA5J,EAAEolD,OAAOx7C,GACFA,KAAM,IACP1I,EAAEumD,SAAWtmD,EAAEsmD,WACjBvmD,EAAEi8C,KAAKmK,GACPnmD,EAAEi8C,KAAKmK,IAGTrmD,EAAEkkD,OAAO,GACTjkD,EAAEikD,OAAO,GAITrlD,EAAE44C,IAAI34C,IAAM,GACdD,EAAEq9C,KAAKp9C,GACPgB,EAAEo8C,KAAKl8C,GACPD,EAAEm8C,KAAKj8C,KAEPnB,EAAEo9C,KAAKr9C,GACPmB,EAAEk8C,KAAKp8C,GACPG,EAAEi8C,KAAKn8C,GAEV,CAED,MAAO,CACL9B,EAAG+B,EACHlW,EAAGmW,EACHqJ,IAAKxK,EAAEglD,OAAOoC,GAEjB,EAKDrmC,EAAG30B,UAAUu7D,OAAS,SAAiBxlD,GACrCpM,EAAsB,IAAfoM,EAAE21C,UACT/hD,GAAQoM,EAAEi4C,UAEV,IAAIj7C,EAAIvH,KACJ5M,EAAImX,EAAEu3C,QAGRv6C,EADiB,IAAfA,EAAE24C,SACA34C,EAAE0nD,KAAK1kD,GAEPhD,EAAEu6C,QAQR,IALA,IAuCI3/C,EAvCA6tD,EAAK,IAAI7mC,EAAG,GACZ/J,EAAK,IAAI+J,EAAG,GAEZ9D,EAAQjyB,EAAE0uD,QAEPv6C,EAAE0oD,KAAK,GAAK,GAAK78D,EAAE68D,KAAK,GAAK,GAAG,CACrC,IAAK,IAAIt3D,EAAI,EAAGi3D,EAAK,EAAyB,KAArBroD,EAAE44C,MAAM,GAAKyP,IAAaj3D,EAAI,KAAMA,EAAGi3D,IAAO,GACvE,GAAIj3D,EAAI,EAEN,IADA4O,EAAEimD,OAAO70D,GACFA,KAAM,GACPq3D,EAAGH,SACLG,EAAGzK,KAAKlgC,GAGV2qC,EAAGxC,OAAO,GAId,IAAK,IAAIx7C,EAAI,EAAG89C,EAAK,EAAyB,KAArB18D,EAAE+sD,MAAM,GAAK2P,IAAa99C,EAAI,KAAMA,EAAG89C,IAAO,GACvE,GAAI99C,EAAI,EAEN,IADA5e,EAAEo6D,OAAOx7C,GACFA,KAAM,GACPoN,EAAGywC,SACLzwC,EAAGmmC,KAAKlgC,GAGVjG,EAAGouC,OAAO,GAIVjmD,EAAEw5C,IAAI3tD,IAAM,GACdmU,EAAEi+C,KAAKpyD,GACP48D,EAAGxK,KAAKpmC,KAERhsB,EAAEoyD,KAAKj+C,GACP6X,EAAGomC,KAAKwK,GAEX,CAaD,OATE7tD,EADgB,IAAdoF,EAAE0oD,KAAK,GACHD,EAEA5wC,GAGA6wC,KAAK,GAAK,GAChB9tD,EAAIojD,KAAKh7C,GAGJpI,CACR,EAEDgnB,EAAG30B,UAAUoe,IAAM,SAAcjG,GAC/B,GAAI3M,KAAKwiD,SAAU,OAAO71C,EAAIf,MAC9B,GAAIe,EAAI61C,SAAU,OAAOxiD,KAAK4L,MAE9B,IAAIrE,EAAIvH,KAAK8hD,QACT1uD,EAAIuZ,EAAIm1C,QACZv6C,EAAE24C,SAAW,EACb9sD,EAAE8sD,SAAW,EAGb,IAAK,IAAIlmD,EAAQ,EAAGuN,EAAEkoD,UAAYr8D,EAAEq8D,SAAUz1D,IAC5CuN,EAAEimD,OAAO,GACTp6D,EAAEo6D,OAAO,GAGX,OAAG,CACD,KAAOjmD,EAAEkoD,UACPloD,EAAEimD,OAAO,GAEX,KAAOp6D,EAAEq8D,UACPr8D,EAAEo6D,OAAO,GAGX,IAAIh/C,EAAIjH,EAAEw5C,IAAI3tD,GACd,GAAIob,EAAI,EAAG,CAET,IAAIlG,EAAIf,EACRA,EAAInU,EACJA,EAAIkV,CACL,MAAM,GAAU,IAANkG,GAAyB,IAAdpb,EAAE68D,KAAK,GAC3B,MAGF1oD,EAAEi+C,KAAKpyD,EACR,CAED,OAAOA,EAAEg6D,OAAOpzD,EACjB,EAGDmvB,EAAG30B,UAAU07D,KAAO,SAAevjD,GACjC,OAAO3M,KAAKuvD,KAAK5iD,GAAKpF,EAAE0nD,KAAKtiD,EAC9B,EAEDwc,EAAG30B,UAAUi7D,OAAS,WACpB,OAA+B,KAAP,EAAhBzvD,KAAKmgD,MAAM,GACpB,EAEDh3B,EAAG30B,UAAUq7D,MAAQ,WACnB,OAA+B,KAAP,EAAhB7vD,KAAKmgD,MAAM,GACpB,EAGDh3B,EAAG30B,UAAU66D,MAAQ,SAAgB1iD,GACnC,OAAO3M,KAAKmgD,MAAM,GAAKxzC,CACxB,EAGDwc,EAAG30B,UAAU27D,MAAQ,SAAgB9K,GACnClnD,EAAsB,kBAARknD,GACd,IAAI72C,EAAI62C,EAAM,GACVtiD,GAAKsiD,EAAM72C,GAAK,GAChBkE,EAAI,GAAKlE,EAGb,GAAIxO,KAAKpM,QAAUmP,EAGjB,OAFA/C,KAAK+hD,QAAQh/C,EAAI,GACjB/C,KAAKmgD,MAAMp9C,IAAM2P,EACV1S,KAKT,IADA,IAAI++C,EAAQrsC,EACH/Z,EAAIoK,EAAa,IAAVg8C,GAAepmD,EAAIqH,KAAKpM,OAAQ+E,IAAK,CACnD,IAAI2oD,EAAoB,EAAhBthD,KAAKmgD,MAAMxnD,GAEnBomD,GADAuC,GAAKvC,KACS,GACduC,GAAK,SACLthD,KAAKmgD,MAAMxnD,GAAK2oD,CACjB,CAKD,OAJc,IAAVvC,IACF/+C,KAAKmgD,MAAMxnD,GAAKomD,EAChB/+C,KAAKpM,UAEAoM,IACR,EAEDmpB,EAAG30B,UAAUguD,OAAS,WACpB,OAAuB,IAAhBxiD,KAAKpM,QAAkC,IAAlBoM,KAAKmgD,MAAM,EACxC,EAEDh3B,EAAG30B,UAAUy7D,KAAO,SAAetjD,GACjC,IAOIxK,EAPA+9C,EAAWvzC,EAAM,EAErB,GAAsB,IAAlB3M,KAAKkgD,WAAmBA,EAAU,OAAQ,EAC9C,GAAsB,IAAlBlgD,KAAKkgD,UAAkBA,EAAU,OAAO,EAK5C,GAHAlgD,KAAKwhD,SAGDxhD,KAAKpM,OAAS,EAChBuO,EAAM,MACD,CACD+9C,IACFvzC,GAAOA,GAGTxO,EAAOwO,GAAO,SAAW,qBAEzB,IAAI20C,EAAoB,EAAhBthD,KAAKmgD,MAAM,GACnBh+C,EAAMm/C,IAAM30C,EAAM,EAAI20C,EAAI30C,GAAO,EAAI,CACtC,CACD,OAAsB,IAAlB3M,KAAKkgD,SAA8B,GAAN/9C,EAC1BA,CACR,EAMDgnB,EAAG30B,UAAUusD,IAAM,SAAcp0C,GAC/B,GAAsB,IAAlB3M,KAAKkgD,UAAmC,IAAjBvzC,EAAIuzC,SAAgB,OAAQ,EACvD,GAAsB,IAAlBlgD,KAAKkgD,UAAmC,IAAjBvzC,EAAIuzC,SAAgB,OAAO,EAEtD,IAAI/9C,EAAMnC,KAAKowD,KAAKzjD,GACpB,OAAsB,IAAlB3M,KAAKkgD,SAA8B,GAAN/9C,EAC1BA,CACR,EAGDgnB,EAAG30B,UAAU47D,KAAO,SAAezjD,GAEjC,GAAI3M,KAAKpM,OAAS+Y,EAAI/Y,OAAQ,OAAO,EACrC,GAAIoM,KAAKpM,OAAS+Y,EAAI/Y,OAAQ,OAAQ,EAGtC,IADA,IAAIuO,EAAM,EACDxJ,EAAIqH,KAAKpM,OAAS,EAAG+E,GAAK,EAAGA,IAAK,CACzC,IAAI4O,EAAoB,EAAhBvH,KAAKmgD,MAAMxnD,GACfvF,EAAmB,EAAfuZ,EAAIwzC,MAAMxnD,GAElB,GAAI4O,IAAMnU,EAAV,CACImU,EAAInU,EACN+O,GAAO,EACEoF,EAAInU,IACb+O,EAAM,GAER,KANqB,CAOtB,CACD,OAAOA,CACR,EAEDgnB,EAAG30B,UAAU67D,IAAM,SAAc1jD,GAC/B,OAA0B,IAAnB3M,KAAKiwD,KAAKtjD,EAClB,EAEDwc,EAAG30B,UAAU87D,GAAK,SAAa3jD,GAC7B,OAAyB,IAAlB3M,KAAK+gD,IAAIp0C,EACjB,EAEDwc,EAAG30B,UAAU+7D,KAAO,SAAe5jD,GACjC,OAAO3M,KAAKiwD,KAAKtjD,IAAQ,CAC1B,EAEDwc,EAAG30B,UAAUg8D,IAAM,SAAc7jD,GAC/B,OAAO3M,KAAK+gD,IAAIp0C,IAAQ,CACzB,EAEDwc,EAAG30B,UAAUi8D,IAAM,SAAc9jD,GAC/B,OAA2B,IAApB3M,KAAKiwD,KAAKtjD,EAClB,EAEDwc,EAAG30B,UAAUk8D,GAAK,SAAa/jD,GAC7B,OAA0B,IAAnB3M,KAAK+gD,IAAIp0C,EACjB,EAEDwc,EAAG30B,UAAUm8D,KAAO,SAAehkD,GACjC,OAAO3M,KAAKiwD,KAAKtjD,IAAQ,CAC1B,EAEDwc,EAAG30B,UAAUo8D,IAAM,SAAcjkD,GAC/B,OAAO3M,KAAK+gD,IAAIp0C,IAAQ,CACzB,EAEDwc,EAAG30B,UAAUq8D,IAAM,SAAclkD,GAC/B,OAA0B,IAAnB3M,KAAKiwD,KAAKtjD,EAClB,EAEDwc,EAAG30B,UAAU40B,GAAK,SAAazc,GAC7B,OAAyB,IAAlB3M,KAAK+gD,IAAIp0C,EACjB,EAMDwc,EAAGi3B,IAAM,SAAczzC,GACrB,OAAO,IAAImkD,EAAInkD,EAChB,EAEDwc,EAAG30B,UAAUu8D,MAAQ,SAAgBv3C,GAGnC,OAFArb,GAAQ6B,KAAKogD,IAAK,yCAClBjiD,EAAyB,IAAlB6B,KAAKkgD,SAAgB,iCACrB1mC,EAAIw3C,UAAUhxD,MAAMixD,UAAUz3C,EACtC,EAED2P,EAAG30B,UAAU08D,QAAU,WAErB,OADA/yD,EAAO6B,KAAKogD,IAAK,wDACVpgD,KAAKogD,IAAI+Q,YAAYnxD,KAC7B,EAEDmpB,EAAG30B,UAAUy8D,UAAY,SAAoBz3C,GAE3C,OADAxZ,KAAKogD,IAAM5mC,EACJxZ,IACR,EAEDmpB,EAAG30B,UAAU48D,SAAW,SAAmB53C,GAEzC,OADArb,GAAQ6B,KAAKogD,IAAK,yCACXpgD,KAAKixD,UAAUz3C,EACvB,EAED2P,EAAG30B,UAAU68D,OAAS,SAAiB1kD,GAErC,OADAxO,EAAO6B,KAAKogD,IAAK,sCACVpgD,KAAKogD,IAAIz8C,IAAI3D,KAAM2M,EAC3B,EAEDwc,EAAG30B,UAAU88D,QAAU,SAAkB3kD,GAEvC,OADAxO,EAAO6B,KAAKogD,IAAK,uCACVpgD,KAAKogD,IAAImF,KAAKvlD,KAAM2M,EAC5B,EAEDwc,EAAG30B,UAAU+8D,OAAS,SAAiB5kD,GAErC,OADAxO,EAAO6B,KAAKogD,IAAK,sCACVpgD,KAAKogD,IAAIqF,IAAIzlD,KAAM2M,EAC3B,EAEDwc,EAAG30B,UAAUg9D,QAAU,SAAkB7kD,GAEvC,OADAxO,EAAO6B,KAAKogD,IAAK,uCACVpgD,KAAKogD,IAAIoF,KAAKxlD,KAAM2M,EAC5B,EAEDwc,EAAG30B,UAAUi9D,OAAS,SAAiB9kD,GAErC,OADAxO,EAAO6B,KAAKogD,IAAK,sCACVpgD,KAAKogD,IAAIsR,IAAI1xD,KAAM2M,EAC3B,EAEDwc,EAAG30B,UAAUm9D,OAAS,SAAiBhlD,GAGrC,OAFAxO,EAAO6B,KAAKogD,IAAK,sCACjBpgD,KAAKogD,IAAIwR,SAAS5xD,KAAM2M,GACjB3M,KAAKogD,IAAIQ,IAAI5gD,KAAM2M,EAC3B,EAEDwc,EAAG30B,UAAUq9D,QAAU,SAAkBllD,GAGvC,OAFAxO,EAAO6B,KAAKogD,IAAK,sCACjBpgD,KAAKogD,IAAIwR,SAAS5xD,KAAM2M,GACjB3M,KAAKogD,IAAI6I,KAAKjpD,KAAM2M,EAC5B,EAEDwc,EAAG30B,UAAUs9D,OAAS,WAGpB,OAFA3zD,EAAO6B,KAAKogD,IAAK,sCACjBpgD,KAAKogD,IAAI2R,SAAS/xD,MACXA,KAAKogD,IAAI6M,IAAIjtD,KACrB,EAEDmpB,EAAG30B,UAAUw9D,QAAU,WAGrB,OAFA7zD,EAAO6B,KAAKogD,IAAK,uCACjBpgD,KAAKogD,IAAI2R,SAAS/xD,MACXA,KAAKogD,IAAI8M,KAAKltD,KACtB,EAGDmpB,EAAG30B,UAAUy9D,QAAU,WAGrB,OAFA9zD,EAAO6B,KAAKogD,IAAK,uCACjBpgD,KAAKogD,IAAI2R,SAAS/xD,MACXA,KAAKogD,IAAI8R,KAAKlyD,KACtB,EAEDmpB,EAAG30B,UAAU29D,QAAU,WAGrB,OAFAh0D,EAAO6B,KAAKogD,IAAK,uCACjBpgD,KAAKogD,IAAI2R,SAAS/xD,MACXA,KAAKogD,IAAI8P,KAAKlwD,KACtB,EAGDmpB,EAAG30B,UAAU49D,OAAS,WAGpB,OAFAj0D,EAAO6B,KAAKogD,IAAK,sCACjBpgD,KAAKogD,IAAI2R,SAAS/xD,MACXA,KAAKogD,IAAIiE,IAAIrkD,KACrB,EAEDmpB,EAAG30B,UAAU69D,OAAS,SAAiB1lD,GAGrC,OAFAxO,EAAO6B,KAAKogD,MAAQzzC,EAAIyzC,IAAK,qBAC7BpgD,KAAKogD,IAAI2R,SAAS/xD,MACXA,KAAKogD,IAAI7pD,IAAIyJ,KAAM2M,EAC3B,EAGD,IAAI2lD,EAAS,CACXC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,MAIV,SAASC,EAAQ/9D,EAAM2V,GAErBvK,KAAKpL,KAAOA,EACZoL,KAAKuK,EAAI,IAAI4e,EAAG5e,EAAG,IACnBvK,KAAKlC,EAAIkC,KAAKuK,EAAEk5C,YAChBzjD,KAAK4V,EAAI,IAAIuT,EAAG,GAAGikC,OAAOptD,KAAKlC,GAAG0nD,KAAKxlD,KAAKuK,GAE5CvK,KAAKQ,IAAMR,KAAK4yD,MACjB,CAgDD,SAASC,IACPF,EAAOx3D,KACL6E,KACA,OACA,0EACH,CA8DD,SAAS8yD,IACPH,EAAOx3D,KACL6E,KACA,OACA,iEACH,CAGD,SAAS+yD,IACPJ,EAAOx3D,KACL6E,KACA,OACA,wDACH,CAGD,SAASgzD,IAEPL,EAAOx3D,KACL6E,KACA,QACA,sEACH,CA6CD,SAAS8wD,EAAKn+C,GACZ,GAAiB,kBAANA,EAAgB,CACzB,IAAIsgD,EAAQ9pC,EAAG+pC,OAAOvgD,GACtB3S,KAAK2S,EAAIsgD,EAAM1oD,EACfvK,KAAKizD,MAAQA,CACd,MACC90D,EAAOwU,EAAE09C,IAAI,GAAI,kCACjBrwD,KAAK2S,EAAIA,EACT3S,KAAKizD,MAAQ,IAEhB,CAkOD,SAASE,EAAMxgD,GACbm+C,EAAI31D,KAAK6E,KAAM2S,GAEf3S,KAAKhG,MAAQgG,KAAK2S,EAAE8wC,YAChBzjD,KAAKhG,MAAQ,KAAO,IACtBgG,KAAKhG,OAAS,GAAMgG,KAAKhG,MAAQ,IAGnCgG,KAAKwO,EAAI,IAAI2a,EAAG,GAAGikC,OAAOptD,KAAKhG,OAC/BgG,KAAK2P,GAAK3P,KAAKozD,KAAKpzD,KAAKwO,EAAEy+C,OAC3BjtD,KAAKwjB,KAAOxjB,KAAKwO,EAAEuhD,OAAO/vD,KAAK2S,GAE/B3S,KAAKqzD,KAAOrzD,KAAKwjB,KAAKo9B,IAAI5gD,KAAKwO,GAAG2/C,MAAM,GAAGU,IAAI7uD,KAAK2S,GACpD3S,KAAKqzD,KAAOrzD,KAAKqzD,KAAKpE,KAAKjvD,KAAKwO,GAChCxO,KAAKqzD,KAAOrzD,KAAKwO,EAAEi3C,IAAIzlD,KAAKqzD,KAC7B,CA/aDV,EAAOn+D,UAAUo+D,KAAO,WACtB,IAAIpyD,EAAM,IAAI2oB,EAAG,MAEjB,OADA3oB,EAAI2/C,MAAQ,IAAIhnD,MAAMhE,KAAKwmC,KAAK37B,KAAKlC,EAAI,KAClC0C,CACR,EAEDmyD,EAAOn+D,UAAU8+D,QAAU,SAAkB3mD,GAG3C,IACI4mD,EADA/kD,EAAI7B,EAGR,GACE3M,KAAKlJ,MAAM0X,EAAGxO,KAAKQ,KAGnB+yD,GADA/kD,GADAA,EAAIxO,KAAKwzD,MAAMhlD,IACT+2C,KAAKvlD,KAAKQ,MACPijD,kBACF8P,EAAOvzD,KAAKlC,GAErB,IAAIijD,EAAMwS,EAAOvzD,KAAKlC,GAAK,EAAI0Q,EAAE4hD,KAAKpwD,KAAKuK,GAgB3C,OAfY,IAARw2C,GACFvyC,EAAE2xC,MAAM,GAAK,EACb3xC,EAAE5a,OAAS,GACFmtD,EAAM,EACfvyC,EAAEg3C,KAAKxlD,KAAKuK,QAEIjR,IAAZkV,EAAEilD,MAEJjlD,EAAEilD,QAGFjlD,EAAEgzC,SAIChzC,CACR,EAEDmkD,EAAOn+D,UAAUsC,MAAQ,SAAgB+hB,EAAO/Z,GAC9C+Z,EAAM20C,OAAOxtD,KAAKlC,EAAG,EAAGgB,EACzB,EAED6zD,EAAOn+D,UAAUg/D,MAAQ,SAAgB7mD,GACvC,OAAOA,EAAIs8C,KAAKjpD,KAAK4V,EACtB,EAQD+pC,EAASkT,EAAMF,GAEfE,EAAKr+D,UAAUsC,MAAQ,SAAgB+hB,EAAOha,GAK5C,IAHA,IAAIyM,EAAO,QAEPooD,EAASv+D,KAAK4J,IAAI8Z,EAAMjlB,OAAQ,GAC3B+E,EAAI,EAAGA,EAAI+6D,EAAQ/6D,IAC1BkG,EAAOshD,MAAMxnD,GAAKkgB,EAAMsnC,MAAMxnD,GAIhC,GAFAkG,EAAOjL,OAAS8/D,EAEZ76C,EAAMjlB,QAAU,EAGlB,OAFAilB,EAAMsnC,MAAM,GAAK,OACjBtnC,EAAMjlB,OAAS,GAKjB,IAAI+/D,EAAO96C,EAAMsnC,MAAM,GAGvB,IAFAthD,EAAOshD,MAAMthD,EAAOjL,UAAY+/D,EAAOroD,EAElC3S,EAAI,GAAIA,EAAIkgB,EAAMjlB,OAAQ+E,IAAK,CAClC,IAAImgB,EAAwB,EAAjBD,EAAMsnC,MAAMxnD,GACvBkgB,EAAMsnC,MAAMxnD,EAAI,KAAQmgB,EAAOxN,IAAS,EAAMqoD,IAAS,GACvDA,EAAO76C,CACR,CACD66C,KAAU,GACV96C,EAAMsnC,MAAMxnD,EAAI,IAAMg7D,EACT,IAATA,GAAc96C,EAAMjlB,OAAS,GAC/BilB,EAAMjlB,QAAU,GAEhBilB,EAAMjlB,QAAU,CAEnB,EAEDi/D,EAAKr+D,UAAUg/D,MAAQ,SAAgB7mD,GAErCA,EAAIwzC,MAAMxzC,EAAI/Y,QAAU,EACxB+Y,EAAIwzC,MAAMxzC,EAAI/Y,OAAS,GAAK,EAC5B+Y,EAAI/Y,QAAU,EAId,IADA,IAAIiB,EAAK,EACA8D,EAAI,EAAGA,EAAIgU,EAAI/Y,OAAQ+E,IAAK,CACnC,IAAI2oD,EAAmB,EAAf30C,EAAIwzC,MAAMxnD,GAClB9D,GAAU,IAAJysD,EACN30C,EAAIwzC,MAAMxnD,GAAU,SAAL9D,EACfA,EAAS,GAAJysD,GAAazsD,EAAK,SAAa,EACrC,CASD,OANkC,IAA9B8X,EAAIwzC,MAAMxzC,EAAI/Y,OAAS,KACzB+Y,EAAI/Y,SAC8B,IAA9B+Y,EAAIwzC,MAAMxzC,EAAI/Y,OAAS,IACzB+Y,EAAI/Y,UAGD+Y,CACR,EAQDgzC,EAASmT,EAAMH,GAQfhT,EAASoT,EAAMJ,GASfhT,EAASqT,EAAQL,GAEjBK,EAAOx+D,UAAUg/D,MAAQ,SAAgB7mD,GAGvC,IADA,IAAIoyC,EAAQ,EACHpmD,EAAI,EAAGA,EAAIgU,EAAI/Y,OAAQ+E,IAAK,CACnC,IAAI+qD,EAA0B,IAAL,EAAf/2C,EAAIwzC,MAAMxnD,IAAiBomD,EACjClqD,EAAU,SAAL6uD,EACTA,KAAQ,GAER/2C,EAAIwzC,MAAMxnD,GAAK9D,EACfkqD,EAAQ2E,CACT,CAID,OAHc,IAAV3E,IACFpyC,EAAIwzC,MAAMxzC,EAAI/Y,UAAYmrD,GAErBpyC,CACR,EAGDwc,EAAG+pC,OAAS,SAAgBt+D,GAE1B,GAAI09D,EAAO19D,GAAO,OAAO09D,EAAO19D,GAEhC,IAAIq+D,EACJ,GAAa,SAATr+D,EACFq+D,EAAQ,IAAIJ,OACP,GAAa,SAATj+D,EACTq+D,EAAQ,IAAIH,OACP,GAAa,SAATl+D,EACTq+D,EAAQ,IAAIF,MACP,IAAa,WAATn+D,EAGT,MAAM,IAAIG,MAAM,iBAAmBH,GAFnCq+D,EAAQ,IAAID,CAGb,CAGD,OAFAV,EAAO19D,GAAQq+D,EAERA,CACR,EAiBDnC,EAAIt8D,UAAUu9D,SAAW,SAAmBxqD,GAC1CpJ,EAAsB,IAAfoJ,EAAE24C,SAAgB,iCACzB/hD,EAAOoJ,EAAE64C,IAAK,kCACf,EAED0Q,EAAIt8D,UAAUo9D,SAAW,SAAmBrqD,EAAGnU,GAC7C+K,EAAqC,KAA7BoJ,EAAE24C,SAAW9sD,EAAE8sD,UAAiB,iCACxC/hD,EAAOoJ,EAAE64C,KAAO74C,EAAE64C,MAAQhtD,EAAEgtD,IAC1B,kCACH,EAED0Q,EAAIt8D,UAAU4+D,KAAO,SAAe7rD,GAClC,OAAIvH,KAAKizD,MAAcjzD,KAAKizD,MAAMK,QAAQ/rD,GAAG0pD,UAAUjxD,OAEvD6gD,EAAKt5C,EAAGA,EAAE0nD,KAAKjvD,KAAK2S,GAAGs+C,UAAUjxD,OAC1BuH,EACR,EAEDupD,EAAIt8D,UAAU6vD,IAAM,SAAc98C,GAChC,OAAIA,EAAEi7C,SACGj7C,EAAEu6C,QAGJ9hD,KAAK2S,EAAE8yC,IAAIl+C,GAAG0pD,UAAUjxD,KAChC,EAED8wD,EAAIt8D,UAAUmP,IAAM,SAAc4D,EAAGnU,GACnC4M,KAAK4xD,SAASrqD,EAAGnU,GAEjB,IAAI+O,EAAMoF,EAAE5D,IAAIvQ,GAIhB,OAHI+O,EAAI4+C,IAAI/gD,KAAK2S,IAAM,GACrBxQ,EAAIqjD,KAAKxlD,KAAK2S,GAETxQ,EAAI8uD,UAAUjxD,KACtB,EAED8wD,EAAIt8D,UAAU+wD,KAAO,SAAeh+C,EAAGnU,GACrC4M,KAAK4xD,SAASrqD,EAAGnU,GAEjB,IAAI+O,EAAMoF,EAAEg+C,KAAKnyD,GAIjB,OAHI+O,EAAI4+C,IAAI/gD,KAAK2S,IAAM,GACrBxQ,EAAIqjD,KAAKxlD,KAAK2S,GAETxQ,CACR,EAED2uD,EAAIt8D,UAAUixD,IAAM,SAAcl+C,EAAGnU,GACnC4M,KAAK4xD,SAASrqD,EAAGnU,GAEjB,IAAI+O,EAAMoF,EAAEk+C,IAAIryD,GAIhB,OAHI+O,EAAI8tD,KAAK,GAAK,GAChB9tD,EAAIojD,KAAKvlD,KAAK2S,GAETxQ,EAAI8uD,UAAUjxD,KACtB,EAED8wD,EAAIt8D,UAAUgxD,KAAO,SAAej+C,EAAGnU,GACrC4M,KAAK4xD,SAASrqD,EAAGnU,GAEjB,IAAI+O,EAAMoF,EAAEi+C,KAAKpyD,GAIjB,OAHI+O,EAAI8tD,KAAK,GAAK,GAChB9tD,EAAIojD,KAAKvlD,KAAK2S,GAETxQ,CACR,EAED2uD,EAAIt8D,UAAUk9D,IAAM,SAAcnqD,EAAGoF,GAEnC,OADA3M,KAAK+xD,SAASxqD,GACPvH,KAAKozD,KAAK7rD,EAAEumD,MAAMnhD,GAC1B,EAEDmkD,EAAIt8D,UAAUy0D,KAAO,SAAe1hD,EAAGnU,GAErC,OADA4M,KAAK4xD,SAASrqD,EAAGnU,GACV4M,KAAKozD,KAAK7rD,EAAE0hD,KAAK71D,GACzB,EAED09D,EAAIt8D,UAAUosD,IAAM,SAAcr5C,EAAGnU,GAEnC,OADA4M,KAAK4xD,SAASrqD,EAAGnU,GACV4M,KAAKozD,KAAK7rD,EAAEq5C,IAAIxtD,GACxB,EAED09D,EAAIt8D,UAAU04D,KAAO,SAAe3lD,GAClC,OAAOvH,KAAKipD,KAAK1hD,EAAGA,EAAEu6C,QACvB,EAEDgP,EAAIt8D,UAAUy4D,IAAM,SAAc1lD,GAChC,OAAOvH,KAAK4gD,IAAIr5C,EAAGA,EACpB,EAEDupD,EAAIt8D,UAAU09D,KAAO,SAAe3qD,GAClC,GAAIA,EAAEi7C,SAAU,OAAOj7C,EAAEu6C,QAEzB,IAAI8R,EAAO5zD,KAAK2S,EAAE08C,MAAM,GAIxB,GAHAlxD,EAAOy1D,EAAO,IAAM,GAGP,IAATA,EAAY,CACd,IAAIr9D,EAAMyJ,KAAK2S,EAAEhP,IAAI,IAAIwlB,EAAG,IAAIqkC,OAAO,GACvC,OAAOxtD,KAAKzJ,IAAIgR,EAAGhR,EACpB,CAOD,IAFA,IAAImc,EAAI1S,KAAK2S,EAAE07C,KAAK,GAChBtrD,EAAI,GACA2P,EAAE8vC,UAA2B,IAAf9vC,EAAE28C,MAAM,IAC5BtsD,IACA2P,EAAE86C,OAAO,GAEXrvD,GAAQuU,EAAE8vC,UAEV,IAAIr0C,EAAM,IAAIgb,EAAG,GAAG4nC,MAAM/wD,MACtB6zD,EAAO1lD,EAAIikD,SAIX0B,EAAO9zD,KAAK2S,EAAE07C,KAAK,GAAGb,OAAO,GAC7BnlD,EAAIrI,KAAK2S,EAAE8wC,YAGf,IAFAp7C,EAAI,IAAI8gB,EAAG,EAAI9gB,EAAIA,GAAG0oD,MAAM/wD,MAEW,IAAhCA,KAAKzJ,IAAI8R,EAAGyrD,GAAM/S,IAAI8S,IAC3BxrD,EAAEipD,QAAQuC,GAOZ,IAJA,IAAInlD,EAAI1O,KAAKzJ,IAAI8R,EAAGqK,GAChBlE,EAAIxO,KAAKzJ,IAAIgR,EAAGmL,EAAE07C,KAAK,GAAGZ,OAAO,IACjCllD,EAAItI,KAAKzJ,IAAIgR,EAAGmL,GAChBC,EAAI5P,EACc,IAAfuF,EAAEy4C,IAAI5yC,IAAY,CAEvB,IADA,IAAI3N,EAAM8H,EACD3P,EAAI,EAAoB,IAAjB6H,EAAIugD,IAAI5yC,GAAYxV,IAClC6H,EAAMA,EAAIsxD,SAEZ3zD,EAAOxF,EAAIga,GACX,IAAIvf,EAAI4M,KAAKzJ,IAAImY,EAAG,IAAIya,EAAG,GAAGikC,OAAOz6C,EAAIha,EAAI,IAE7C6V,EAAIA,EAAEmjD,OAAOv+D,GACbsb,EAAItb,EAAE0+D,SACNxpD,EAAIA,EAAEqpD,OAAOjjD,GACbiE,EAAIha,CACL,CAED,OAAO6V,CACR,EAEDsiD,EAAIt8D,UAAU07D,KAAO,SAAe3oD,GAClC,IAAIwsD,EAAMxsD,EAAEwoD,OAAO/vD,KAAK2S,GACxB,OAAqB,IAAjBohD,EAAI7T,UACN6T,EAAI7T,SAAW,EACRlgD,KAAKozD,KAAKW,GAAK3B,UAEfpyD,KAAKozD,KAAKW,EAEpB,EAEDjD,EAAIt8D,UAAU+B,IAAM,SAAcgR,EAAGoF,GACnC,GAAIA,EAAI61C,SAAU,OAAO,IAAIr5B,EAAG,GAAG4nC,MAAM/wD,MACzC,GAAoB,IAAhB2M,EAAIsjD,KAAK,GAAU,OAAO1oD,EAAEu6C,QAEhC,IACIkS,EAAM,IAAI76D,MAAM,IACpB66D,EAAI,GAAK,IAAI7qC,EAAG,GAAG4nC,MAAM/wD,MACzBg0D,EAAI,GAAKzsD,EACT,IAAK,IAAI5O,EAAI,EAAGA,EAAIq7D,EAAIpgE,OAAQ+E,IAC9Bq7D,EAAIr7D,GAAKqH,KAAK4gD,IAAIoT,EAAIr7D,EAAI,GAAI4O,GAGhC,IAAIpF,EAAM6xD,EAAI,GACVxtB,EAAU,EACVytB,EAAa,EACbp3D,EAAQ8P,EAAI82C,YAAc,GAK9B,IAJc,IAAV5mD,IACFA,EAAQ,IAGLlE,EAAIgU,EAAI/Y,OAAS,EAAG+E,GAAK,EAAGA,IAAK,CAEpC,IADA,IAAIoD,EAAO4Q,EAAIwzC,MAAMxnD,GACZqZ,EAAInV,EAAQ,EAAGmV,GAAK,EAAGA,IAAK,CACnC,IAAIqzC,EAAOtpD,GAAQiW,EAAK,EACpB7P,IAAQ6xD,EAAI,KACd7xD,EAAMnC,KAAKitD,IAAI9qD,IAGL,IAARkjD,GAAyB,IAAZ7e,GAKjBA,IAAY,EACZA,GAAW6e,GA9BE,MA+Bb4O,GACwC,IAANt7D,GAAiB,IAANqZ,KAE7C7P,EAAMnC,KAAK4gD,IAAIz+C,EAAK6xD,EAAIxtB,IACxBytB,EAAa,EACbztB,EAAU,IAXRytB,EAAa,CAYhB,CACDp3D,EAAQ,EACT,CAED,OAAOsF,CACR,EAED2uD,EAAIt8D,UAAUw8D,UAAY,SAAoBrkD,GAC5C,IAAI6B,EAAI7B,EAAIsiD,KAAKjvD,KAAK2S,GAEtB,OAAOnE,IAAM7B,EAAM6B,EAAEszC,QAAUtzC,CAChC,EAEDsiD,EAAIt8D,UAAU28D,YAAc,SAAsBxkD,GAChD,IAAIxK,EAAMwK,EAAIm1C,QAEd,OADA3/C,EAAIi+C,IAAM,KACHj+C,CACR,EAMDgnB,EAAG+qC,KAAO,SAAevnD,GACvB,OAAO,IAAIwmD,EAAKxmD,EACjB,EAkBDgzC,EAASwT,EAAMrC,GAEfqC,EAAK3+D,UAAUw8D,UAAY,SAAoBrkD,GAC7C,OAAO3M,KAAKozD,KAAKzmD,EAAImhD,MAAM9tD,KAAKhG,OACjC,EAEDm5D,EAAK3+D,UAAU28D,YAAc,SAAsBxkD,GACjD,IAAI6B,EAAIxO,KAAKozD,KAAKzmD,EAAIi0C,IAAI5gD,KAAKwjB,OAE/B,OADAhV,EAAE4xC,IAAM,KACD5xC,CACR,EAED2kD,EAAK3+D,UAAUy0D,KAAO,SAAe1hD,EAAGnU,GACtC,GAAImU,EAAEi7C,UAAYpvD,EAAEovD,SAGlB,OAFAj7C,EAAE44C,MAAM,GAAK,EACb54C,EAAE3T,OAAS,EACJ2T,EAGT,IAAIe,EAAIf,EAAE0hD,KAAK71D,GACXsb,EAAIpG,EAAE4lD,MAAMluD,KAAKhG,OAAO4mD,IAAI5gD,KAAKqzD,MAAMpF,OAAOjuD,KAAKhG,OAAO4mD,IAAI5gD,KAAK2S,GACnE9B,EAAIvI,EAAEk9C,KAAK92C,GAAG8+C,OAAOxtD,KAAKhG,OAC1BmI,EAAM0O,EAQV,OANIA,EAAEkwC,IAAI/gD,KAAK2S,IAAM,EACnBxQ,EAAM0O,EAAE20C,KAAKxlD,KAAK2S,GACT9B,EAAEo/C,KAAK,GAAK,IACrB9tD,EAAM0O,EAAE00C,KAAKvlD,KAAK2S,IAGbxQ,EAAI8uD,UAAUjxD,KACtB,EAEDmzD,EAAK3+D,UAAUosD,IAAM,SAAcr5C,EAAGnU,GACpC,GAAImU,EAAEi7C,UAAYpvD,EAAEovD,SAAU,OAAO,IAAIr5B,EAAG,GAAG8nC,UAAUjxD,MAEzD,IAAIsI,EAAIf,EAAEq5C,IAAIxtD,GACVsb,EAAIpG,EAAE4lD,MAAMluD,KAAKhG,OAAO4mD,IAAI5gD,KAAKqzD,MAAMpF,OAAOjuD,KAAKhG,OAAO4mD,IAAI5gD,KAAK2S,GACnE9B,EAAIvI,EAAEk9C,KAAK92C,GAAG8+C,OAAOxtD,KAAKhG,OAC1BmI,EAAM0O,EAOV,OANIA,EAAEkwC,IAAI/gD,KAAK2S,IAAM,EACnBxQ,EAAM0O,EAAE20C,KAAKxlD,KAAK2S,GACT9B,EAAEo/C,KAAK,GAAK,IACrB9tD,EAAM0O,EAAE00C,KAAKvlD,KAAK2S,IAGbxQ,EAAI8uD,UAAUjxD,KACtB,EAEDmzD,EAAK3+D,UAAU07D,KAAO,SAAe3oD,GAGnC,OADUvH,KAAKozD,KAAK7rD,EAAEwoD,OAAO/vD,KAAK2S,GAAGiuC,IAAI5gD,KAAK2P,KACnCshD,UAAUjxD,KACtB,CAz9GH,aA09G4CA,6BC19G5C,IAAIm0D,EAAQjW,EAAQ,OAGpBC,EAAOvgD,QAAUu2D,EAFF,kGCCf,IAAM4V,EAAO7rB,EAAAA,OAAAA,GACP8rB,EAAkB9rB,EAAQ,OAc1B+rB,EAAgB,SAAhBA,EAAyBC,EAAY5wD,GACzC,KAAKtZ,gBAAgBiqE,GACnB,OAAO,IAAIA,EAAcC,EAAY5wD,GAGlCA,IACHA,EAAU,CAAC,GAGbtZ,KAAKsZ,QAAU,CACb6wD,QAAoC,qBAApB7wD,EAAQ6wD,QAA0B7wD,EAAQ6wD,QAAU,KACpEC,SAAsC,qBAArB9wD,EAAQ8wD,SAA2B9wD,EAAQ8wD,SAAW,KACvEC,UAAwC,qBAAtB/wD,EAAQ+wD,UAA4B/wD,EAAQ+wD,UAAY,WAAa,OAAON,GAAS,EACvGxpC,QAAoC,qBAApBjnB,EAAQinB,QAA0BjnB,EAAQinB,QAAU,EACpE+pC,mBAA0D,mBAA/BhxD,EAAQgxD,oBAAmChxD,EAAQgxD,oBAGhFtqE,KAAKkqE,WAAaA,CACnB,EAED/rB,EAAOvgD,QAAUqsE,EAWjBA,EAAcz1E,UAAU64C,QAAU,SAASE,EAAQ7S,EAAQuF,EAAIqN,GAC7D,IA6CIjtC,EA7CEpB,EAAOe,KACTqtC,EAAU,KAGRk9B,EAAUpxE,MAAMC,QAAQm0C,IAA6B,oBAAX7S,EAEhD,GAA6B,IAAzB16B,KAAKsZ,QAAQinB,SAAiBgqC,EAChC,MAAM,IAAIj3E,UAAU,0CAMtB,GAAGi3E,IAFYA,GAAWh9B,GAA4B,kBAAXA,GAAyC,oBAAX7S,EAGvE4S,EAAW5S,EACX2S,EAAUE,MACL,CACY,oBAAPtN,IACRqN,EAAWrN,EAEXA,OAAK3mC,GAGP,IAAMkxE,EAAkC,oBAAbl9B,EAE3B,IACED,EAAU28B,EAAgBz8B,EAAQ7S,EAAQuF,EAAI,CAC5CoqC,UAAWrqE,KAAKsZ,QAAQ+wD,UACxB9pC,QAASvgC,KAAKsZ,QAAQinB,QACtB+pC,mBAAoBtqE,KAAKsZ,QAAQgxD,oBAOpC,CALC,MAAMpgD,GACN,GAAGsgD,EACD,OAAOl9B,EAASpjB,GAElB,MAAMA,CACP,CAGD,IAAIsgD,EACF,OAAOn9B,CAGV,CAGD,IACEhtC,EAAUqY,KAAKC,UAAU00B,EAASrtC,KAAKsZ,QAAQ8wD,SAGhD,CAFC,MAAMlgD,GACN,OAAOojB,EAASpjB,EACjB,CAOD,OALAlqB,KAAKkqE,WAAW7pE,GAAS,SAAS6pB,EAAKsW,GACrCvhC,EAAKwrE,eAAevgD,EAAKsW,EAAU8M,EACpC,IAGMD,CACR,EASD48B,EAAcz1E,UAAUi2E,eAAiB,SAASvgD,EAAKwgD,EAAcp9B,GACnE,GAAGpjB,EACDojB,EAASpjB,OADX,CAKA,IAAIwgD,EAGF,OAAOp9B,IAGT,IAAI9M,EACJ,IACEA,EAAW9nB,KAAKiyD,MAAMD,EAAc1qE,KAAKsZ,QAAQ6wD,QAGlD,CAFC,MAAMjgD,GACN,OAAOojB,EAASpjB,EACjB,CAED,GAAuB,IAApBojB,EAAS15C,OAAc,CAIxB,GAAGuF,MAAMC,QAAQonC,GAAW,CAG1B,IAAMoqC,EAAU,SAASzoE,GACvB,MAA4B,qBAAdA,EAAIqY,KACnB,EAMD,OAAO8yB,EAAS,KAAM9M,EAAS/S,OAAOm9C,GAAUpqC,EAAS/S,QAJtC,SAAUtrB,GAC3B,OAAQyoE,EAAQzoE,EACjB,IAIF,CAGC,OAAOmrC,EAAS,KAAM9M,EAAShmB,MAAOgmB,EAAS9uB,OAIlD,CAED47B,EAAS,KAAM9M,EAzCd,CA0CF,sCChKD,IAAMupC,EAAO7rB,EAAAA,OAAAA,GA4DbC,EAAOvgD,QA7CiB,SAAS2vC,EAAQ7S,EAAQuF,EAAI3mB,GACnD,GAAqB,kBAAXi0B,EACR,MAAM,IAAIj6C,UAAUi6C,EAAS,qBAM/B,IAAMhN,EAAqC,kBAH3CjnB,EAAUA,GAAW,CAAC,GAGSinB,QAAuBjnB,EAAQinB,QAAU,EACxE,GAAgB,IAAZA,GAA6B,IAAZA,EACnB,MAAM,IAAIjtC,UAAUitC,EAAU,mBAGhC,IAAM8M,EAAU,CACdE,OAAQA,GAOV,GAJe,IAAZhN,IACD8M,EAAQrN,QAAU,OAGjBtF,EAAQ,CAET,GAAqB,kBAAXA,IAAwBvhC,MAAMC,QAAQshC,GAC9C,MAAM,IAAIpnC,UAAUonC,EAAS,wCAE/B2S,EAAQ3S,OAASA,CAClB,CAGD,GAAkB,qBAARuF,EAAqB,CAC7B,IAAMoqC,EAAyC,oBAAtB/wD,EAAQ+wD,UAA2B/wD,EAAQ+wD,UAAY,WAAa,OAAON,GAAS,EAC7G18B,EAAQpN,GAAKoqC,EAAUh9B,EAAS/zB,EACjC,MAAsB,IAAZinB,GAAwB,OAAPN,EAEtB3mB,EAAQgxD,qBACVj9B,EAAQpN,GAAK,MAGfoN,EAAQpN,GAAKA,EAGf,OAAOoN,CACR,0CC1DGw9B,EAAyB3sB,EAAQ,OAKrCtgD,EAAQ,OAAS,EAEjB,IAAIktE,EAAgBD,EAAuB3sB,EAAQ,QAE/C6sB,EAAmBF,EAAuB3sB,EAAQ,QAElD8sB,EAAaH,EAAuB3sB,EAAQ,OAE5C+sB,EAA8BJ,EAAuB3sB,EAAQ,QAE7DgtB,EAAmBL,EAAuB3sB,EAAQ,QAElDitB,EAAaN,EAAuB3sB,EAAQ,QAIhD,SAASktB,EAAaC,GAAW,IAAIC,EAErC,WAAuC,GAAuB,qBAAZ1E,UAA4BA,QAAQ2E,UAAW,OAAO,EAAO,GAAI3E,QAAQ2E,UAAUC,KAAM,OAAO,EAAO,GAAqB,oBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhFlvE,QAAQ/H,UAAU8gE,QAAQn6D,KAAKyrE,QAAQ2E,UAAUhvE,QAAS,IAAI,WAAc,MAAW,CAAmC,CAA3B,MAAO/C,GAAK,OAAO,CAAQ,CAAE,CAFxQkyE,GAA6B,OAAO,WAAkC,IAAuDh6D,EAAnDi6D,GAAQ,EAAIT,EAAgB,SAAaG,GAAkB,GAAIC,EAA2B,CAAE,IAAIM,GAAY,EAAIV,EAAgB,SAAalrE,MAAMzL,YAAamd,EAASk1D,QAAQ2E,UAAUI,EAAO9V,UAAW+V,EAAa,MAAQl6D,EAASi6D,EAAMjT,MAAM14D,KAAM61D,WAAc,OAAO,EAAIoV,EAA2B,SAAajrE,KAAM0R,EAAU,CAAG,CAI5d,IAAIm6D,EAAsB,SAAUC,IAClC,EAAId,EAAU,SAAaa,EAAQC,GAEnC,IAAIC,EAASX,EAAaS,GAE1B,SAASA,IACP,IAAI/hD,EAAU+rC,UAAUjiE,OAAS,QAAsB0F,IAAjBu8D,UAAU,GAAmBA,UAAU,GAAK,sBAE9E0J,EAAO1J,UAAUjiE,OAAS,QAAsB0F,IAAjBu8D,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAC5EmW,EAAmBzM,EAAKhxB,YACxBA,OAAmC,IAArBy9B,GAAqCA,EACnDC,EAAiB1M,EAAK2M,UACtBA,OAA+B,IAAnBD,GAAmCA,EAC/CE,EAAwB5M,EAAK6M,mBAC7BA,OAA+C,IAA1BD,EAAmC,IAAOA,EAC/DE,EAAsB9M,EAAK/wB,eAC3BA,OAAyC,IAAxB69B,EAAiC,EAAIA,EAEtDC,EAAsBzW,UAAUjiE,OAAS,EAAIiiE,UAAU,QAAKv8D,EAEhE,OADA,EAAIyxE,EAAgB,SAAa/qE,KAAM6rE,GAChCE,EAAO5wE,KAAK6E,KAAMmrE,EAAU,QAAarhD,EAAS,CACvDykB,YAAaA,EACb29B,UAAWA,EACXE,mBAAoBA,EACpB59B,eAAgBA,GACf89B,EACJ,CAED,OAAO,EAAIxB,EAAa,SAAae,EACtC,CA7ByB,CANZhB,EAAuB3sB,EAAQ,OAmCpC,SAETtgD,EAAQ,EAASiuE,qCCnDjB,IAAIhB,EAAyB3sB,EAAQ,OAErC7pD,OAAOo2B,eAAe7sB,EAAS,aAAc,CAC3C3B,OAAO,IAET2B,EAAiB,aAAI,EAErB,IAAI2uE,EAAe1B,EAAuB3sB,EAAQ,QAE9CsuB,EAAqB3B,EAAuB3sB,EAAQ,QAEpDuuB,EAAW5B,EAAuB3sB,EAAQ,QAE1C6sB,EAAmBF,EAAuB3sB,EAAQ,QAElD4sB,EAAgBD,EAAuB3sB,EAAQ,QAE/C8sB,EAAaH,EAAuB3sB,EAAQ,OAE5C+sB,EAA8BJ,EAAuB3sB,EAAQ,QAE7DgtB,EAAmBL,EAAuB3sB,EAAQ,QAElDwuB,EAAgBxuB,EAAQ,OAE5B,SAASktB,EAAaC,GAAW,IAAIC,EAErC,WAAuC,GAAuB,qBAAZ1E,UAA4BA,QAAQ2E,UAAW,OAAO,EAAO,GAAI3E,QAAQ2E,UAAUC,KAAM,OAAO,EAAO,GAAqB,oBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhFlvE,QAAQ/H,UAAU8gE,QAAQn6D,KAAKyrE,QAAQ2E,UAAUhvE,QAAS,IAAI,WAAc,MAAW,CAAmC,CAA3B,MAAO/C,GAAK,OAAO,CAAQ,CAAE,CAFxQkyE,GAA6B,OAAO,WAAkC,IAAuDh6D,EAAnDi6D,GAAQ,EAAIT,EAAgB,SAAaG,GAAkB,GAAIC,EAA2B,CAAE,IAAIM,GAAY,EAAIV,EAAgB,SAAalrE,MAAMzL,YAAamd,EAASk1D,QAAQ2E,UAAUI,EAAO9V,UAAW+V,EAAa,MAAQl6D,EAASi6D,EAAMjT,MAAM14D,KAAM61D,WAAc,OAAO,EAAIoV,EAA2B,SAAajrE,KAAM0R,EAAU,CAAG,CAI5d,IAAIi7D,EAAsC,SAAU5pE,EAAGvJ,GACrD,IAAI8O,EAAI,CAAC,EAET,IAAK,IAAIiC,KAAKxH,EACR1O,OAAOG,UAAU0G,eAAeC,KAAK4H,EAAGwH,IAAM/Q,EAAEo8B,QAAQrrB,GAAK,IAAGjC,EAAEiC,GAAKxH,EAAEwH,IAG/E,GAAS,MAALxH,GAAqD,oBAAjC1O,OAAOu4E,sBAA2C,KAAIj0E,EAAI,EAAb,IAAgB4R,EAAIlW,OAAOu4E,sBAAsB7pE,GAAIpK,EAAI4R,EAAE3W,OAAQ+E,IAClIa,EAAEo8B,QAAQrrB,EAAE5R,IAAM,GAAKtE,OAAOG,UAAUq4E,qBAAqB1xE,KAAK4H,EAAGwH,EAAE5R,MAAK2P,EAAEiC,EAAE5R,IAAMoK,EAAEwH,EAAE5R,IADP,CAGzF,OAAO2P,CACR,EAGGwkE,EAA4B,SAAUC,IACxC,EAAI/B,EAAU,SAAa8B,EAAcC,GAEzC,IAAIhB,EAASX,EAAa0B,GAW1B,SAASA,EAAaE,GACpB,IAAIC,EAEAnjD,EAAU+rC,UAAUjiE,OAAS,QAAsB0F,IAAjBu8D,UAAU,GAAmBA,UAAU,GAAK,sBAE9EqX,EAAKrX,UAAUjiE,OAAS,QAAsB0F,IAAjBu8D,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAE1EyW,EAAsBzW,UAAUjiE,OAAS,EAAIiiE,UAAU,QAAKv8D,GAChE,EAAIyxE,EAAgB,SAAa/qE,KAAM8sE,GAEvC,IAAIK,EAAiBD,EAAG3+B,YACpBA,OAAiC,IAAnB4+B,GAAmCA,EACjDC,EAAeF,EAAGhB,UAClBA,OAA6B,IAAjBkB,GAAiCA,EAC7CC,EAAwBH,EAAGd,mBAC3BA,OAA+C,IAA1BiB,EAAmC,IAAOA,EAC/DC,EAAoBJ,EAAG1+B,eACvBA,OAAuC,IAAtB8+B,EAA+B,EAAIA,EACpDC,EAAeZ,EAAOO,EAAI,CAAC,cAAe,YAAa,qBAAsB,mBAyBjF,OAvBAD,EAAQlB,EAAO5wE,KAAK6E,OACdgtE,iBAAmBA,EACzBC,EAAMO,MAAQ,CAAC,EACfP,EAAMQ,OAAS,EACfR,EAAMnjD,QAAUA,EAChBmjD,EAAM1+B,YAAcA,EACpB0+B,EAAMS,OAAQ,EACdT,EAAMf,UAAYA,EAClBe,EAAMb,mBAAqBA,EAC3Ba,EAAMz+B,eAAiBA,EACvBy+B,EAAMM,aAAeA,EACrBN,EAAMU,mBAAqB,EAE3BV,EAAMX,oBAAsBA,GAAuB,WACjD,QAASW,EAAMQ,MAChB,EAEGR,EAAM1+B,aAAa0+B,EAAMW,SAASX,EAAMnjD,QAASz1B,OAAOI,OAAO,CACjE85C,YAAa0+B,EAAM1+B,YACnB29B,UAAWe,EAAMf,UACjBE,mBAAoBa,EAAMb,mBAC1B59B,eAAgBy+B,EAAMz+B,gBACrBy+B,EAAMM,eACFN,CACR,CAgXD,OAxWA,EAAInC,EAAa,SAAagC,EAAc,CAAC,CAC3Cl4D,IAAK,UACL3Y,MAAO,WACD+D,KAAK6tE,QAET7tE,KAAK4tE,SAAS5tE,KAAK8pB,QAASz1B,OAAOI,OAAO,CACxC85C,YAAavuC,KAAKuuC,YAClB29B,UAAWlsE,KAAKksE,UAChBE,mBAAoBpsE,KAAKosE,mBACzB59B,eAAgBxuC,KAAKwuC,gBACpBxuC,KAAKutE,cACT,GAWA,CACD34D,IAAK,OACL3Y,MAAO,SAAcsxC,EAAQ7S,EAAQozC,EAASC,GAC5C,IAAIC,EAAShuE,KAOb,OALK+tE,GAAW,YAAa,EAAItB,EAAQ,SAAaqB,KACpDC,EAAUD,EACVA,EAAU,MAGL,IAAIt1C,SAAQ,SAAUC,EAASsU,GACpC,IAAKihC,EAAON,MAAO,OAAO3gC,EAAO,IAAIh4C,MAAM,qBAE3C,IAAI04E,EAASO,EAAO1B,oBAAoB/+B,EAAQ7S,GAE5Cr6B,EAAU,CACZ2/B,QAAS,MACTuN,OAAQA,EACR7S,OAAQA,GAAU,KAClBuF,GAAIwtC,GAGNO,EAAOH,OAAOI,KAAKv1D,KAAKC,UAAUtY,GAAU0tE,GAAS,SAAUvzD,GAC7D,GAAIA,EAAO,OAAOuyB,EAAOvyB,GACzBwzD,EAAOR,MAAMC,GAAU,CACrBS,QAAS,CAACz1C,EAASsU,IAGjB+gC,IACFE,EAAOR,MAAMC,GAAQK,QAAUp1C,YAAW,kBACjCs1C,EAAOR,MAAMC,GACpB1gC,EAAO,IAAIh4C,MAAM,iBAClB,GAAE+4E,GAEN,GACF,GACF,GAQA,CACDl5D,IAAK,QACL3Y,MAAO,WACL,IAAIkyE,GAAS,EAAI3B,EAAkB,SAA2BD,EAAY,QAAY6B,MAAK,SAASC,EAAQ3zC,GAC1G,IAAI4zC,EACJ,OAAO/B,EAAY,QAAYgC,MAAK,SAAkBC,GACpD,OACE,OAAQA,EAAS7a,KAAO6a,EAAS11D,MAC/B,KAAK,EAEH,OADA01D,EAAS11D,KAAO,EACT9Y,KAAK7E,KAAK,YAAau/B,GAEhC,KAAK,EAGH,GAFA4zC,EAAOE,EAASC,KAEN,CACRD,EAAS11D,KAAO,EAChB,KACD,CAED,MAAM,IAAI/jB,MAAM,yBAElB,KAAK,EACH,OAAOy5E,EAASE,OAAO,SAAUJ,GAEnC,KAAK,EACL,IAAK,MACH,OAAOE,EAASG,OAGvB,GAAEN,EAASruE,KACb,KAMD,OAJA,SAAe6N,GACb,OAAOsgE,EAAOzV,MAAM14D,KAAM61D,UAC3B,CAGF,CApCM,IA2CN,CACDjhD,IAAK,cACL3Y,MAAO,WACL,IAAI2yE,GAAe,EAAIpC,EAAkB,SAA2BD,EAAY,QAAY6B,MAAK,SAASS,IACxG,OAAOtC,EAAY,QAAYgC,MAAK,SAAmBO,GACrD,OACE,OAAQA,EAAUnb,KAAOmb,EAAUh2D,MACjC,KAAK,EAEH,OADAg2D,EAAUh2D,KAAO,EACV9Y,KAAK7E,KAAK,iBAEnB,KAAK,EACH,OAAO2zE,EAAUJ,OAAO,SAAUI,EAAUL,MAE9C,KAAK,EACL,IAAK,MACH,OAAOK,EAAUH,OAGxB,GAAEE,EAAU7uE,KACd,KAMD,OAJA,WACE,OAAO4uE,EAAalW,MAAM14D,KAAM61D,UACjC,CAGF,CAzBM,IAkCN,CACDjhD,IAAK,SACL3Y,MAAO,SAAgBsxC,EAAQ7S,GAC7B,IAAIq0C,EAAS/uE,KAEb,OAAO,IAAIw4B,SAAQ,SAAUC,EAASsU,GACpC,IAAKgiC,EAAOrB,MAAO,OAAO3gC,EAAO,IAAIh4C,MAAM,qBAC3C,IAAIsL,EAAU,CACZ2/B,QAAS,MACTuN,OAAQA,EACR7S,OAAQA,GAAU,MAGpBq0C,EAAOlB,OAAOI,KAAKv1D,KAAKC,UAAUtY,IAAU,SAAUma,GACpD,GAAIA,EAAO,OAAOuyB,EAAOvyB,GACzBie,GACD,GACF,GACF,GASA,CACD7jB,IAAK,YACL3Y,MAAO,WACL,IAAI+yE,GAAa,EAAIxC,EAAkB,SAA2BD,EAAY,QAAY6B,MAAK,SAASa,EAASC,GAC/G,IAAIx9D,EACJ,OAAO66D,EAAY,QAAYgC,MAAK,SAAmBY,GACrD,OACE,OAAQA,EAAUxb,KAAOwb,EAAUr2D,MACjC,KAAK,EAGH,MAFqB,kBAAVo2D,IAAoBA,EAAQ,CAACA,IACxCC,EAAUr2D,KAAO,EACV9Y,KAAK7E,KAAK,SAAU+zE,GAE7B,KAAK,EAGH,GAFAx9D,EAASy9D,EAAUV,KAEI,kBAAVS,GAAwC,OAAlBx9D,EAAOw9D,GAAkB,CAC1DC,EAAUr2D,KAAO,EACjB,KACD,CAED,MAAM,IAAI/jB,MAAM,mCAAqCm6E,EAAQ,WAAax9D,EAAOw9D,IAEnF,KAAK,EACH,OAAOC,EAAUT,OAAO,SAAUh9D,GAEpC,KAAK,EACL,IAAK,MACH,OAAOy9D,EAAUR,OAGxB,GAAEM,EAAUjvE,KACd,KAMD,OAJA,SAAmBovE,GACjB,OAAOJ,EAAWtW,MAAM14D,KAAM61D,UAC/B,CAGF,CArCM,IA8CN,CACDjhD,IAAK,cACL3Y,MAAO,WACL,IAAIozE,GAAe,EAAI7C,EAAkB,SAA2BD,EAAY,QAAY6B,MAAK,SAASkB,EAASJ,GACjH,IAAIx9D,EACJ,OAAO66D,EAAY,QAAYgC,MAAK,SAAmBgB,GACrD,OACE,OAAQA,EAAU5b,KAAO4b,EAAUz2D,MACjC,KAAK,EAGH,MAFqB,kBAAVo2D,IAAoBA,EAAQ,CAACA,IACxCK,EAAUz2D,KAAO,EACV9Y,KAAK7E,KAAK,UAAW+zE,GAE9B,KAAK,EAGH,GAFAx9D,EAAS69D,EAAUd,KAEI,kBAAVS,GAAwC,OAAlBx9D,EAAOw9D,GAAkB,CAC1DK,EAAUz2D,KAAO,EACjB,KACD,CAED,MAAM,IAAI/jB,MAAM,4CAA8C2c,GAEhE,KAAK,EACH,OAAO69D,EAAUb,OAAO,SAAUh9D,GAEpC,KAAK,EACL,IAAK,MACH,OAAO69D,EAAUZ,OAGxB,GAAEW,EAAUtvE,KACd,KAMD,OAJA,SAAqBwvE,GACnB,OAAOH,EAAa3W,MAAM14D,KAAM61D,UACjC,CAGF,CArCM,IA8CN,CACDjhD,IAAK,QACL3Y,MAAO,SAAesiC,EAAM5+B,GAC1BK,KAAK6tE,OAAO14B,MAAM5W,GAAQ,IAAM5+B,EACjC,GAUA,CACDiV,IAAK,WACL3Y,MAAO,SAAkB6tB,EAASxQ,GAChC,IAAIm2D,EAASzvE,KAEbA,KAAK6tE,OAAS7tE,KAAKgtE,iBAAiBljD,EAASxQ,GAC7CtZ,KAAK6tE,OAAO6B,iBAAiB,QAAQ,WACnCD,EAAO/B,OAAQ,EAEf+B,EAAO/L,KAAK,QAEZ+L,EAAO9B,mBAAqB,CAC7B,IACD3tE,KAAK6tE,OAAO6B,iBAAiB,WAAW,SAAUnQ,GAChD,IAAIl/D,EAAUk/D,EAAK5/D,KACfU,aAAmBy0D,cAAaz0D,EAAUioB,OAAO70B,KAAK4M,GAASjD,YAEnE,IACEiD,EAAUqY,KAAKiyD,MAAMtqE,EAGtB,CAFC,MAAOma,GACP,MACD,CAGD,GAAIna,EAAQw1C,cAAgB45B,EAAOE,UAAUtvE,EAAQw1C,cAAcjiD,OAAQ,CACzE,IAAKS,OAAOonB,KAAKpb,EAAQq6B,QAAQ9mC,OAAQ,OAAO67E,EAAO/L,KAAKrjE,EAAQw1C,cACpE,IAAIpmB,EAAO,CAACpvB,EAAQw1C,cACpB,GAAIx1C,EAAQq6B,OAAOnmC,cAAgBF,OAAQo7B,EAAK72B,KAAKyH,EAAQq6B,aAC3D,IAAK,IAAI/hC,EAAI,EAAGA,EAAI0H,EAAQq6B,OAAO9mC,OAAQ+E,IACzC82B,EAAK72B,KAAKyH,EAAQq6B,OAAO/hC,IAI7B,OAAO6/B,QAAQC,UAAU+W,MAAK,WAC5BigC,EAAO/L,KAAKhL,MAAM+W,EAAQhgD,EAC3B,GACF,CAED,IAAKggD,EAAOjC,MAAMntE,EAAQ4/B,IAExB,OAAI5/B,EAAQktC,QAAUltC,EAAQq6B,OAErBlC,QAAQC,UAAU+W,MAAK,WAC5BigC,EAAO/L,KAAKrjE,EAAQktC,OAAQltC,EAAQq6B,OACrC,SAGH,EAIE,UAAWr6B,IAAY,WAAYA,GAASovE,EAAOjC,MAAMntE,EAAQ4/B,IAAIiuC,QAAQ,GAAG,IAAIn5E,MAAM,+FAC1F06E,EAAOjC,MAAMntE,EAAQ4/B,IAAI6tC,SAASp8B,aAAa+9B,EAAOjC,MAAMntE,EAAQ4/B,IAAI6tC,SACxEztE,EAAQma,MAAOi1D,EAAOjC,MAAMntE,EAAQ4/B,IAAIiuC,QAAQ,GAAG7tE,EAAQma,OAAYi1D,EAAOjC,MAAMntE,EAAQ4/B,IAAIiuC,QAAQ,GAAG7tE,EAAQqR,eAChH+9D,EAAOjC,MAAMntE,EAAQ4/B,GAC7B,IACDjgC,KAAK6tE,OAAO6B,iBAAiB,SAAS,SAAUl1D,GAC9C,OAAOi1D,EAAO/L,KAAK,QAASlpD,EAC7B,IACDxa,KAAK6tE,OAAO6B,iBAAiB,SAAS,SAAU/P,GAC9C,IAAIphC,EAAOohC,EAAMphC,KACbqxC,EAASjQ,EAAMiQ,OACfH,EAAO/B,OACTh1C,YAAW,WACT,OAAO+2C,EAAO/L,KAAK,QAASnlC,EAAMqxC,EACnC,GAAE,GACLH,EAAO/B,OAAQ,EACf+B,EAAO5B,YAASv0E,EACH,MAATilC,IACJkxC,EAAO9B,qBACH8B,EAAOvD,YAAcuD,EAAOjhC,eAAiBihC,EAAO9B,oBAAgD,IAA1B8B,EAAOjhC,iBAAuB9V,YAAW,WACrH,OAAO+2C,EAAO7B,SAAS9jD,EAASxQ,EACjC,GAAEm2D,EAAOrD,oBACX,GACF,KAEIU,CACR,CA3a+B,CA2a9BJ,EAAcmD,cAEhBjyE,EAAiB,QAAIkvE,sCCzdrB,IAAIjC,EAAyB3sB,EAAQ,OAErC7pD,OAAOo2B,eAAe7sB,EAAS,aAAc,CAC3C3B,OAAO,IAET2B,EAAiB,QA4GjB,SAAkBksB,EAASxQ,GACzB,OAAO,IAAIw2D,EAAqBhmD,EAASxQ,EAC1C,EA5GD,IAAIyxD,EAAmBF,EAAuB3sB,EAAQ,QAElD4sB,EAAgBD,EAAuB3sB,EAAQ,QAE/C8sB,EAAaH,EAAuB3sB,EAAQ,OAE5C+sB,EAA8BJ,EAAuB3sB,EAAQ,QAE7DgtB,EAAmBL,EAAuB3sB,EAAQ,QAItD,SAASktB,EAAaC,GAAW,IAAIC,EAErC,WAAuC,GAAuB,qBAAZ1E,UAA4BA,QAAQ2E,UAAW,OAAO,EAAO,GAAI3E,QAAQ2E,UAAUC,KAAM,OAAO,EAAO,GAAqB,oBAAVC,MAAsB,OAAO,EAAM,IAAsF,OAAhFlvE,QAAQ/H,UAAU8gE,QAAQn6D,KAAKyrE,QAAQ2E,UAAUhvE,QAAS,IAAI,WAAc,MAAW,CAAmC,CAA3B,MAAO/C,GAAK,OAAO,CAAQ,CAAE,CAFxQkyE,GAA6B,OAAO,WAAkC,IAAuDh6D,EAAnDi6D,GAAQ,EAAIT,EAAgB,SAAaG,GAAkB,GAAIC,EAA2B,CAAE,IAAIM,GAAY,EAAIV,EAAgB,SAAalrE,MAAMzL,YAAamd,EAASk1D,QAAQ2E,UAAUI,EAAO9V,UAAW+V,EAAa,MAAQl6D,EAASi6D,EAAMjT,MAAM14D,KAAM61D,WAAc,OAAO,EAAIoV,EAA2B,SAAajrE,KAAM0R,EAAU,CAAG,CAI5d,IAAIo+D,EAAoC,SAAU/C,IAChD,EAAI/B,EAAU,SAAa8E,EAAsB/C,GAEjD,IAAIhB,EAASX,EAAa0E,GAS1B,SAASA,EAAqBhmD,EAASxQ,EAASy2D,GAC9C,IAAI9C,EAsBJ,OApBA,EAAIlC,EAAgB,SAAa/qE,KAAM8vE,IACvC7C,EAAQlB,EAAO5wE,KAAK6E,OACd6tE,OAAS,IAAIpjE,OAAOulE,UAAUlmD,EAASimD,GAE7C9C,EAAMY,OAAOoC,OAAS,WACpB,OAAOhD,EAAMvJ,KAAK,OACnB,EAEDuJ,EAAMY,OAAOqC,UAAY,SAAUhB,GACjC,OAAOjC,EAAMvJ,KAAK,UAAWwL,EAAMvvE,KACpC,EAEDstE,EAAMY,OAAOsC,QAAU,SAAU31D,GAC/B,OAAOyyD,EAAMvJ,KAAK,QAASlpD,EAC5B,EAEDyyD,EAAMY,OAAOuC,QAAU,SAAUlB,GAC/BjC,EAAMvJ,KAAK,QAASwL,EAAM3wC,KAAM2wC,EAAMU,OACvC,EAEM3C,CACR,CA2CD,OAhCA,EAAInC,EAAa,SAAagF,EAAsB,CAAC,CACnDl7D,IAAK,OACL3Y,MAAO,SAAc0D,EAAM0wE,EAAmB/iC,GAC5C,IAAIsI,EAAKtI,GAAY+iC,EAErB,IACErwE,KAAK6tE,OAAOI,KAAKtuE,GACjBi2C,GAGD,CAFC,MAAOp7B,GACPo7B,EAAGp7B,EACJ,CACF,GAUA,CACD5F,IAAK,QACL3Y,MAAO,SAAesiC,EAAMqxC,GAC1B5vE,KAAK6tE,OAAO14B,MAAM5W,EAAMqxC,EACzB,GACA,CACDh7D,IAAK,mBACL3Y,MAAO,SAA0Bmd,EAAMk3D,EAAUh3D,GAC/CtZ,KAAK6tE,OAAO6B,iBAAiBt2D,EAAMk3D,EAAUh3D,EAC9C,KAEIw2D,CACR,CAhFuC,CANpB5xB,EAAQ,OAsFZ2xB,qCC3GhB,IAAIU,EAAU,EAAQ,MAAR,GACdpyB,EAAOvgD,QAAU2yE,EAGjB,IACEC,mBAAqBD,CAOvB,CANE,MAAOE,GACmB,kBAAfjyC,WACTA,WAAWgyC,mBAAqBD,EAEhCG,SAAS,IAAK,yBAAdA,CAAwCH,EAE5C,qFCbe,SAASI,EAAyBrpC,EAAQspC,GACvD,GAAc,MAAVtpC,EAAgB,MAAO,CAAC,EAC5B,IACI1yB,EAAKjc,EADLghE,GAAS,OAA6BryB,EAAQspC,GAGlD,GAAIv8E,OAAOu4E,sBAAuB,CAChC,IAAIiE,EAAmBx8E,OAAOu4E,sBAAsBtlC,GAEpD,IAAK3uC,EAAI,EAAGA,EAAIk4E,EAAiBj9E,OAAQ+E,IACvCic,EAAMi8D,EAAiBl4E,GACnBi4E,EAASh7C,QAAQhhB,IAAQ,GACxBvgB,OAAOG,UAAUq4E,qBAAqB1xE,KAAKmsC,EAAQ1yB,KACxD+kD,EAAO/kD,GAAO0yB,EAAO1yB,GAEzB,CAEA,OAAO+kD,CACT,sCCHA,SAASmX,EAAQvpE,EAAGxI,EAAK0V,GACvB,OAAO1V,GAAOwI,GAAKA,GAAKkN,CACzB,CAMD,SAASs8D,EAAanrB,GACpB,QAAUtsD,IAANssD,EAAiB,MAAO,CAAC,EAC7B,GAAIA,IAAMvxD,OAAOuxD,GAAI,OAAOA,EAC5B,MAAMtyD,UAAU,2CACjB,mFA+HD,SAAS09E,EAAOC,GAEdjxE,KAAKixE,OAAS,GAAGh0E,MAAM9B,KAAK81E,EAC7B,CAEDD,EAAOx8E,UAAY,CAIjB08E,YAAa,WACX,OAAQlxE,KAAKixE,OAAOr9E,MACrB,EAUAojE,KAAM,WACL,OAAKh3D,KAAKixE,OAAOr9E,OAEToM,KAAKixE,OAAOj3E,SAjCA,CAkCpB,EASFm3E,QAAS,SAASC,GAChB,GAAIj4E,MAAMC,QAAQg4E,GAEhB,IADA,IAAIH,EAAsCG,EACnCH,EAAOr9E,QACZoM,KAAKixE,OAAOx7C,QAAQw7C,EAAOI,YAE7BrxE,KAAKixE,OAAOx7C,QAAQ27C,EAEvB,EASDx4E,KAAM,SAASw4E,GACb,GAAIj4E,MAAMC,QAAQg4E,GAEhB,IADA,IAAIH,EAAsCG,EACnCH,EAAOr9E,QACZoM,KAAKixE,OAAOr4E,KAAKq4E,EAAOj3E,cAE1BgG,KAAKixE,OAAOr4E,KAAKw4E,EAEpB,GAUH,IAAIxyE,GAAY,EAOhB,SAAS0yE,EAAa5J,EAAO6J,GAC3B,GAAI7J,EACF,MAAMp0E,UAAU,iBAClB,OAAOi+E,GAAkB,KAC1B,CA8Ba,IAAIC,EAAmB,QAUrC,SAAS/J,EAAYp3B,EAAU/2B,GAC7B,KAAMtZ,gBAAgBynE,GACpB,OAAO,IAAIA,EAAYp3B,EAAU/2B,GAGnC,IADA+2B,OAAwB/2C,IAAb+2C,EAAyB/yC,OAAO+yC,GAAU2lB,cAAgBwb,KACpDA,EACf,MAAM,IAAIz8E,MAAM,mDAElBukB,EAAUy3D,EAAaz3D,GAGvBtZ,KAAKyxE,YAAa,EAElBzxE,KAAK0xE,UAAW,EAEhB1xE,KAAK2xE,SAAW,KAEhB3xE,KAAK4xE,OAASr1E,QAAQ+c,EAAO,OAE7BtZ,KAAK6xE,WAAat1E,QAAQ+c,EAAO,WAEjCjlB,OAAOo2B,eAAezqB,KAAM,WAAY,CAAC/D,MAAO,UAChD5H,OAAOo2B,eAAezqB,KAAM,QAAS,CAAC/D,MAAO+D,KAAK4xE,SAClDv9E,OAAOo2B,eAAezqB,KAAM,YAAa,CAAC/D,MAAO+D,KAAK6xE,YACvD,CA4FD,SAAShyE,EAAYwwC,EAAU/2B,GAC7B,KAAMtZ,gBAAgBH,GACpB,OAAO,IAAIA,EAAYwwC,EAAU/2B,GAEnC,IADA+2B,OAAwB/2C,IAAb+2C,EAAyB/yC,OAAO+yC,GAAU2lB,cAAgBwb,KACpDA,EACf,MAAM,IAAIz8E,MAAM,mDAElBukB,EAAUy3D,EAAaz3D,GAGvBtZ,KAAKyxE,YAAa,EAElBzxE,KAAK8xE,SAAW,KAEhB9xE,KAAK+xE,SAAW,CAACrK,MAAOnrE,QAAQ+c,EAAO,QAEvCjlB,OAAOo2B,eAAezqB,KAAM,WAAY,CAAC/D,MAAO,SACjD,CA2DD,SAAS+1E,EAAY14D,GACnB,IAAIouD,EAAQpuD,EAAQouD,MAMMuK,EAAkB,EAClBC,EAAkB,EAClBC,EAAoB,EACpBC,EAAsB,IACtBC,EAAsB,IAShDryE,KAAK+/D,QAAU,SAASuS,EAAQC,GAG9B,IAxVoB,IAwVhBA,GAAgD,IAAtBJ,EAE5B,OADAA,EAAoB,EACbb,EAAa5J,GAItB,IA9VoB,IA8VhB6K,EACF,OAAO3zE,EAGT,GAA0B,IAAtBuzE,EAAyB,CAG3B,GAAIrB,EAAQyB,EAAM,EAAM,KAEtB,OAAOA,EAIT,GAAIzB,EAAQyB,EAAM,IAAM,KAGtBJ,EAAoB,EACpBF,EAAkBM,EAAO,SAItB,GAAIzB,EAAQyB,EAAM,IAAM,KAEd,MAATA,IACFH,EAAsB,KAEX,MAATG,IACFF,EAAsB,KAGxBF,EAAoB,EACpBF,EAAkBM,EAAO,QAItB,KAAIzB,EAAQyB,EAAM,IAAM,KAgB3B,OAAOjB,EAAa5J,GAdP,MAAT6K,IACFH,EAAsB,KAEX,MAATG,IACFF,EAAsB,KAGxBF,EAAoB,EACpBF,EAAkBM,EAAO,GAO1B,CAMD,OADAN,IAAsC,EAAIE,EACnC,IACR,CAID,IAAKrB,EAAQyB,EAAMH,EAAqBC,GAatC,OARAJ,EAAkBE,EAAoBD,EAAkB,EACxDE,EAAsB,IACtBC,EAAsB,IAGtBC,EAAOnB,QAAQoB,GAGRjB,EAAa5J,GAgBtB,GAXA0K,EAAsB,IACtBC,EAAsB,IAMtBJ,GAAoBM,EAAO,KAAU,GAAKJ,GAD1CD,GAAmB,IAKfA,IAAoBC,EACtB,OAAO,KAGT,IAAIK,EAAaP,EAOjB,OAHAA,EAAkBE,EAAoBD,EAAkB,EAGjDM,CACR,CACF,CAOD,SAASC,EAAYn5D,GACPA,EAAQouD,MAMpB1nE,KAAK+/D,QAAU,SAASuS,EAAQE,GAE9B,IAvdoB,IAudhBA,EACF,OAAO5zE,EAIT,GAAIkyE,EAAQ0B,EAAY,EAAQ,KAC9B,OAAOA,EAGT,IAAIj6E,EAAOrE,EAEP48E,EAAQ0B,EAAY,IAAQ,OAC9Bj6E,EAAQ,EACRrE,EAAS,KAGF48E,EAAQ0B,EAAY,KAAQ,QACnCj6E,EAAQ,EACRrE,EAAS,KAGF48E,EAAQ0B,EAAY,MAAS,WACpCj6E,EAAQ,EACRrE,EAAS,KAQX,IAHA,IAAI8J,EAAQ,EAAEw0E,GAAe,EAAIj6E,GAAUrE,GAGpCqE,EAAQ,GAAG,CAGhB,IAAIm6E,EAAOF,GAAe,GAAKj6E,EAAQ,GAGvCyF,EAAMpF,KAAK,IAAe,GAAP85E,GAGnBn6E,GAAS,CACV,CAGD,OAAOyF,CACR,CACF,CA1WDypE,EAAYjzE,UAAY,CAMtBkB,OAAQ,SAAgBmjB,EAAOS,GAC7B,IAAItb,EAEFA,EADmB,kBAAV6a,GAAsBA,aAAiBi8C,YACxC,IAAIzhE,WAAWwlB,GACG,kBAAVA,GAAsB,WAAYA,GACzCA,EAAMnlB,kBAAkBohE,YACzB,IAAIzhE,WAAWwlB,EAAMnlB,OACNmlB,EAAMllB,WACNklB,EAAMxZ,YAErB,IAAIhM,WAAW,GAGzBimB,EAAUy3D,EAAaz3D,GAElBtZ,KAAKyxE,aACRzxE,KAAK2xE,SAAW,IAAIK,EAAY,CAACtK,MAAO1nE,KAAK4xE,SAC7C5xE,KAAK0xE,UAAW,GAElB1xE,KAAKyxE,WAAal1E,QAAQ+c,EAAO,QASjC,IAPA,IAKI5H,EALAihE,EAAe,IAAI3B,EAAOhzE,GAE1B40E,EAAc,IAKVD,EAAazB,gBACnBx/D,EAAS1R,KAAK2xE,SAAS5R,QAAQ4S,EAAcA,EAAa3b,WAC3Cp4D,GAEA,OAAX8S,IAEAvY,MAAMC,QAAQsY,GAChBkhE,EAAYh6E,KAAK8/D,MAAMka,EAA0ClhE,GAEjEkhE,EAAYh6E,KAAK8Y,IAErB,IAAK1R,KAAKyxE,WAAY,CACpB,EAAG,CAED,IADA//D,EAAS1R,KAAK2xE,SAAS5R,QAAQ4S,EAAcA,EAAa3b,WAC3Cp4D,EACb,MACa,OAAX8S,IAEAvY,MAAMC,QAAQsY,GAChBkhE,EAAYh6E,KAAK8/D,MAAMka,EAA0ClhE,GAEjEkhE,EAAYh6E,KAAK8Y,GACpB,QAASihE,EAAazB,eACvBlxE,KAAK2xE,SAAW,IACjB,CAoBD,OAlBIiB,EAAYh/E,UAI4B,IAAtC,CAAC,SAASgiC,QAAQ51B,KAAKqwC,WACtBrwC,KAAK6xE,YAAe7xE,KAAK0xE,WAEL,QAAnBkB,EAAY,IACd5yE,KAAK0xE,UAAW,EAChBkB,EAAY54E,SAIZgG,KAAK0xE,UAAW,IAjQ1B,SAA4BkB,GAE1B,IADA,IAAI7vE,EAAI,GACCpK,EAAI,EAAGA,EAAIi6E,EAAYh/E,SAAU+E,EAAG,CAC3C,IAAIk6E,EAAKD,EAAYj6E,GACjBk6E,GAAM,MACR9vE,GAAKzF,OAAOm7D,aAAaoa,IAEzBA,GAAM,MACN9vE,GAAKzF,OAAOm7D,aAA0B,OAAZoa,GAAM,IACQ,OAAT,KAALA,IAE7B,CACD,OAAO9vE,CACR,CAyPU+vE,CAAmBF,EAC3B,GA8BH/yE,EAAYrL,UAAY,CAMtBmB,OAAQ,SAAgBo9E,EAAYz5D,GAClCy5D,EAAaA,EAAaz1E,OAAOy1E,GAAc,GAC/Cz5D,EAAUy3D,EAAaz3D,GAKlBtZ,KAAKyxE,aACRzxE,KAAK8xE,SAAW,IAAIW,EAAYzyE,KAAK+xE,WACvC/xE,KAAKyxE,WAAal1E,QAAQ+c,EAAO,QAMjC,IAJA,IAGI5H,EAHA1T,EAAQ,GACR20E,EAAe,IAAI3B,EA1Y3B,SAA4B11D,GAgB1B,IAZA,IAAIvY,EAAIzF,OAAOge,GAGXxd,EAAIiF,EAAEnP,OAGN+E,EAAI,EAGJkY,EAAI,GAGDlY,EAAImF,GAAG,CAGZ,IAAI4Q,EAAI3L,EAAE8kB,WAAWlvB,GAKrB,GAAI+V,EAAI,OAAUA,EAAI,MAEpBmC,EAAEjY,KAAK8V,QAIJ,GAAI,OAAUA,GAAKA,GAAK,MAE3BmC,EAAEjY,KAAK,YAIJ,GAAI,OAAU8V,GAAKA,GAAK,MAG3B,GAAI/V,IAAMmF,EAAI,EACZ+S,EAAEjY,KAAK,WAGJ,CAEH,IAAI4O,EAAI8T,EAAOuM,WAAWlvB,EAAI,GAG9B,GAAI,OAAU6O,GAAKA,GAAK,MAAQ,CAE9B,IAAID,EAAQ,KAAJmH,EAGJtb,EAAQ,KAAJoU,EAIRqJ,EAAEjY,KAAK,OAAW2O,GAAK,IAAMnU,GAG7BuF,GAAK,CACN,MAKCkY,EAAEjY,KAAK,MAEV,CAIHD,GAAK,CACN,CAGD,OAAOkY,CACR,CA6TiCmiE,CAAmBD,KAGzCJ,EAAazB,gBACnBx/D,EAAS1R,KAAK8xE,SAAS/R,QAAQ4S,EAAcA,EAAa3b,WAC3Cp4D,GAEXzF,MAAMC,QAAQsY,GAChB1T,EAAMpF,KAAK8/D,MAAM16D,EAAoC0T,GAErD1T,EAAMpF,KAAK8Y,GAEf,IAAK1R,KAAKyxE,WAAY,CACpB,MACE//D,EAAS1R,KAAK8xE,SAAS/R,QAAQ4S,EAAcA,EAAa3b,WAC3Cp4D,GAEXzF,MAAMC,QAAQsY,GAChB1T,EAAMpF,KAAK8/D,MAAM16D,EAAoC0T,GAErD1T,EAAMpF,KAAK8Y,GAEf1R,KAAK8xE,SAAW,IACjB,CACD,OAAO,IAAIz+E,WAAW2K,EACvB","sources":["../../src/Layout.ts","../node_modules/@noble/hashes/esm/_assert.js","../node_modules/@noble/hashes/esm/utils.js","../node_modules/@noble/hashes/esm/cryptoBrowser.js","../node_modules/@noble/hashes/esm/_sha2.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/sha512.js","../node_modules/@noble/ed25519/lib/esm/index.js","../node_modules/@noble/hashes/esm/sha256.js","../node_modules/superstruct/src/utils.ts","../node_modules/superstruct/src/error.ts","../node_modules/superstruct/src/struct.ts","../node_modules/superstruct/src/structs/utilities.ts","../node_modules/superstruct/src/structs/types.ts","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/superstruct/src/structs/coercions.ts","../node_modules/@noble/hashes/esm/sha3.js","../node_modules/@noble/hashes/esm/hmac.js","../node_modules/@noble/secp256k1/lib/esm/index.js","../node_modules/@solana/web3.js/src/utils/ed25519.ts","../node_modules/@solana/web3.js/src/utils/to-buffer.ts","../node_modules/@solana/web3.js/src/utils/borsh-schema.ts","../node_modules/@solana/web3.js/src/publickey.ts","../node_modules/@solana/web3.js/src/bpf-loader-deprecated.ts","../node_modules/@solana/web3.js/src/transaction/constants.ts","../node_modules/@solana/web3.js/src/transaction/expiry-custom-errors.ts","../node_modules/@solana/web3.js/src/message/account-keys.ts","../node_modules/@solana/web3.js/src/layout.ts","../node_modules/@solana/web3.js/src/utils/shortvec-encoding.ts","../node_modules/@solana/web3.js/src/utils/assert.ts","../node_modules/@solana/web3.js/src/transaction/legacy.ts","../node_modules/@solana/web3.js/src/message/compiled-keys.ts","../node_modules/@solana/web3.js/src/message/legacy.ts","../node_modules/@solana/web3.js/src/message/v0.ts","../node_modules/@solana/web3.js/src/sysvar.ts","../node_modules/@solana/web3.js/src/utils/send-and-confirm-transaction.ts","../node_modules/@solana/web3.js/src/utils/sleep.ts","../node_modules/@solana/web3.js/src/instruction.ts","../node_modules/@solana/web3.js/src/fee-calculator.ts","../node_modules/@solana/web3.js/src/utils/bigint.ts","../node_modules/@solana/web3.js/src/nonce-account.ts","../node_modules/@solana/web3.js/src/programs/system.ts","../node_modules/@solana/web3.js/src/loader.ts","../node_modules/@solana/web3.js/src/bpf-loader.ts","../node_modules/@solana/web3.js/node_modules/fast-stable-stringify/index.js","../node_modules/@solana/web3.js/src/epoch-schedule.ts","../node_modules/@solana/web3.js/src/errors.ts","../node_modules/@solana/web3.js/src/__forks__/browser/fetch-impl.ts","../node_modules/@solana/web3.js/src/programs/address-lookup-table/state.ts","../node_modules/@solana/web3.js/src/account-data.ts","../node_modules/@solana/web3.js/src/utils/makeWebsocketUrl.ts","../node_modules/@solana/web3.js/src/connection.ts","../node_modules/@solana/web3.js/src/keypair.ts","../node_modules/@solana/web3.js/src/programs/address-lookup-table/index.ts","../node_modules/@solana/web3.js/src/programs/compute-budget.ts","../node_modules/@solana/web3.js/src/programs/ed25519.ts","../node_modules/@solana/web3.js/src/utils/secp256k1.ts","../node_modules/@solana/web3.js/src/programs/secp256k1.ts","../node_modules/@solana/web3.js/src/programs/stake.ts","../node_modules/@solana/web3.js/src/programs/vote.ts","../node_modules/@solana/web3.js/src/validator-info.ts","../node_modules/@solana/web3.js/src/vote-account.ts","../node_modules/@solana/web3.js/node_modules/base-x/src/index.js","../node_modules/@solana/web3.js/node_modules/bn.js/lib/bn.js","../node_modules/@solana/web3.js/node_modules/bs58/index.js","../node_modules/@solana/web3.js/node_modules/buffer/index.js","../node_modules/@web3auth/solana-provider/src/rpc/JrpcClient.ts","../node_modules/@web3auth/solana-provider/src/rpc/solanaRpcMiddlewares.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/base/baseInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/base/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/injectedProviderProxy.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/slope/slopeInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/slope/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/solflare/solflareInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/solflare/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/sollet/solletInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/sollet/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/torus/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/torus/torusInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","../node_modules/@web3auth/solana-provider/src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","../node_modules/@web3auth/solana-provider/src/solanaWallet.ts","../node_modules/@web3auth/solana-provider/node_modules/base-x/src/index.js","../node_modules/@web3auth/solana-provider/node_modules/bs58/index.js","../node_modules/bigint-buffer/dist/browser.js","../node_modules/borsh/lib/index.js","../node_modules/borsh/node_modules/base-x/src/index.js","../node_modules/borsh/node_modules/bn.js/lib/bn.js","../node_modules/borsh/node_modules/bs58/index.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/rpc-websockets/dist/index.browser.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs"],"sourcesContent":[null,"export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n","export const crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst CU_O = BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989');\nconst CURVE = Object.freeze({\n    a: BigInt(-1),\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    P: BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949'),\n    l: CU_O,\n    n: CU_O,\n    h: BigInt(8),\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n});\nexport { CURVE };\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\nconst SQRT_D = BigInt('6853475219497561581579357271197624642482790079785650197046958215289687604742');\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, _1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    equals(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const X1Z2 = mod(X1 * Z2);\n        const X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2);\n        const Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { a } = CURVE;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(_2n * mod(Z1 * Z1));\n        const D = mod(a * A);\n        const x1y1 = X1 + Y1;\n        const E = mod(mod(x1y1 * x1y1) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1, t: T1 } = this;\n        const { x: X2, y: Y2, z: Z2, t: T2 } = other;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === _0n)\n            return this.double();\n        const C = mod(Z1 * _2n * T2);\n        const D = mod(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    precomputeWindow(W) {\n        const windows = 1 + 256 / W;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.ZERO;\n        const windows = 1 + 256 / W;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return ExtendedPoint.normalizeZ([p, f])[0];\n    }\n    multiply(scalar, affinePoint) {\n        return this.wNAF(normalizeScalar(scalar, CURVE.l), affinePoint);\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar, CURVE.l, false);\n        const G = ExtendedPoint.BASE;\n        const P0 = ExtendedPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (this.equals(P0) || n === _1n)\n            return this;\n        if (this.equals(G))\n            return this.wNAF(n);\n        let p = P0;\n        let d = this;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    isSmallOrder() {\n        return this.multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n    }\n    isTorsionFree() {\n        return this.multiplyUnsafe(CURVE.l).equals(ExtendedPoint.ZERO);\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const ax = mod(x * invZ);\n        const ay = mod(y * invZ);\n        const zz = mod(z * invZ);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n    fromRistrettoBytes() {\n        legacyRist();\n    }\n    toRistrettoBytes() {\n        legacyRist();\n    }\n    fromRistrettoHash() {\n        legacyRist();\n    }\n}\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, _1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(_0n, _1n, _1n, _0n);\nfunction assertExtPoint(other) {\n    if (!(other instanceof ExtendedPoint))\n        throw new TypeError('ExtendedPoint expected');\n}\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new TypeError('RistrettoPoint expected');\n}\nfunction legacyRist() {\n    throw new Error('Legacy method: switch to RistrettoPoint');\n}\nclass RistrettoPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + _1n) * ONE_MINUS_D_SQ);\n        let c = BigInt(-1);\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(_1n - s2);\n        const W3 = mod(_1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static hashToCurve(hex) {\n        hex = ensureBytes(hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex, 32);\n        const { a, d } = CURVE;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        if (!equalBytes(numberTo32BytesLE(s), hex) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2);\n        const u2 = mod(_1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ExtendedPoint(x, y, _1n, t));\n    }\n    toRawBytes() {\n        let { x, y, z, t } = this.ep;\n        const u1 = mod(mod(z + y) * mod(z - y));\n        const u2 = mod(x * y);\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberTo32BytesLE(s);\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    equals(other) {\n        assertRstPoint(other);\n        const a = this.ep;\n        const b = other.ep;\n        const one = mod(a.x * b.y) === mod(a.y * b.x);\n        const two = mod(a.y * b.y) === mod(a.x * b.x);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ExtendedPoint.ZERO);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hex, strict = true) {\n        const { d, P } = CURVE;\n        hex = ensureBytes(hex, 32);\n        const normed = hex.slice();\n        normed[31] = hex[31] & ~0x80;\n        const y = bytesToNumberLE(normed);\n        if (strict && y >= P)\n            throw new Error('Expected 0 < hex < P');\n        if (!strict && y >= POW_2_256)\n            throw new Error('Expected 0 < hex < 2**256');\n        const y2 = mod(y * y);\n        const u = mod(y2 - _1n);\n        const v = mod(d * y2 + _1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & _1n) === _1n;\n        const isLastByteOdd = (hex[31] & 0x80) !== 0;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        return (await getExtendedPublicKey(privateKey)).point;\n    }\n    toRawBytes() {\n        const bytes = numberTo32BytesLE(this.y);\n        bytes[31] |= this.x & _1n ? 0x80 : 0;\n        return bytes;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        const { y } = this;\n        const u = mod((_1n + y) * invert(_1n - y));\n        return numberTo32BytesLE(u);\n    }\n    isTorsionFree() {\n        return ExtendedPoint.fromAffine(this).isTorsionFree();\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex, 64);\n        const r = Point.fromHex(bytes.slice(0, 32), false);\n        const s = bytesToNumberLE(bytes.slice(32, 64));\n        return new Signature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!(r instanceof Point))\n            throw new Error('Expected Point instance');\n        normalizeScalar(s, CURVE.l, false);\n        return this;\n    }\n    toRawBytes() {\n        const u8 = new Uint8Array(64);\n        u8.set(this.r.toRawBytes());\n        u8.set(numberTo32BytesLE(this.s), 32);\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexport { ExtendedPoint, RistrettoPoint, Point, Signature };\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array list');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction numberTo32BytesBE(num) {\n    const length = 32;\n    const hex = num.toString(16).padStart(length * 2, '0');\n    return hexToBytes(hex);\n}\nfunction numberTo32BytesLE(num) {\n    return numberTo32BytesBE(num).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & _1n) === _1n;\n}\nfunction bytesToNumberLE(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    return BigInt('0x' + bytesToHex(Uint8Array.from(uint8a).reverse()));\n}\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & MAX_255B);\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= _0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const tmp = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = mod(acc * tmp[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return tmp;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const _5n = BigInt(5);\n    const _10n = BigInt(10);\n    const _20n = BigInt(20);\n    const _40n = BigInt(40);\n    const _80n = BigInt(80);\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, _2n) * b2) % P;\n    const b5 = (pow2(b4, _1n) * x) % P;\n    const b10 = (pow2(b5, _5n) * b5) % P;\n    const b20 = (pow2(b10, _10n) * b10) % P;\n    const b40 = (pow2(b20, _20n) * b20) % P;\n    const b80 = (pow2(b40, _40n) * b40) % P;\n    const b160 = (pow2(b80, _80n) * b80) % P;\n    const b240 = (pow2(b160, _80n) * b80) % P;\n    const b250 = (pow2(b240, _10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n) * x) % P;\n    return { pow_p_5_8, b2 };\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    const pow = pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow);\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(_1n, number);\n}\nfunction modlLE(hash) {\n    return mod(bytesToNumberLE(hash), CURVE.l);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hex, expectedLength) {\n    const bytes = hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n    if (typeof expectedLength === 'number' && bytes.length !== expectedLength)\n        throw new Error(`Expected ${expectedLength} bytes`);\n    return bytes;\n}\nfunction normalizeScalar(num, max, strict = true) {\n    if (!max)\n        throw new TypeError('Specify max value');\n    if (typeof num === 'number' && Number.isSafeInteger(num))\n        num = BigInt(num);\n    if (typeof num === 'bigint' && num < max) {\n        if (strict) {\n            if (_0n < num)\n                return num;\n        }\n        else {\n            if (_0n <= num)\n                return num;\n        }\n    }\n    throw new TypeError('Expected valid scalar: 0 < scalar < max');\n}\nfunction adjustBytes25519(bytes) {\n    bytes[0] &= 248;\n    bytes[31] &= 127;\n    bytes[31] |= 64;\n    return bytes;\n}\nfunction decodeScalar25519(n) {\n    return bytesToNumberLE(adjustBytes25519(ensureBytes(n, 32)));\n}\nfunction checkPrivateKey(key) {\n    key =\n        typeof key === 'bigint' || typeof key === 'number'\n            ? numberTo32BytesBE(normalizeScalar(key, POW_2_256))\n            : ensureBytes(key);\n    if (key.length !== 32)\n        throw new Error(`Expected 32 bytes`);\n    return key;\n}\nfunction getKeyFromHash(hashed) {\n    const head = adjustBytes25519(hashed.slice(0, 32));\n    const prefix = hashed.slice(32, 64);\n    const scalar = modlLE(head);\n    const point = Point.BASE.multiply(scalar);\n    const pointBytes = point.toRawBytes();\n    return { head, prefix, scalar, point, pointBytes };\n}\nlet _sha512Sync;\nfunction sha512s(...m) {\n    if (typeof _sha512Sync !== 'function')\n        throw new Error('utils.sha512Sync must be set to use sync methods');\n    return _sha512Sync(...m);\n}\nasync function getExtendedPublicKey(key) {\n    return getKeyFromHash(await utils.sha512(checkPrivateKey(key)));\n}\nfunction getExtendedPublicKeySync(key) {\n    return getKeyFromHash(sha512s(checkPrivateKey(key)));\n}\nexport async function getPublicKey(privateKey) {\n    return (await getExtendedPublicKey(privateKey)).pointBytes;\n}\nfunction getPublicKeySync(privateKey) {\n    return getExtendedPublicKeySync(privateKey).pointBytes;\n}\nexport async function sign(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = await getExtendedPublicKey(privateKey);\n    const r = modlLE(await utils.sha512(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(await utils.sha512(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction signSync(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = getExtendedPublicKeySync(privateKey);\n    const r = modlLE(sha512s(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(sha512s(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction prepareVerification(sig, message, publicKey) {\n    message = ensureBytes(message);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey, false);\n    const { r, s } = sig instanceof Signature ? sig.assertValidity() : Signature.fromHex(sig);\n    const SB = ExtendedPoint.BASE.multiplyUnsafe(s);\n    return { r, s, SB, pub: publicKey, msg: message };\n}\nfunction finishVerification(publicKey, r, SB, hashed) {\n    const k = modlLE(hashed);\n    const kA = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(k);\n    const RkA = ExtendedPoint.fromAffine(r).add(kA);\n    return RkA.subtract(SB).multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n}\nexport async function verify(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = await utils.sha512(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nfunction verifySync(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = sha512s(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nexport const sync = {\n    getExtendedPublicKey: getExtendedPublicKeySync,\n    getPublicKey: getPublicKeySync,\n    sign: signSync,\n    verify: verifySync,\n};\nexport async function getSharedSecret(privateKey, publicKey) {\n    const { head } = await getExtendedPublicKey(privateKey);\n    const u = Point.fromHex(publicKey).toX25519();\n    return curve25519.scalarMult(head, u);\n}\nPoint.BASE._setWindowSize(8);\nfunction cswap(swap, x_2, x_3) {\n    const dummy = mod(swap * (x_2 - x_3));\n    x_2 = mod(x_2 - dummy);\n    x_3 = mod(x_3 + dummy);\n    return [x_2, x_3];\n}\nfunction montgomeryLadder(pointU, scalar) {\n    const { P } = CURVE;\n    const u = normalizeScalar(pointU, P);\n    const k = normalizeScalar(scalar, P);\n    const a24 = BigInt(121665);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw;\n    for (let t = BigInt(255 - 1); t >= _0n; t--) {\n        const k_t = (k >> t) & _1n;\n        swap ^= k_t;\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        swap = k_t;\n        const A = x_2 + z_2;\n        const AA = mod(A * A);\n        const B = x_2 - z_2;\n        const BB = mod(B * B);\n        const E = AA - BB;\n        const C = x_3 + z_3;\n        const D = x_3 - z_3;\n        const DA = mod(D * A);\n        const CB = mod(C * B);\n        const dacb = DA + CB;\n        const da_cb = DA - CB;\n        x_3 = mod(dacb * dacb);\n        z_3 = mod(x_1 * mod(da_cb * da_cb));\n        x_2 = mod(AA * BB);\n        z_2 = mod(E * (AA + mod(a24 * E)));\n    }\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    const { pow_p_5_8, b2 } = pow_2_252_3(z_2);\n    const xp2 = mod(pow2(pow_p_5_8, BigInt(3)) * b2);\n    return mod(x_2 * xp2);\n}\nfunction encodeUCoordinate(u) {\n    return numberTo32BytesLE(mod(u, CURVE.P));\n}\nfunction decodeUCoordinate(uEnc) {\n    const u = ensureBytes(uEnc, 32);\n    u[31] &= 127;\n    return bytesToNumberLE(u);\n}\nexport const curve25519 = {\n    BASE_POINT_U: '0900000000000000000000000000000000000000000000000000000000000000',\n    scalarMult(privateKey, publicKey) {\n        const u = decodeUCoordinate(publicKey);\n        const p = decodeScalar25519(privateKey);\n        const pu = montgomeryLadder(u, p);\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    },\n    scalarMultBase(privateKey) {\n        return curve25519.scalarMult(privateKey, curve25519.BASE_POINT_U);\n    },\n};\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    getExtendedPublicKey,\n    mod,\n    invert,\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    hashToPrivateScalar: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        return mod(bytesToNumberLE(hash), CURVE.l - _1n) + _1n;\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.randomBytes(32);\n    },\n    sha512: async (...messages) => {\n        const message = concatBytes(...messages);\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_2n);\n        return cached;\n    },\n    sha512Sync: undefined,\n};\nObject.defineProperties(utils, {\n    sha512Sync: {\n        configurable: false,\n        get() {\n            return _sha512Sync;\n        },\n        set(val) {\n            if (!_sha512Sync)\n                _sha512Sync = val;\n        },\n    },\n});\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\n","import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number> = { [K in T]: K }\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string]\n  ? [T] extends [IsMatch<T, string>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number]\n  ? [T] extends [IsMatch<T, number>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assert.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        assert.exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        assert.exists(this, false);\n        assert.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assert.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        assert.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst ENDO = {\n    a1: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    b1: -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3'),\n    a2: BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8'),\n    b2: BigInt('0x3086d221a7d46bcde86c90e49284eb15'),\n    POW_2_128: BigInt('0x100000000000000000000000000000000'),\n};\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const { a1, b1, a2, b2, POW_2_128 } = ENDO;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.hashToPrivateKey(utils.randomBytes(40));\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","import {sha512} from '@noble/hashes/sha512';\nimport * as ed25519 from '@noble/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\ned25519.utils.sha512Sync = (...m) => sha512(ed25519.utils.concatBytes(...m));\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.sync.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.Point.fromHex(publicKey, true /* strict */);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sync.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sync.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.sync.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using acounter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. (All zeros)\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?: TransactionBlockhashCtor | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBuffer())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status =\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n      ? (\n          await connection.confirmTransaction(\n            {\n              signature: signature,\n              blockhash: transaction.recentBlockhash,\n              lastValidBlockHeight: transaction.lastValidBlockHeight,\n            },\n            options && options.commitment,\n          )\n        ).value\n      : (\n          await connection.confirmTransaction(\n            signature,\n            options && options.commitment,\n          )\n        ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  typeof SolanaJSONRPCErrorCode[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy = {\n  signature: TransactionSignature;\n} & BlockhashWithExpiryBlockHeight;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(url.startsWith('https:') /* useHttps */);\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n        source: optional(\n          union([literal('transaction'), literal('lookupTable')]),\n        ),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: BlockheightBasedTransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` using a `TransactionConfirmationConfig` */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy:\n      | BlockheightBasedTransactionConfirmationStrategy\n      | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config =\n        strategy as BlockheightBasedTransactionConfirmationStrategy;\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const subscriptionCommitment = commitment || this.commitment;\n    let timeoutId;\n    let subscriptionId;\n    let done = false;\n\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          rawSignature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            done = true;\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    const expiryPromise = new Promise<\n      | {__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED}\n      | {__type: TransactionStatus.TIMED_OUT; timeoutMs: number}\n    >(resolve => {\n      if (typeof strategy === 'string') {\n        let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n        switch (subscriptionCommitment) {\n          case 'processed':\n          case 'recent':\n          case 'single':\n          case 'confirmed':\n          case 'singleGossip': {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n          // exhaust enums to ensure full coverage\n          case 'finalized':\n          case 'max':\n          case 'root':\n        }\n\n        timeoutId = setTimeout(\n          () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n          timeoutMs,\n        );\n      } else {\n        let config =\n          strategy as BlockheightBasedTransactionConfirmationStrategy;\n        const checkBlockHeight = async () => {\n          try {\n            const blockHeight = await this.getBlockHeight(commitment);\n            return blockHeight;\n          } catch (_e) {\n            return -1;\n          }\n        };\n        (async () => {\n          let currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n          while (currentBlockHeight <= config.lastValidBlockHeight) {\n            await sleep(1000);\n            if (done) return;\n            currentBlockHeight = await checkBlockHeight();\n            if (done) return;\n          }\n          resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n        })();\n      }\n    });\n\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      switch (outcome.__type) {\n        case TransactionStatus.BLOCKHEIGHT_EXCEEDED:\n          throw new TransactionExpiredBlockheightExceededError(rawSignature);\n        case TransactionStatus.PROCESSED:\n          result = outcome.response;\n          break;\n        case TransactionStatus.TIMED_OUT:\n          throw new TransactionExpiredTimeoutError(\n            rawSignature,\n            outcome.timeoutMs / 1000,\n          );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta, version}) => ({\n        meta,\n        transaction: {\n          ...transaction,\n          message: versionedMessageFromResponse(version, transaction.message),\n        },\n        version,\n      })),\n    };\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(\n    commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block height information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, options);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration++;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._subscriptionsByHash[hash] = {\n        ...subscription,\n        state: 'pending',\n      };\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'subscribing',\n                };\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                };\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'pending',\n                };\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._subscriptionsByHash[hash] = {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  };\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._subscriptionsByHash[hash] = {\n                      ...subscription,\n                      state: 'subscribed',\n                    };\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'unsubscribed',\n                };\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {hmac} from '@noble/hashes/hmac';\nimport {sha256} from '@noble/hashes/sha256';\nimport * as secp256k1 from '@noble/secp256k1';\n\n// Supply a synchronous hashing algorithm to make this\n// library interoperable with the synchronous APIs in web3.js.\nsecp256k1.utils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n  const h = hmac.create(sha256, key);\n  msgs.forEach(msg => h.update(msg));\n  return h.digest();\n};\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.signSync>[0],\n  privKey: Parameters<typeof secp256k1.signSync>[1],\n) => secp256k1.signSync(msgHash, privKey, {der: false, recovered: true});\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"solana_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): JRPCMiddleware<unknown, unknown> {\n  return (\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<Omit<CustomChainConfig, \"chainNamespace\">>,\n    next: JRPCEngineNextCallback,\n    end: JRPCEngineEndCallback\n  ) => {\n    if (req.method === \"solana_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createConfigMiddleware(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): JRPCMiddleware<unknown, unknown> {\n  const { chainId } = providerConfig;\n\n  return mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig)]);\n}\n\nexport function createJsonRpcClient(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import type { Transaction } from \"@solana/web3.js\";\nimport { createAsyncMiddleware, JRPCMiddleware, JRPCRequest, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nexport interface IProviderHandlers {\n  requestAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getPrivateKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signTransaction: (req: JRPCRequest<{ message: Transaction }>) => Promise<Transaction>;\n  signAllTransactions: (req: JRPCRequest<{ message: Transaction[] }>) => Promise<Transaction[]>;\n  signAndSendTransaction: (req: JRPCRequest<{ message: Transaction }>) => Promise<{ signature: string }>;\n  getSecretKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signMessage: (req: JRPCRequest<{ message: Uint8Array; display?: string }>) => Promise<Uint8Array>;\n}\n\nexport function createGetAccountsMiddleware({ getAccounts }: { getAccounts: IProviderHandlers[\"getAccounts\"] }): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"getAccounts\") return next();\n\n    if (!getAccounts) throw new Error(\"WalletMiddleware - opts.getAccounts not provided\");\n    // This calls from the prefs controller\n    const accounts = await getAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createRequestAccountsMiddleware({\n  requestAccounts,\n}: {\n  requestAccounts: IProviderHandlers[\"requestAccounts\"];\n}): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"requestAccounts\") return next();\n\n    if (!requestAccounts) throw new Error(\"WalletMiddleware - opts.requestAccounts not provided\");\n    // This calls the UI login function\n    const accounts = await requestAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createGenericJRPCMiddleware<T, U>(\n  targetMethod: string,\n  handler: (req: JRPCRequest<T>) => Promise<U>\n): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware<T, unknown>(async (request, response, next) => {\n    const { method } = request;\n    if (method !== targetMethod) return next();\n\n    if (!handler) throw new Error(`WalletMiddleware - ${targetMethod} not provided`);\n\n    const result = await handler(request);\n\n    response.result = result;\n    return undefined;\n  });\n}\n\nexport function createSolanaMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const { getAccounts, requestAccounts, signTransaction, signAndSendTransaction, signAllTransactions, signMessage, getPrivateKey, getSecretKey } =\n    providerHandlers;\n\n  return mergeMiddleware([\n    createRequestAccountsMiddleware({ requestAccounts }),\n    createGetAccountsMiddleware({ getAccounts }),\n    createGenericJRPCMiddleware<{ message: Transaction }, Transaction>(\"signTransaction\", signTransaction),\n    createGenericJRPCMiddleware<{ message: Transaction }, { signature: string }>(\"signAndSendTransaction\", signAndSendTransaction),\n    createGenericJRPCMiddleware<{ message: Transaction[] }, Transaction[]>(\"signAllTransactions\", signAllTransactions),\n    createGenericJRPCMiddleware<{ message: Uint8Array }, Uint8Array>(\"signMessage\", signMessage),\n    createGenericJRPCMiddleware<void, string>(\"solanaPrivateKey\", getPrivateKey),\n    createGenericJRPCMiddleware<void, string>(\"solanaSecretKey\", getSecretKey),\n  ]);\n}\nexport interface AddSolanaChainParameter {\n  chainId: string; // A 0x-prefixed hexadecimal string\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string; // 2-6 characters long\n    decimals: 18;\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n}\n\nexport interface IChainSwitchHandlers {\n  addNewChainConfig: (req: JRPCRequest<AddSolanaChainParameter>) => Promise<void>;\n  switchSolanaChain: (req: JRPCRequest<{ chainId: string }>) => Promise<void>;\n}\nexport function createChainSwitchMiddleware({ addNewChainConfig, switchSolanaChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([\n    createGenericJRPCMiddleware<AddSolanaChainParameter, void>(\"addSolanaChain\", addNewChainConfig),\n    createGenericJRPCMiddleware<{ chainId: string }, void>(\"switchSolanaChain\", switchSolanaChain),\n  ]);\n}\n\nexport interface IAccountHandlers {\n  updatePrivatekey: (req: JRPCRequest<{ privateKey: string }>) => Promise<void>;\n}\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([createGenericJRPCMiddleware<{ privateKey: string }, void>(\"updateAccount\", updatePrivatekey)]);\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\n\nimport { createConfigMiddleware } from \"../../../rpc/JrpcClient\";\nimport { createSolanaMiddleware, IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport abstract class BaseInjectedProvider<P> extends BaseProvider<BaseProviderConfig, BaseProviderState, P> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async setupProvider(injectedProvider: P): Promise<void> {\n    const engine = new JRPCEngine();\n\n    const providerHandlers = this.getProviderHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    engine.push(solanaMiddleware);\n\n    const configMiddleware = createConfigMiddleware(this.config.chainConfig as CustomChainConfig);\n    engine.push(configMiddleware);\n\n    const injectedProviderProxy = this.getInjectedProviderProxy(injectedProvider);\n    if (injectedProviderProxy) {\n      engine.push(injectedProviderProxy);\n    }\n\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    const { chainConfig } = this.config;\n    this.update({\n      chainId: chainConfig.chainId,\n    });\n    return chainConfig.chainId || \"\";\n  }\n\n  protected getInjectedProviderProxy(_: P): JRPCMiddleware<unknown, unknown> {\n    return undefined;\n  }\n\n  protected abstract getProviderHandlers(injectedProvider: P): IProviderHandlers;\n}\n","import { Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getBaseProviderHandlers = (injectedProvider: IBaseWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : [];\n    },\n    getAccounts: async () => (injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : []),\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      const transaction = await injectedProvider.signTransaction(req.params.message);\n      return transaction;\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array; display?: \"utf8\" | \"hex\" }>): Promise<Uint8Array> => {\n      const sigData = await injectedProvider.signMessage(req.params.message, req.params.display);\n      return sigData.signature;\n    },\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transaction = await injectedProvider.signAllTransactions(req.params.message);\n      return transaction;\n    },\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      const txRes = await injectedProvider.signAndSendTransaction(req.params.message);\n      return { signature: txRes.signature };\n    },\n  };\n  return providerHandlers;\n};\n","import { createAsyncMiddleware, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\n\nimport { InjectedProvider } from \"./interface\";\n\nexport function createInjectedProviderProxyMiddleware(provider: InjectedProvider): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (req: JRPCRequest<unknown[]>, res: JRPCResponse<unknown>, _next: JRPCEngineNextCallback) => {\n    const result = await provider.request({\n      ...req,\n    });\n    res.result = result;\n  });\n}\n","import { JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nimport { IPhantomWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\n\nexport class PhantomInjectedProvider extends BaseInjectedProvider<IPhantomWalletProvider> {\n  protected getProviderHandlers(injectedProvider: IPhantomWalletProvider): IProviderHandlers {\n    return getBaseProviderHandlers(injectedProvider);\n  }\n\n  protected getInjectedProviderProxy(injectedProvider: IPhantomWalletProvider): JRPCMiddleware<unknown, unknown> {\n    return createInjectedProviderProxyMiddleware(injectedProvider);\n  }\n}\n","import { ISlopeProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSlopeHandlers } from \"./providerHandlers\";\n\nexport class SlopeInjectedProxyProvider extends BaseInjectedProvider<ISlopeProvider> {\n  protected getProviderHandlers(injectedProvider: ISlopeProvider): IProviderHandlers {\n    return getSlopeHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import { Connection, PublicKey, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ISlopeProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getSlopeHandlers = (injectedProvider: ISlopeProvider, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      const { data } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getAccounts: async () => {\n      const { data } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({ message: \"Invalid transaction message\" });\n      const { data } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, signature);\n      return txMessage;\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      const response = await injectedProvider.signMessage(req.params.message);\n      return bs58.decode(response.data.signature);\n    },\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      const provider = getProviderEngineProxy();\n      if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({ message: \"Invalid transaction message\" });\n      const { data } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, signature);\n      const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n      const conn = new Connection(chainConfig.rpcTarget);\n      const res = await conn.sendRawTransaction(txMessage.serialize());\n      return { signature: res };\n    },\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const allTxns = req.params.message;\n      const { length } = allTxns;\n\n      const unsignedTx = [];\n\n      for (let i = 0; i < length; i++) {\n        unsignedTx.push(bs58.encode(req.params.message[i].serializeMessage()));\n      }\n      const { msg, data } = await injectedProvider.signAllTransactions(unsignedTx);\n\n      if (!data.publicKey || data.signatures?.length !== length) throw new Error(msg);\n\n      const publicKey = new PublicKey(data.publicKey);\n\n      for (let i = 0; i < length; i++) {\n        const signature = bs58.decode(data.signatures[i]);\n        allTxns[i].addSignature(publicKey, signature);\n      }\n\n      return allTxns;\n    },\n  };\n  return providerHandlers;\n};\n","import { SolflareWallet } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSolflareHandlers } from \"./providerHandlers\";\n\nexport class SolflareInjectedProvider extends BaseInjectedProvider<SolflareWallet> {\n  protected getProviderHandlers(injectedProvider: SolflareWallet): IProviderHandlers {\n    return getSolflareHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import { Connection, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider, SolflareWallet } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\n\nexport const getSolflareHandlers = (injectedProvider: SolflareWallet, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const solflareProviderHandlers = getBaseProviderHandlers(injectedProvider as IBaseWalletProvider);\n  solflareProviderHandlers.signAndSendTransaction = async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return { signature: res };\n  };\n  return solflareProviderHandlers;\n};\n","import type SolletWallet from \"@project-serum/sol-wallet-adapter\";\n\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSolletHandlers } from \"./providerHandlers\";\n\nexport class SolletInjectedProvider extends BaseInjectedProvider<SolletWallet> {\n  protected getProviderHandlers(injectedProvider: SolletWallet): IProviderHandlers {\n    return getSolletHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import type SolletWallet from \"@project-serum/sol-wallet-adapter\";\nimport { Connection, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\n\nexport const getSolletHandlers = (injectedProvider: SolletWallet, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const providerHandlers = getBaseProviderHandlers(injectedProvider as IBaseWalletProvider);\n  providerHandlers.signMessage = async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n    const { signature } = await injectedProvider.sign(req.params.message, \"utf8\");\n    return signature;\n  };\n  providerHandlers.signAndSendTransaction = async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return { signature: res };\n  };\n  return providerHandlers;\n};\n","import { Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ITorusWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getTorusHandlers = (injectedProvider: ITorusWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      const accounts = await injectedProvider.request<string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getAccounts: async () => {\n      const accounts = await injectedProvider.request<string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const message = await injectedProvider.signMessage(req.params.message);\n      return message;\n    },\n\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.signTransaction(txMessage);\n      return response;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.sendTransaction(txMessage);\n      return { signature: response };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transactions = req.params.message;\n      const response = await injectedProvider.signAllTransactions(transactions);\n      return response;\n    },\n  };\n  return providerHandlers;\n};\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, isHexStrict, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ITorusWalletProvider } from \"../../../interface\";\nimport { createSolanaMiddleware } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\nimport { getTorusHandlers } from \"./providerHandlers\";\n\nexport class TorusInjectedProvider extends BaseProvider<BaseProviderConfig, BaseProviderState, ITorusWalletProvider> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async setupProvider(injectedProvider: ITorusWalletProvider): Promise<void> {\n    this.handleInjectedProviderUpdate(injectedProvider);\n    await this.setupEngine(injectedProvider);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this.provider) throw ethErrors.provider.custom({ message: \"Torus solana provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n\n    const connectedChainId = await this.provider.request<unknown, string>({\n      method: \"solana_chainId\",\n    });\n\n    const connectedHexChainId = isHexStrict(connectedChainId.toString()) ? connectedChainId : `0x${parseInt(connectedChainId, 10).toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.update({ chainId: connectedHexChainId });\n    this.provider.emit(\"connect\", { chainId: this.state.chainId });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return this.state.chainId;\n  }\n\n  private async setupEngine(injectedProvider: ITorusWalletProvider): Promise<void> {\n    const providerHandlers = getTorusHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n    const engine = new JRPCEngine();\n    engine.push(solanaMiddleware);\n    engine.push(injectedProviderProxy);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  private async handleInjectedProviderUpdate(injectedProvider: ITorusWalletProvider): Promise<void> {\n    injectedProvider.on(\"accountsChanged\", async (accounts: string[]) => {\n      this.provider.emit(\"accountsChanged\", accounts);\n    });\n    injectedProvider.on(\"chainChanged\", async (chainId: string) => {\n      const connectedHexChainId = isHexStrict(chainId) ? chainId : `0x${parseInt(chainId, 10).toString(16)}`;\n      // Check if chainId changed and trigger event\n      this.configure({\n        chainConfig: { ...this.config.chainConfig, chainId: connectedHexChainId },\n      });\n      await this.setupProvider(injectedProvider);\n    });\n  }\n}\n","import { Keypair, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport nacl from \"@toruslabs/tweetnacl-js\";\nimport { SafeEventEmitterProvider, WalletInitializationError } from \"@web3auth/base\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers } from \"../../rpc/solanaRpcMiddlewares\";\n\nexport async function getProviderHandlers({\n  privKey,\n  getProviderEngineProxy,\n}: {\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): Promise<IProviderHandlers> {\n  const keyPairGenerator = (): Keypair => {\n    return Keypair.fromSecretKey(Buffer.from(privKey, \"hex\"));\n  };\n  if (typeof privKey !== \"string\") throw WalletInitializationError.invalidParams(\"privKey must be a string\");\n  const keyPair = keyPairGenerator();\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return [keyPair.publicKey.toBase58()];\n    },\n    getAccounts: async () => [keyPair.publicKey.toBase58()],\n\n    getPrivateKey: async () => privKey,\n    getSecretKey: async () => bs58.encode(keyPair.secretKey),\n\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transaction = req.params.message;\n      transaction.partialSign(keyPair);\n      return transaction;\n    },\n\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const signedMsg = nacl.sign.detached(req.params.message, keyPair.secretKey);\n      return signedMsg;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const _providerEngineProxy = getProviderEngineProxy();\n      if (!_providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n\n      const transaction = req.params.message;\n      transaction.sign(keyPair);\n\n      const sig = await _providerEngineProxy.request<string>({\n        method: \"sendTransaction\",\n        params: [bs58.encode(transaction.serialize())],\n      });\n      return { signature: sig };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const txns = req.params?.message;\n      for (const tx of txns || []) {\n        const transaction = tx;\n        transaction.partialSign(keyPair);\n      }\n      return txns;\n    },\n  };\n\n  return providerHandlers;\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware, JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createJsonRpcClient } from \"../../rpc/JrpcClient\";\nimport {\n  AddSolanaChainParameter,\n  createAccountMiddleware,\n  createChainSwitchMiddleware,\n  createSolanaMiddleware,\n  IAccountHandlers,\n  IChainSwitchHandlers,\n} from \"../../rpc/solanaRpcMiddlewares\";\nimport { getProviderHandlers } from \"./solanaPrivateKeyUtils\";\n\nexport interface SolanaPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\nexport interface SolanaPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class SolanaPrivateKeyProvider extends BaseProvider<BaseProviderConfig, SolanaPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: SolanaPrivKeyProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<SolanaPrivateKeyProvider> => {\n    const providerFactory = new SolanaPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw ethErrors.provider.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request<unknown, string[]>({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const providerHandlers = await getProviderHandlers({ privKey, getProviderEngineProxy: this.getProviderEngineProxy.bind(this) });\n\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(this.getChainSwitchMiddleware());\n    engine.push(this.getAccountMiddleware());\n    engine.push(solanaMiddleware);\n    engine.push(networkMiddleware);\n\n    const provider = providerFromEngine(engine);\n\n    this.updateProviderEngineProxy(provider);\n\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<unknown, string>({ method: \"solanaPrivateKey\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<unknown, string[]>({ method: \"requestAccounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<unknown, string>({ method: \"solanaPrivateKey\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const health = await this._providerEngineProxy.request<unknown, string>({\n      method: \"getHealth\",\n      params: [],\n    });\n    const { chainConfig } = this.config;\n    if (health !== \"ok\")\n      throw WalletInitializationError.rpcConnectionError(`Failed to lookup network for following rpc target: ${chainConfig.rpcTarget}`);\n    this.update({ chainId: chainConfig.chainId });\n    if (this.state.chainId !== chainConfig.chainId) {\n      this.provider.emit(\"chainChanged\", this.state.chainId);\n      this.provider.emit(\"connect\", { chainId: this.state.chainId });\n    }\n    return this.state.chainId;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addNewChainConfig: async (req: JRPCRequest<AddSolanaChainParameter>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = req.params;\n\n        if (!chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n        if (!rpcUrls || rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n        if (!nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n        this.addChain({\n          chainNamespace: CHAIN_NAMESPACES.SOLANA,\n          chainId,\n          ticker: nativeCurrency?.symbol || \"SOL\",\n          tickerName: nativeCurrency?.name || \"Solana\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n        });\n      },\n      switchSolanaChain: async (req: JRPCRequest<{ chainId: string }>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n        await this.switchChain(req.params);\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (req: JRPCRequest<{ privateKey: string }>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n        const { privateKey } = req.params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","import { Transaction } from \"@solana/web3.js\";\nimport { RequestArguments, SafeEventEmitterProvider } from \"@web3auth/base\";\n\nimport { ISolanaWallet } from \"./interface\";\n\nexport class SolanaWallet implements ISolanaWallet {\n  public provider: SafeEventEmitterProvider;\n\n  constructor(provider: SafeEventEmitterProvider) {\n    this.provider = provider;\n  }\n\n  public async requestAccounts(): Promise<string[]> {\n    const accounts = await this.provider.request<string[]>({\n      method: \"requestAccounts\",\n      params: {},\n    });\n    return accounts;\n  }\n\n  public async signAndSendTransaction(transaction: Transaction): Promise<{ signature: string }> {\n    const { signature } = await this.provider.request<{ signature: string }>({\n      method: \"signAndSendTransaction\",\n      params: {\n        message: transaction,\n      },\n    });\n    return { signature };\n  }\n\n  public async signTransaction(transaction: Transaction): Promise<Transaction> {\n    const signedTransaction = (await this.provider.request({\n      method: \"signTransaction\",\n      params: {\n        message: transaction,\n      },\n    })) as Transaction;\n    return signedTransaction;\n  }\n\n  public async signAllTransactions(transactions: Transaction[]): Promise<Transaction[]> {\n    const signedTransactions = (await this.provider.request({\n      method: \"signAllTransactions\",\n      params: {\n        message: transactions,\n      },\n    })) as Transaction[];\n    return signedTransactions;\n  }\n\n  public async signMessage(data: Uint8Array): Promise<Uint8Array> {\n    const response = await this.provider.request<Uint8Array>({\n      method: \"signMessage\",\n      params: {\n        message: data,\n      },\n    });\n    return response as Uint8Array;\n  }\n\n  public async request<T>(args: RequestArguments): Promise<T> {\n    const result = await this.provider.request<T>(args);\n    return result as T;\n  }\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _websocket = _interopRequireDefault(require(\"./lib/client/websocket.browser\"));\n\nvar _client = _interopRequireDefault(require(\"./lib/client\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Client = /*#__PURE__*/function (_CommonClient) {\n  (0, _inherits2[\"default\"])(Client, _CommonClient);\n\n  var _super = _createSuper(Client);\n\n  function Client() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ws://localhost:8080\";\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$autoconnect = _ref.autoconnect,\n        autoconnect = _ref$autoconnect === void 0 ? true : _ref$autoconnect,\n        _ref$reconnect = _ref.reconnect,\n        reconnect = _ref$reconnect === void 0 ? true : _ref$reconnect,\n        _ref$reconnect_interv = _ref.reconnect_interval,\n        reconnect_interval = _ref$reconnect_interv === void 0 ? 1000 : _ref$reconnect_interv,\n        _ref$max_reconnects = _ref.max_reconnects,\n        max_reconnects = _ref$max_reconnects === void 0 ? 5 : _ref$max_reconnects;\n\n    var generate_request_id = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, Client);\n    return _super.call(this, _websocket[\"default\"], address, {\n      autoconnect: autoconnect,\n      reconnect: reconnect,\n      reconnect_interval: reconnect_interval,\n      max_reconnects: max_reconnects\n    }, generate_request_id);\n  }\n\n  return (0, _createClass2[\"default\"])(Client);\n}(_client[\"default\"]);\n\nexports.Client = Client;","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n"],"names":["checkUint8Array","b","Uint8Array","TypeError","uint8ArrayToBuffer","buffer_1","from","buffer","byteOffset","length","Layout","span","property","Number","isInteger","offset","RangeError","rv","Object","create","constructor","prototype","assign","values","nameWithProperty","name","lo","ExternalLayout","Error","GreedyCount","elementSpan","rem","Math","floor","src","OffsetLayout","layout","UInt","UIntBE","decode","encode","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","V2E32","pow","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","readUInt32LE","split","writeUInt32LE","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","count","isCount","idx","getSpan","i","push","elo","reduce","v","Structure","fields","decodePrefixes","Array","isArray","acc","undefined","fd","e","fsp","dest","makeDestinationObject","firstOffset","lastOffset","lastWrote","fv","shift","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","discriminator","replicate","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","hasOwnProperty","call","tag","dlo","clo","contentOffset","variant","VariantLayout","vb","union","fromArray","fixBitwiseResult","BitStructure","word","msb","value","_packedSetValue","_packedGetValue","bits","bf","BitField","Boolean","container","totalBits","usedBits","sum","valueMask","start","wordMask","wordValue","Blob","slice","srcBuffer","write","toString","CString","String","srcb","copy","UTF8","maxSpan","Constant","exports","number","n","isSafeInteger","bytes","lengths","includes","assert","bool","hash","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","output","out","min","u32","self","crypto","arr","Uint32Array","byteLength","createView","DataView","rotr","padStart","toBytes","data","str","TextEncoder","utf8ToBytes","Hash","this","_cloneInto","wrapConstructor","hashConstructor","hashC","message","update","digest","tmp","SHA2","padOffset","isLE","pos","view","len","take","set","subarray","process","dataView","roundClean","fill","setBigUint64","_32n","BigInt","_u32_max","wh","wl","h","l","setUint32","oview","get","forEach","digestInto","res","destroy","to","U32_MASK64","fromBig","le","u64","lst","Ah","Al","toBig","shrSH","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","map","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_256","SHA384","sha512","_0n","_1n","_2n","CU_O","CURVE","freeze","a","d","P","Gx","Gy","POW_2_256","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","ExtendedPoint","x","y","z","t","other","assertExtPoint","X1","Y1","Z1","X2","Y2","Z2","X1Z2","mod","X2Z1","Y1Z2","Y2Z1","A","B","C","D","x1y1","E","G","F","H","X3","Y3","T3","T1","T2","double","negate","W","windows","points","p","base","window","affinePoint","equals","BASE","Point","_WINDOW_SIZE","precomputes","pointPrecomputes","precomputeWindow","normalizeZ","ZERO","f","windowSize","mask","maxNumber","shiftBy","wbits","pr","cached","abs","scalar","wNAF","normalizeScalar","P0","multiplyUnsafe","invZ","invert","ax","ay","zz","legacyRist","toInv","nums","inverted","num","reduceRight","invertBatch","toAffine","toAffineBatch","fromAffine","assertRstPoint","RistrettoPoint","ep","u1","u2","u2sq","invsqrt","invertSqrt","D1","D2","zInv","edIsNegative","_x","_y","numberTo32BytesLE","bytesToHex","toRawBytes","toHex","one","two","subtract","multiply","r0","r","Ns","c","uvRatio","Ns_D_is_sq","isValid","s_","Nt","s2","W0","W1","W2","W3","hex","r1","bytes255ToNumberLE","ensureBytes","R1","calcElligatorRistrettoMap","r2","R2","emsg","b1","b2","equalBytes","u1_2","u2_2","I","Dx","Dy","WeakMap","delete","isTorsionFree","strict","normed","bytesToNumberLE","y2","u","isXOdd","isLastByteOdd","privateKey","getExtendedPublicKey","point","Signature","assertValidity","u8","fromHex","concatBytes","arrays","every","result","pad","hexes","uint8a","hexToBytes","array","j","hexByte","byte","parseInt","isNaN","numberTo32BytesBE","reverse","_sha512Sync","MAX_255B","modulo","q","m","gcd","pow2","power","pow_2_252_3","_5n","_10n","_20n","_40n","_80n","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","modlLE","expectedLength","max","adjustBytes25519","checkPrivateKey","key","getKeyFromHash","hashed","head","prefix","pointBytes","sha512s","utils","getExtendedPublicKeySync","prepareVerification","sig","publicKey","SB","pub","msg","finishVerification","k","kA","sync","getPublicKey","sign","R","verify","_setWindowSize","node","nodeCrypto","web","TORSION_SUBGROUP","hashToPrivateScalar","randomBytes","bytesLength","getRandomValues","randomPrivateKey","subtle","createHash","precompute","sha512Sync","defineProperties","configurable","val","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","s0","s1","sha256","toFailures","run","StructError","failure","failures","rest","path","join","isIterable","isObject","Symbol","iterator","print","JSON","stringify","shiftIterator","input","next","done","toFailure","context","struct","branch","type","refinement","options","coerce","ctx","coercer","schema","valid","validator","entries","ts","Map","Set","refiner","Struct","props","validate","is","tuples","tuple","error","define","Element","boolean","Class","literal","constant","description","never","nullable","optional","record","Key","Value","string","Elements","Never","keys","Structs","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","unknown","condition","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","round","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","Keccak","suffix","enableXOF","rounds","posOut","state","state32","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","keccakP","keccak","finish","bufferOut","writeInto","xofInto","gen","keccak_256","genShake","hashCons","opts","wrapConstructorWithOpts","dkLen","HMAC","_key","iHash","oHash","buf","getPrototypeOf","hmac","_3n","_8n","beta","weistrass","x2","x3","USE_ENDOMORPHISM","ShaError","JacobianPoint","Z1Z1","Z2Z2","U1","U2","S1","S2","x1b","HH","HHH","V","splitScalarEndo","k1neg","k1","k2neg","k2","k1p","k2p","fake","f1p","f2p","iz1","iz2","iz3","scratch","isCompressed","numTo32bStr","hasEvenY","isValidFieldElement","left","Q","aP","bQ","isShort","bytesToNumber","_6n","_11n","_22n","_23n","_44n","_88n","b3","b6","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","sqrtMod","isYOdd","header","fromCompressedHex","fromUncompressedHex","normalizePrivateKey","msgHash","signature","recovery","truncateHash","normalizeSignature","rinv","multiplyAndAddUnsafe","sliceDER","parseDERInt","isWithinCurveOrder","HALF","hasHighS","toDERHex","sHex","numberToHexUnpadded","rHex","rLen","sLen","toDERRawBytes","toCompactHex","hexToNumber","rBytesLeft","parseDERSignature","fromDER","numTo32b","_sha256Sync","_hmacSha256Sync","divNearest","ENDO","a1","a2","POW_2_128","c1","c2","delta","HmacDrbg","counter","hmacSha256","seed","checkSync","hmacSync","incr","kmdToSig","kBytes","fromCompact","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","h1","seedArgs","finalizeSig","recSig","canonical","der","recovered","normalizeS","toCompactRawBytes","TAGGED_HASH_PREFIXES","isValidPrivateKey","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","messages","importKey","ckey","createHmac","sha256Sync","hmacSha256Sync","taggedHash","tagP","charCodeAt","tagH","taggedHashSync","ed25519","generateKeypair","privateScalar","secretKey","isOnCurve","toBuffer","Buffer","properties","serialize","SOLANA_SCHEMA","deserialize","deserializeUnchecked","PUBLIC_KEY_LENGTH","uniquePublicKeyCounter","PublicKey","_bn","isPublicKeyData","decoded","bs58","BN","eq","toBase58","toJSON","toArrayLike","zeroPad","fromPublicKey","programId","publicKeyBytes","seeds","createProgramAddressSync","address","nonce","seedsWithNonce","concat","err","findProgramAddressSync","pubkeyData","default","kind","PACKET_DATA_SIZE","TransactionExpiredBlockheightExceededError","defineProperty","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","writable","readonly","index","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","pubkey","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","alloc","getAlloc","getItemAlloc","item","field","decodeLength","size","elem","encodeLength","rem_len","TransactionStatus","CompiledKeys","payer","keyMetaMap","getMessageComponents","mapEntries","writableSigners","filter","isSigner","isWritable","readonlySigners","writableNonSigners","readonlyNonSigners","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","extractTableLookup","lookupTable","drainKeysFoundInLookupTable","addresses","keyMeta","isInvoked","writableIndexes","drainedWritableKeys","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","getOrInsertDefault","payerKeyMeta","ix","accountMeta","Message","args","accountKeys","recentBlockhash","indexToProgramIds","account","accounts","getAccountKeys","isAccountSigner","isAccountWritable","numSignedAccounts","isProgramId","has","programIds","nonProgramIds","_","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","signDataLayout","transaction","signData","compile","payerKey","byteArray","accountCount","dataSlice","MessageV0","compiledInstructions","addressTableLookups","lookup","numAccountKeysFromLookups","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","tableLookup","tableAccount","find","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","compiledKeys","lookupTableAccounts","extractResult","addressTableLookup","maskedPrefix","splice","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","_message","_json","blockhash","nonceInstruction","signers","items","compileMessage","console","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeCompare","feePayerIndex","payerMeta","unshift","signedKeys","unsignedKeys","indexOf","invariant","_compile","pair","serializeMessage","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","_verifySignatures","requireAllSignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","minContextSlot","sendTransaction","confirmTransaction","status","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","blob","encodeDecode","bigIntLayout","toBigIntLE","bigInt","toBufferLE","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","SystemProgram","params","lamports","space","fromPubkey","newAccountPubkey","basePubkey","toPubkey","accountPubkey","createAccountWithSeed","noncePubkey","createAccount","initParams","nonceInitialize","authorized","instructionData","newAuthorizedPubkey","Loader","ceil","chunkSize","program","getMinimumBalanceForRentExemption","balanceNeeded","getAccountInfo","programInfo","executable","allocate","owner","transfer","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","all","objToString","objKeys","obj","isArrayProp","propVal","toStr","isFinite","returnVal","trailingZeros","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCError","customMessage","code","globalThis","fetch","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","typeIndex","decodeData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","extractCommitmentFromConfig","commitmentOrConfig","createRpcResult","pick","jsonrpc","id","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","version","response","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","source","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","rewardType","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","GetRecentPerformanceSamplesRpcResult","numTransactions","numSlots","samplePeriodSecs","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","COMMON_HTTP_HEADERS","Connection","endpoint","wsEndpoint","httpHeaders","fetchMiddleware","disableRetryOnRateLimit","client","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","confirmTransactionInitialTimeout","putativeUrl","test","assertEndpointUrl","matches","match","hostish","portWithColon","protocol","startsWith","startPort","websocketPort","makeWebsocketUrl","url","customFetch","fetchWithMiddleware","fetchImpl","info","init","reject","modifiedInfo","modifiedInit","modifiedFetchArgs","clientBrowser","RpcClient","request","callback","method","body","agent","headers","too_many_requests_retries","waitTime","log","statusText","text","ok","createRpcClient","requests","batch","methodName","createRpcBatchRequest","RpcWebSocketClient","autoconnect","max_reconnects","Infinity","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","_buildArgs","unsafeRes","getBalanceAndContext","then","catch","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","arg","mintAddress","getAccountInfoAndContext","publicKeys","getMultipleAccountsInfoAndContext","configOrCommitment","encoding","configWithoutEncoding","strategy","rawSignature","decodedSignature","subscriptionCommitment","confirmationPromise","subscriptionId","onSignature","__type","PROCESSED","expiryPromise","timeoutMs","timeoutId","TIMED_OUT","checkBlockHeight","getBlockHeight","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","race","outcome","clearTimeout","removeSignatureListener","startSlot","limit","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","wireMessage","getRecentBlockhashAndContext","getLatestBlockhashAndContext","rawConfig","_buildArgsAtLeastConfirmed","extra","block","endSlot","transactionDetails","getFirstAvailableBlock","firstAvailableBlock","getConfirmedBlockSignatures","until","getSlot","highestConfirmedRoot","before","getConfirmedSignaturesForAddress2","confirmedSignatureInfo","accountInfo","fromAccountData","getNonceAndContext","disableCache","timeSinceFetch","Date","now","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getLatestBlockhash","MS_PER_SLOT","transactionOrMessage","configOrSigners","includeAccounts","encodedTransaction","originalTx","_blockhashWithExpiryBlockHeight","sigVerify","logTrace","traceIndent","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","notify","_updateSubscriptions","clearInterval","close","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","cb","notification","_makeSubscription","subscriptionConfig","clientSubscriptionId","fastStableStringify","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","Keypair","keypair","_keypair","skipValidation","computedPublicKey","ii","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableProgram","recentSlot","lookupTableAddress","bumpSeed","addr","recipient","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","ComputeBudgetProgram","microLamports","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","fromSecretKey","createInstructionWithPublicKey","secp256k1","msgs","ecdsaSign","privKey","drbg","reseedSync","generateSync","publicKeyCreate","fromPrivateKey","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","substr","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","StakeProgram","Staker","Withdrawer","stakePubkey","lockup","staker","withdrawer","initialize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorityBase","authoritySeed","authorityOwner","splitStakePubkey","splitInstruction","sourceStakePubKey","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","VoteProgram","Voter","voteInit","authorizedVoter","authorizedWithdrawer","initializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyBasePubkey","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","voteAuthorizeWithSeedArgs","authorizedWithdrawerPubkey","currentVoteAccountBalance","rentExemptMinimum","withdraw","website","details","keybaseUsername","_Buffer","require","module","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","carry","it3","it4","vch","allocUnsafe","isBuffer","pbegin","pend","b58","it1","it2","repeat","inherits","ctor","superCtor","super_","TempCtor","endian","isBN","negative","words","red","_init","wordSize","parseHex4Bits","parseHexByte","lowerBound","parseBase","end","mul","move","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","w","off","_strip","limbLen","limbPow","imuln","_iaddn","_move","clone","_expand","_normSign","for","inspect","zeros","groupSizes","groupBases","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","smallMulTo","ncarry","rword","maxJ","ArrayType","reqLength","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","o","a0","al0","ah0","al1","ah1","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","bl1","bh1","bl2","bh2","bl3","bh3","bl4","bh4","bl5","bh5","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","andln","modn","egcd","g","isEven","yp","xp","im","isOdd","jm","_invmp","x1","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","minv","ireduce","rlen","imulK","strip","outLen","prev","mod3","nOne","lpow","inv","wnd","currentLen","mont","basex","base64","ieee754","customInspectSymbol","K_MAX_LENGTH","createBuffer","setPrototypeOf","encodingOrOffset","isEncoding","actual","fromString","ArrayBuffer","isView","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","checked","numberIsNaN","fromObject","toPrimitive","assertSize","mustMatch","arguments","loweredCase","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","units","utf16leToBytes","fromByteArray","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","enumerable","poolSize","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","toLocaleString","trim","target","thisStart","thisEnd","thisCopy","targetCopy","_arr","hexSliceLookupTable","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","readUintLE","readUintBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUint32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readInt8","readInt16LE","readInt16BE","readBigInt64LE","readBigInt64BE","writeUintLE","writeUintBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUint32BE","writeBigUInt64LE","writeBigUInt64BE","writeInt8","writeInt16LE","writeInt16BE","writeBigInt64LE","writeBigInt64BE","targetStart","copyWithin","errors","sym","getMessage","Base","stack","addNumericalSeparator","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","received","INVALID_BASE64_RE","leadSurrogate","toByteArray","base64clean","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","createChainIdMiddleware","chainId","req","createProviderConfigMiddleware","providerConfig","createConfigMiddleware","mergeMiddleware","createJsonRpcClient","rpcTarget","createFetchMiddleware","networkMiddleware","createGetAccountsMiddleware","_ref","getAccounts","createAsyncMiddleware","createRequestAccountsMiddleware","_ref2","requestAccounts","createGenericJRPCMiddleware","targetMethod","handler","createSolanaMiddleware","providerHandlers","signTransaction","signAndSendTransaction","signAllTransactions","signMessage","getPrivateKey","getSecretKey","BaseInjectedProvider","chainConfig","chainNamespace","CHAIN_NAMESPACES","injectedProvider","engine","JRPCEngine","getProviderHandlers","solanaMiddleware","configMiddleware","injectedProviderProxy","getInjectedProviderProxy","provider","providerFromEngine","updateProviderEngineProxy","lookupNetwork","BaseProvider","getBaseProviderHandlers","ethErrors","display","sigData","_req$params","_req$params2","txRes","createInjectedProviderProxyMiddleware","_next","PhantomInjectedProvider","SlopeInjectedProxyProvider","getProviderEngineProxy","txMessage","conn","allTxns","unsignedTx","getSlopeHandlers","SolflareInjectedProvider","solflareProviderHandlers","getSolflareHandlers","SolletInjectedProvider","getSolletHandlers","getTorusHandlers","_req$params3","_req$params4","_req$params5","TorusInjectedProvider","handleInjectedProviderUpdate","setupEngine","connectedChainId","connectedHexChainId","isHexStrict","WalletInitializationError","emit","configure","_objectSpread","setupProvider","keyPairGenerator","keyPair","signedMsg","nacl","_providerEngineProxy","txns","_req$params6","tx","SolanaPrivateKeyProvider","getChainSwitchMiddleware","getAccountMiddleware","getChainConfig","health","chainSwitchHandlers","addNewChainConfig","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","addChain","ticker","symbol","tickerName","displayName","blockExplorer","switchSolanaChain","switchChain","_ref3","createChainSwitchMiddleware","accountHandlers","updatePrivatekey","updateAccount","_ref4","createAccountMiddleware","providerFactory","SolanaWallet","_defineProperty","signedTransaction","signedTransactions","reversed","__createBinding","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","textDecoder","TextDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","fieldName","maybeResize","writeBuffer","writeU32","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","readBuffer","readU32","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","writeFixedArray","writeArray","writeU8","serializeStruct","addToFieldPath","borshSerialize","structSchema","deserializeField","reader","readFixedArray","readArray","readU8","deserializeStruct","classType","borshDeserialize","fieldValue","Writer","Reader","uuid","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","notificationIdNull","isBatch","hasCallback","_parseResponse","responseText","parse","isError","_interopRequireDefault","_createClass2","_classCallCheck2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_websocket","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","_isNativeReflectConstruct","Super","NewTarget","Client","_CommonClient","_super","_ref$autoconnect","_ref$reconnect","reconnect","_ref$reconnect_interv","reconnect_interval","_ref$max_reconnects","generate_request_id","_regenerator","_asyncToGenerator2","_typeof2","_eventemitter","__rest","getOwnPropertySymbols","propertyIsEnumerable","CommonClient","_EventEmitter","webSocketFactory","_this","_a","_a$autoconnect","_a$reconnect","_a$reconnect_interval","_a$max_reconnects","rest_options","queue","rpc_id","ready","current_reconnects","_connect","socket","timeout","ws_opts","_this2","send","promise","_login","mark","_callee","resp","wrap","_context","sent","abrupt","stop","_listMethods","_callee2","_context2","_this3","_subscribe","_callee3","event","_context3","_x2","_unsubscribe","_callee4","_context4","_x3","_this4","addEventListener","listeners","reason","EventEmitter","WebSocketBrowserImpl","protocols","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","listener","runtime","regeneratorRuntime","accidentalStrictMode","Function","_objectWithoutProperties","excluded","sourceSymbolKeys","inRange","ToDictionary","Stream","tokens","endOfStream","prepend","token","pop","decoderError","opt_code_point","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","UTF8Encoder","temp","input_stream","code_points","cp","codePointsToString","opt_string","stringToCodePoints"],"sourceRoot":""}